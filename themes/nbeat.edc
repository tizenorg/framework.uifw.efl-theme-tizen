/*
 *  nBeat-theme
 *
 * Copyright (c) 2000 - 2010 Samsung Electronics Co., Ltd.
 *
 * Contact: Seokjae Jeong <seok.j.jeong@samsung.com>, Myoungwoon Roy Kim <Myoungwoon.kim@samsung.com>, Jeonghyun Yun <jh0506.yun@samsung.com>, Jaehwan Kim <jae.hwan.kim@samsung.com>, 
 * 		Chuneon Park <chuneon.park@samsung.com>, Juyung Seo <juyung.seo@samsung.com>, Woohyun Jung <wh0705.jung@samsung.com>, Myungjae Lee <mjae.lee@samsung.com>, Hyoyoung Chang <hyoyoung.chang@samsung.com>, 
 *		Hyunsil Park <hyunsil.park@samsung.com>, Sohyun Kim <anna1014.kim@samsung.com>, Seunggyun Kim <sgyun.kim@samsung.com>
 * 
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the
 * Free Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 * 
 * This library is distributed in the hope that it will be useful, but WITHOUT ANY
 * WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public
 * License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this library; if not, write to the Free Software Foundation, Inc., 51
 * Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
 *
 */

// LICENSE NOTE:
// This file (and only this one) is licenses under public-domain. The reason
// is that this is meant to serve as a template for making your own themes and
// Elementary's LGPL license is not intended to follow. The images used do come
// under LGPL, but this file specifically for the structure of your theme is
// public-domain. This means you can take, use, re-license and otherwise
// have zero restrictions on using this file as a base for your theme.

// theme configuration file for each theme (nbeat, nbeat-blue, ...)
#include "inc/tmp-inc.edc"

#define INDICATOR_H		27
#define NAVI_BAR_H		67
#define TAB_BAR_H	   	86
#define TOOL_BAR_H	   	74
#define SOFTKEY_H 		72
#define SEGMENT_H		50
#define SEARCHBAR_H		67

externals {
   external: "elm";
}

collections {
#include "groups/actionslider.edc"
#include "groups/animatedicon.edc"
#include "groups/badge.edc"
#include "groups/bubble.edc"
#include "groups/button.edc"
#include "groups/calendar.edc"
#include "groups/check.edc"
#include "groups/colorpalette.edc"
#include "groups/colorselector.edc"
#include "groups/conformant.edc"
#include "groups/controlbar.edc"
#include "groups/ctxpopup.edc"
#include "groups/datefield.edc"
#include "groups/dayselector.edc"
#include "groups/dialoguegroup.edc"
#include "groups/editfield.edc"
#include "groups/entry.edc"
#include "groups/gengrid.edc"
#include "groups/genlist/genlist.edc"
#include "groups/imageslider.edc"
#include "groups/index.edc"
#include "groups/label.edc"
#include "groups/layout.edc"
#include "groups/map.edc"
#include "groups/multibuttonentry.edc"
//#include "groups/multisense_ui.edc"
#include "groups/navigationbar.edc"
#include "groups/navigationbar_ex.edc"
#include "groups/nocontents.edc"
#include "groups/pagecontrol.edc"
#include "groups/panes.edc"
#include "groups/photocam.edc"
#include "groups/popup.edc"
#include "groups/radio.edc"
#include "groups/searchbar.edc"
#include "groups/segmentedcontrol.edc"
#include "groups/selectioninfo.edc"
#include "groups/slider.edc"
#include "groups/slidingdrawer.edc"
#include "groups/stackedicon.edc"
#include "groups/tickernoti.edc"
#include "groups/toggle.edc"
#include "groups/toolbar2.edc"
#include "groups/wipercontrol.edc"

// Theme Change Demo
#include "groups/applications/contacts.edc"
#include "groups/applications/myfile_genlist.edc"
#include "groups/applications/email_mailbox_theme.edc"
#include "groups/applications/email_account_theme.edc"
#include "groups/applications/email_setting_theme.edc"
#include "groups/applications/email_viewer_theme.edc"
#include "groups/applications/email_composer_theme.edc"
#include "groups/applications/msg_ui_entry.edc"
#include "groups/applications/msg_ui_genlist.edc"
#include "groups/applications/msg_ui_setting.edc"
#include "groups/applications/msg_ui_thread.edc"
#include "groups/applications/rss_macro.edc"
#include "groups/applications/rss_tree.edc"
#include "groups/applications/rss_tree_feed.edc"
#include "groups/applications/rss_tree_folder.edc"
#include "groups/applications/setting.edc"
#include "groups/applications/calllog_theme.edc"

/*
sounds{
        sound : "drag-start.wav" 0 100;
        sound :"drag-accept.wav" 0 100;
        sound :"button-pressed.wav" 0 100;
	sound :"Waterdrop.wav" 0 100;
}

haptics{ 
    haptic {
      name:"1_haptic" ;
      magnitude: 8000 ;
      duration: 120 ;
      attack_level: 123 ;
      attack_time: 122 ;
      fade_level: 16 ;
     fade_time: 12 ;
     type: MAGSWEEP ;
     pattern:"01,00,01,00,0A,00,14,00,00,00,20,01,00,00,7F,00,00,E1,00,00,4D,00,61,00,67,00,53,00,77,00,65,00,65,00,70,00,00,00" ;
   }
   haptic{
        name: "2_haptic" ;
        magnitude: 10000 ;
        duration: 12 ;
        attack_level: 123 ;
        attack_time: 120 ;
        fade_level: 16 ;
        fade_time: 12 ;
        type: MAGSWEEP ;
        pattern: "01,00,03,00,38,00,42,00,00,00,19,00,21,00,F1,E0,01,E2,00,00,F1, E0, 02, E2, 01,1D,F1,E0,01,E2,03,BA,F1,E0,02,E2,04,E0,FF,20,17,00,00,7F,D1,2F,81,30,00,00,F4,01,00,00,00,20,1F,00,00,40,01,96,41,00,00,00,12,00,24,00,54,00,69,00,6D,00,65,00,6C,00,69,00,6E,00,65,00,00,00,50,00,65,00,72,00,69,00,6F,00,64,00,69,00,63,00,00,00,50,00,65,00,72,00,69,00,6F,00,64,00,69,00,63,00,20,00,23,00,31,00,00,00" ;
   }
}
*/

///////////////////////////////////////////////////////////////////////////////
   group { name: "elm/bg/base/default";
      parts {
         part { name: "base";
	    mouse_events:  0;
	    type: RECT;
	    description { state: "default" 0.0;
	       color: 0 0 0 255;
	    }
	 }
	 part { name: "elm.swallow.background";
	    type: SWALLOW;
	    description { state: "default" 0.0;
	    }
	 }
      }
   }

   group { name: "elm/bg/base/dialogue_field";
       images {
	 image: "01_dialog_field_background.png" COMP;
      }
      parts {
         part { name: "base";
	    mouse_events:  0;
	    type: RECT;
	    description { state: "default" 0.0;
		color: 0 0 0 255;
	    }
	 }
	 part { name: "elm.swallow.background";
	    type: SWALLOW;
	    description { state: "default" 0.0;
	    }
	 }
	  part { name: "image";
	    mouse_events:  0;
	    type: IMAGE;
	    description { state: "default" 0.0;
		image.normal: "01_dialog_field_background.png";
		image.border: 5 5 5 5;
	    }
	 }
      }
   }

///////////////////////////////////////////////////////////////////////////////
   group { name: "elm/hover/base/default";
      images {
	 image: "shad_circ.png" COMP;
      }
      parts {
	 part { name: "elm.swallow.offset";
            type: SWALLOW;
	    description { state: "default" 0.0;
	       align: 0.0 0.0;
	       rel1.relative: 0.0 0.0;
	       rel2.relative: 0.0 0.0;
	    }
	 }
	 part { name: "elm.swallow.size";
            type: SWALLOW;
	    description { state: "default" 0.0;
	       align: 0.0 0.0;
	       rel1.to: "elm.swallow.offset";
	       rel1.relative: 1.0 1.0;
	       rel2.to: "elm.swallow.offset";
	       rel2.relative: 1.0 1.0;
	    }
	 }
	 part { name: "base";
	    type: RECT;
	    mouse_events: 1;
	    description { state: "default" 0.0;
	       color: 0 0 0 64;
	    }
	 }
         part { name: "shad";
	    mouse_events:  0;
	    description { state: "default" 0.0;
	       image.normal: "shad_circ.png";
	       rel1.to: "elm.swallow.size";
	       rel1.offset: -32 -32;
	       rel2.to: "elm.swallow.size";
	       rel2.offset: 31 31;
               fill.smooth: 0;
	    }
	 }
	 part { name: "box";
	    type: RECT;
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       color: 0 0 0 0;
	       rel1.to: "elm.swallow.size";
	       rel1.offset: -2 -2;
	       rel2.to: "elm.swallow.size";
	       rel2.offset: 1 1;
	    }
	 }
	 part { name: "elm.swallow.slot.left";
            type: SWALLOW;
	    description { state: "default" 0.0;
	       align: 1.0 0.5;
	       rel1.to: "elm.swallow.slot.middle";
	       rel1.relative: 0.0 0.0;
	       rel1.offset: -1 0;
	       rel2.to: "elm.swallow.slot.middle";
	       rel2.relative: 0.0 1.0;
	       rel2.offset: -1 -1;
	    }
	 }
	 part { name: "elm.swallow.slot.right";
            type: SWALLOW;
	    description { state: "default" 0.0;
	       align: 0.0 0.5;
	       rel1.to: "elm.swallow.slot.middle";
	       rel1.relative: 1.0 0.0;
	       rel1.offset: 0 0;
	       rel2.to: "elm.swallow.slot.middle";
	       rel2.relative: 1.0 1.0;
	       rel2.offset: 0 -1;
	    }
	 }
	 part { name: "elm.swallow.slot.top";
            type: SWALLOW;
	    description { state: "default" 0.0;
	       align: 0.5 1.0;
	       rel1.to: "elm.swallow.slot.middle";
	       rel1.relative: 0.0 0.0;
	       rel1.offset: 0 -1;
	       rel2.to: "elm.swallow.slot.middle";
	       rel2.relative: 1.0 0.0;
	       rel2.offset: -1 -1;
	    }
	 }
	 part { name: "elm.swallow.slot.bottom";
            type: SWALLOW;
	    description { state: "default" 0.0;
	       align: 0.5 0.0;
	       rel1.to: "elm.swallow.slot.middle";
	       rel1.relative: 0.0 1.0;
	       rel1.offset: 0 0;
	       rel2.to: "elm.swallow.slot.middle";
	       rel2.relative: 1.0 1.0;
	       rel2.offset: -1 0;
	    }
	 }
	 part { name: "elm.swallow.slot.middle";
            type: SWALLOW;
	    description { state: "default" 0.0;
	       rel1.to: "elm.swallow.size";
	       rel2.to: "elm.swallow.size";
	    }
	 }
      }
      programs {
	 program { name: "end";
	    signal: "mouse,up,1";
	    source: "base";
	    action: SIGNAL_EMIT "elm,action,dismiss" "";
	 }
      }
   }

   group { name: "elm/hover/base/matchlist";
      parts {
	 part { name: "elm.swallow.offset";
            type: SWALLOW;
	    description { state: "default" 0.0;
	       align: 0.0 0.0;
	       rel1.relative: 0.0 0.0;
	       rel2.relative: 0.0 0.0;
	    }
	 }
	 part { name: "elm.swallow.size";
            type: SWALLOW;
	    description { state: "default" 0.0;
	       align: 0.0 0.0;
	       rel1.to: "elm.swallow.offset";
	       rel1.relative: 1.0 1.0;
	       rel2.to: "elm.swallow.offset";
	       rel2.relative: 1.0 1.0;
	    }
	 }
	 part { name: "base";
	    type: RECT;
	    mouse_events: 1;
	    description { state: "default" 0.0;
	       color: 0 0 0 0;
	    }
	 }
	 part { name: "box";
	    type: RECT;
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       color: 0 0 0 0;
	       rel1.to: "elm.swallow.size";
	       rel1.offset: -2 -2;
	       rel2.to: "elm.swallow.size";
	       rel2.offset: 1 1;
	    }
	 }
	 part { name: "elm.swallow.slot.left";
            type: SWALLOW;
	    description { state: "default" 0.0;
	       align: 1.0 0.5;
	       rel1.to: "elm.swallow.slot.middle";
	       rel1.relative: 0.0 0.0;
	       rel1.offset: -1 0;
	       rel2.to: "elm.swallow.slot.middle";
	       rel2.relative: 0.0 1.0;
	       rel2.offset: -1 -1;
	    }
	 }
	 part { name: "elm.swallow.slot.right";
            type: SWALLOW;
	    description { state: "default" 0.0;
	       align: 0.0 0.5;
	       rel1.to: "elm.swallow.slot.middle";
	       rel1.relative: 1.0 0.0;
	       rel1.offset: 0 0;
	       rel2.to: "elm.swallow.slot.middle";
	       rel2.relative: 1.0 1.0;
	       rel2.offset: 0 -1;
	    }
	 }
	 part { name: "elm.swallow.slot.top";
            type: SWALLOW;
	    description { state: "default" 0.0;
	       align: 0.5 1.0;
	       rel1.to: "elm.swallow.slot.middle";
	       rel1.relative: 0.0 0.0;
	       rel1.offset: 0 -1;
	       rel2.to: "elm.swallow.slot.middle";
	       rel2.relative: 1.0 0.0;
	       rel2.offset: -1 -1;
	    }
	 }
	 part { name: "elm.swallow.slot.bottom";
            type: SWALLOW;
	    description { state: "default" 0.0;
	       align: 0.5 0.0;
	       rel1.to: "elm.swallow.slot.middle";
	       rel1.relative: 0.0 1.0;
	       rel1.offset: 0 0;
	       rel2.to: "elm.swallow.slot.middle";
	       rel2.relative: 1.0 1.0;
	       rel2.offset: -1 0;
	    }
	 }
	 part { name: "elm.swallow.slot.middle";
            type: SWALLOW;
	    description { state: "default" 0.0;
	       rel1.to: "elm.swallow.size";
	       rel2.to: "elm.swallow.size";
	    }
	 }
      }
      programs {
	 program { name: "end";
	    signal: "mouse,up,1";
	    source: "base";
	    action: SIGNAL_EMIT "elm,action,dismiss" "";
	 }
      }
   }

   group { name: "elm/hover/base/popout";
      images {
	 image: "shad_circ.png" COMP;
	 image: "bt_dis_base.png" COMP;
	 image: "bt_dis_hilight.png" COMP;
      }
      parts {
	 part { name: "elm.swallow.offset";
            type: SWALLOW;
	    description { state: "default" 0.0;
	       align: 0.0 0.0;
	       rel1.relative: 0.0 0.0;
	       rel2.relative: 0.0 0.0;
	    }
	 }
	 part { name: "elm.swallow.size";
            type: SWALLOW;
	    description { state: "default" 0.0;
	       align: 0.0 0.0;
	       rel1.to: "elm.swallow.offset";
	       rel1.relative: 1.0 1.0;
	       rel2.to: "elm.swallow.offset";
	       rel2.relative: 1.0 1.0;
	    }
	 }
	 part { name: "base";
	    type: RECT;
	    mouse_events: 1;
	    description { state: "default" 0.0;
	       color: 0 0 0 0;
	    }
	    description { state: "visible" 0.0;
	       inherit: "default" 1.0;
	       color: 0 0 0 64;
	    }
	 }
	 part { name: "leftclip";
	    type: RECT;
	    description { state: "default" 0.0;
	       rel2.to_x: "pop";
	       rel2.relative: 0.0 1.0;
               rel2.offset: 1 -1;
	    }
	 }
	 part { name: "left";
	    clip_to: "leftclip";
	    description { state: "default" 0.0;
	       visible: 0;
	       rel1.to: "elm.swallow.slot.left";
               rel1.offset: -5 -5;
	       rel2.to: "elm.swallow.slot.left";
               rel2.offset: 4 4;
               image {
		  normal: "bt_dis_base.png";
		  border: 4 4 4 4;
	       }
               image.middle: SOLID;
	    }
	    description { state: "visible" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	    }
	 }
	 part { name: "elm.swallow.slot.left";
            type: SWALLOW;
	    clip_to: "leftclip";
	    description { state: "default" 0.0;
	       align: 0.0 0.5;
	       rel1.to: "elm.swallow.slot.middle";
	       rel1.relative: 0.0 0.0;
	       rel1.offset: -1 0;
	       rel2.to: "elm.swallow.slot.middle";
	       rel2.relative: 0.0 1.0;
	       rel2.offset: -1 -1;
	    }
	    description { state: "visible" 0.0;
	       inherit: "default" 0.0;
	       rel1.offset: -7 0;
	       rel2.offset: -7 -1;
	       align: 1.0 0.5;
	    }
	 }
         part { name: "leftover";
	    clip_to: "leftclip";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       rel1.to: "left";
	       rel2.to: "left";
	       rel2.relative: 1.0 0.5;
	       color: 0 0 0 0;
	       image {
		  normal: "bt_dis_hilight.png";
		  border: 4 4 4 0;
	       }
	    }
	 }
	 part { name: "rightclip";
	    type: RECT;
	    description { state: "default" 0.0;
	       rel1.to_x: "pop";
	       rel1.relative: 1.0 0.0;
               rel1.offset: -2 0;
	    }
	 }
	 part { name: "right";
	    clip_to: "rightclip";
	    description { state: "default" 0.0;
	       visible: 0;
	       rel1.to: "elm.swallow.slot.right";
               rel1.offset: -5 -5;
	       rel2.to: "elm.swallow.slot.right";
               rel2.offset: 4 4;
               image {
		  normal: "bt_dis_base.png";
		  border: 4 4 4 4;
	       }
               image.middle: SOLID;
	    }
	    description { state: "visible" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	    }
	 }
	 part { name: "elm.swallow.slot.right";
            type: SWALLOW;
	    clip_to: "rightclip";
	    description { state: "default" 0.0;
	       align: 1.0 0.5;
	       rel1.to: "elm.swallow.slot.middle";
	       rel1.relative: 1.0 0.0;
	       rel1.offset: 0 0;
	       rel2.to: "elm.swallow.slot.middle";
	       rel2.relative: 1.0 1.0;
	       rel2.offset: 0 -1;
	    }
	    description { state: "visible" 0.0;
	       inherit: "default" 0.0;
	       rel1.offset: 6 0;
	       rel2.offset: 6 -1;
	       align: 0.0 0.5;
	    }
	 }
         part { name: "rightover";
	    clip_to: "rightclip";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       rel1.to: "right";
	       rel2.to: "right";
	       rel2.relative: 1.0 0.5;
	       image {
		  normal: "bt_dis_hilight.png";
		  border: 4 4 4 0;
	       }
	    }
	 }
	 part { name: "topclip";
	    type: RECT;
	    description { state: "default" 0.0;
	       rel2.to_y: "pop";
	       rel2.relative: 1.0 0.0;
               rel2.offset: -1 1;
	    }
	 }
	 part { name: "top";
	    clip_to: "topclip";
	    description { state: "default" 0.0;
	       visible: 0;
	       rel1.to: "elm.swallow.slot.top";
               rel1.offset: -5 -5;
	       rel2.to: "elm.swallow.slot.top";
               rel2.offset: 4 4;
               image {
		  normal: "bt_dis_base.png";
		  border: 4 4 4 4;
	       }
               image.middle: SOLID;
	    }
	    description { state: "visible" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	    }
	 }
	 part { name: "elm.swallow.slot.top";
            type: SWALLOW;
	    clip_to: "topclip";
	    description { state: "default" 0.0;
	       visible: 1;
	       align: 0.5 0.0;
	       rel1.to: "elm.swallow.slot.middle";
	       rel1.relative: 0.0 0.0;
	       rel1.offset: 0 -1;
	       rel2.to: "elm.swallow.slot.middle";
	       rel2.relative: 1.0 0.0;
	       rel2.offset: -1 -1;
	    }
	    description { state: "visible" 0.0;
	       inherit: "default" 0.0;
	       rel1.offset: 0 -7;
	       rel2.offset: -1 -7;
	       align: 0.5 1.0;
	    }
	 }
         part { name: "topover";
	    clip_to: "topclip";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       rel1.to: "top";
	       rel2.to: "top";
	       rel2.relative: 1.0 0.5;
	       image {
		  normal: "bt_dis_hilight.png";
		  border: 4 4 4 0;
	       }
	    }
	 }
	 part { name: "bottomclip";
	    type: RECT;
	    description { state: "default" 0.0;
	       rel1.to_y: "pop";
	       rel1.relative: 0.0 1.0;
               rel1.offset: -1 -2;
	    }
	 }
	 part { name: "bottom";
	    clip_to: "bottomclip";
	    description { state: "default" 0.0;
	       visible: 0;
	       rel1.to: "elm.swallow.slot.bottom";
               rel1.offset: -5 -5;
	       rel2.to: "elm.swallow.slot.bottom";
               rel2.offset: 4 4;
               image {
		  normal: "bt_dis_base.png";
		  border: 4 4 4 4;
	       }
               image.middle: SOLID;
	    }
	    description { state: "visible" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	    }
	 }
	 part { name: "elm.swallow.slot.bottom";
            type: SWALLOW;
	    clip_to: "bottomclip";
	    description { state: "default" 0.0;
	       align: 0.5 1.0;
	       rel1.to: "elm.swallow.slot.middle";
	       rel1.relative: 0.0 1.0;
	       rel1.offset: 0 0;
	       rel2.to: "elm.swallow.slot.middle";
	       rel2.relative: 1.0 1.0;
	       rel2.offset: -1 0;
	    }
	    description { state: "visible" 0.0;
	       inherit: "default" 0.0;
	       rel1.offset: 0 6;
	       rel2.offset: -1 6;
	       align: 0.5 0.0;
	    }
	 }
         part { name: "bottomover";
	    clip_to: "bottomclip";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       rel1.to: "bottom";
	       rel2.to: "bottom";
	       rel2.relative: 1.0 0.5;
	       image {
		  normal: "bt_dis_hilight.png";
		  border: 4 4 4 0;
	       }
	    }
	 }
         part { name: "shad";
	    mouse_events:  0;
	    description { state: "default" 0.0;
	       image.normal: "shad_circ.png";
	       rel1.to: "elm.swallow.size";
	       rel1.offset: -64 -64;
	       rel2.to: "elm.swallow.size";
	       rel2.offset: 63 63;
               fill.smooth: 0;
	    }
	 }
	 part { name: "pop";
	    mouse_events: 1;
	    description { state: "default" 0.0;
	       rel1.to: "elm.swallow.slot.middle";
               rel1.offset: -5 -5;
	       rel2.to: "elm.swallow.slot.middle";
               rel2.offset: 4 4;
               image {
		  normal: "bt_dis_base.png";
		  border: 4 4 4 4;
	       }
               image.middle: SOLID;
	    }
	 }
	 part { name: "elm.swallow.slot.middle";
            type: SWALLOW;
	    description { state: "default" 0.0;
	       rel1.to: "elm.swallow.size";
	       rel2.to: "elm.swallow.size";
	    }
	 }
         part { name: "popover";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       rel1.to: "pop";
	       rel2.to: "pop";
	       rel2.relative: 1.0 0.5;
	       image {
		  normal: "bt_dis_hilight.png";
		  border: 4 4 4 0;
	       }
	    }
	 }
      }
      programs {
	 program { name: "end";
	    signal: "mouse,up,1";
	    source: "base";
	    action: SIGNAL_EMIT "elm,action,dismiss" "";
	 }

	 program { name: "show";
            signal: "elm,action,show";
	    source: "elm";
	    action: STATE_SET "visible" 0.0;
//	    transition: DECELERATE 0.5;
	    target: "base";
	 }
	 program { name: "hide";
            signal: "elm,action,hide";
	    source: "elm";
	    action: STATE_SET "default" 0.0;
//	    transition: DECELERATE 0.5;
	    target: "base";
	 }

	 program { name: "leftshow";
            signal: "elm,action,slot,left,show";
	    source: "elm";
	    action: STATE_SET "visible" 0.0;
	    transition: DECELERATE 0.5;
	    target: "left";
	    target: "elm.swallow.slot.left";
	 }
	 program { name: "lefthide";
            signal: "elm,action,slot,left,hide";
	    source: "elm";
	    action: STATE_SET "default" 0.0;
	    transition: DECELERATE 0.5;
	    target: "left";
	    target: "elm.swallow.slot.left";
	 }
	 program { name: "rightshow";
            signal: "elm,action,slot,right,show";
	    source: "elm";
	    action: STATE_SET "visible" 0.0;
	    transition: DECELERATE 0.5;
	    target: "right";
	    target: "elm.swallow.slot.right";
	 }
	 program { name: "righthide";
            signal: "elm,action,slot,right,hide";
	    source: "elm";
	    action: STATE_SET "default" 0.0;
	    transition: DECELERATE 0.5;
	    target: "right";
	    target: "elm.swallow.slot.right";
	 }
	 program { name: "topshow";
            signal: "elm,action,slot,top,show";
	    source: "elm";
	    action: STATE_SET "visible" 0.0;
	    transition: DECELERATE 0.5;
	    target: "top";
	    target: "elm.swallow.slot.top";
	 }
	 program { name: "tophide";
            signal: "elm,action,slot,top,hide";
	    source: "elm";
	    action: STATE_SET "default" 0.0;
	    transition: DECELERATE 0.5;
	    target: "top";
	    target: "elm.swallow.slot.top";
	 }
	 program { name: "bottomshow";
            signal: "elm,action,slot,bottom,show";
	    source: "elm";
	    action: STATE_SET "visible" 0.0;
	    transition: DECELERATE 0.5;
	    target: "bottom";
	    target: "elm.swallow.slot.bottom";
	 }
	 program { name: "bottomhide";
            signal: "elm,action,slot,bottom,hide";
	    source: "elm";
	    action: STATE_SET "default" 0.0;
	    transition: DECELERATE 0.5;
	    target: "bottom";
	    target: "elm.swallow.slot.bottom";
	 }
      }
   }

   //In the hover used by the menu only the bottom part is used.
   group { name: "elm/hover/base/menu";
       images {
           image: "shad_circ.png" COMP;
           image: "bt_dis_base.png" COMP;
       }
       parts {
           part { name: "elm.swallow.offset";
               type: SWALLOW;
               description { state: "default" 0.0;
                   align: 0.0 0.0;
                   rel1.relative: 0.0 0.0;
                   rel2.relative: 0.0 0.0;
               }
           }
           part { name: "elm.swallow.size";
               type: SWALLOW;
               description { state: "default" 0.0;
                   align: 0.0 0.0;
                   rel1.to: "elm.swallow.offset";
                   rel1.relative: 1.0 1.0;
                   rel2.to: "elm.swallow.offset";
                   rel2.relative: 1.0 1.0;
               }
           }
           part { name: "base";
               type: RECT;
               mouse_events: 1;
               description { state: "default" 0.0;
                   color: 0 0 0 0;
               }
               description { state: "visible" 0.0;
                   inherit: "default" 1.0;
                   color: 0 0 0 64;
               }
           }
           part { name: "elm.swallow.slot.left";
               type: SWALLOW;
               description { state: "default" 0.0;
               }
           }
           part { name: "elm.swallow.slot.right";
               type: SWALLOW;
               description { state: "default" 0.0;
               }
           }
           part { name: "elm.swallow.slot.top";
               type: SWALLOW;
               description { state: "default" 0.0;
               }
               description { state: "visible" 0.0;
                   inherit: "default" 0.0;
               }
           }
           part { name: "bottomclip";
               type: RECT;
               description { state: "default" 0.0;
                   rel1.to_y: "pop";
                   rel1.relative: 0.0 1.0;
                   rel1.offset: -1 -2;
               }
           }
           part { name: "bottom";
               clip_to: "bottomclip";
               description { state: "default" 0.0;
                   visible: 0;
                   rel1.to: "elm.swallow.slot.bottom";
                   rel1.offset: -5 -5;
                   rel2.to: "elm.swallow.slot.bottom";
                   rel2.offset: 4 4;
                   image {
                       normal: "bt_dis_base.png";
                       border: 4 4 4 4;
                   }
                   image.middle: SOLID;
               }
               description { state: "visible" 0.0;
                   inherit: "default" 0.0;
                   visible: 1;
               }
           }
           part { name: "elm.swallow.slot.bottom";
               type: SWALLOW;
               clip_to: "bottomclip";
               description { state: "default" 0.0;
                   align: 0.5 1.0;
                   rel1.to: "elm.swallow.slot.middle";
                   rel1.relative: 0.0 1.0;
                   rel1.offset: 0 0;
                   rel2.to: "elm.swallow.slot.middle";
                   rel2.relative: 1.0 1.0;
                   rel2.offset: -1 0;
               }
               description { state: "visible" 0.0;
                   inherit: "default" 0.0;
                   rel1.offset: 0 6;
                   rel2.offset: -1 6;
                   align: 0.5 0.0;
               }
           }
           part { name: "pop";
               mouse_events: 1;
               repeat_events:1;
               description { state: "default" 0.0;
                   rel1.to: "elm.swallow.slot.middle";
                   rel1.offset: -5 -5;
                   rel2.to: "elm.swallow.slot.middle";
                   rel2.offset: 4 4;
               }
           }
           part { name: "elm.swallow.slot.middle";
               type: SWALLOW;
               repeat_events:1;
               description { state: "default" 0.0;
                   rel1.to: "elm.swallow.size";
                   rel2.to: "elm.swallow.size";
               }
           }
       }
       programs {
           program { name: "end";
               signal: "mouse,up,1";
               source: "base";
               action: SIGNAL_EMIT "elm,action,dismiss" "";
           }
           program { name: "show";
               signal: "elm,action,show";
               source: "elm";
               action: STATE_SET "visible" 0.0;
                       //	    transition: DECELERATE 0.5;
               target: "base";
           }
           program { name: "hide";
               signal: "elm,action,hide";
               source: "elm";
               action: STATE_SET "default" 0.0;
                       //	    transition: DECELERATE 0.5;
               target: "base";
           }
           program { name: "bottomshow";
               signal: "elm,action,slot,bottom,show";
               source: "elm";
               action: STATE_SET "visible" 0.0;
               transition: DECELERATE 0.5;
               target: "bottom";
               target: "elm.swallow.slot.bottom";
           }
           program { name: "bottomhide";
               signal: "elm,action,slot,bottom,hide";
               source: "elm";
               action: STATE_SET "default" 0.0;
               transition: DECELERATE 0.5;
               target: "bottom";
               target: "elm.swallow.slot.bottom";
           }
       }
   }

   //In the hover used by the submenu only the bottom part is used
   //and no part should interact except the bottom area
   group { name: "elm/hover/base/submenu";
       images {
           image: "shad_circ.png" COMP;
           image: "bt_dis_base.png" COMP;
       }
       parts {
           part { name: "elm.swallow.offset";
               type: SWALLOW;
               repeat_events:1;
               description { state: "default" 0.0;
                   align: 0.0 0.0;
                   rel1.relative: 0.0 0.0;
                   rel2.relative: 0.0 0.0;
               }
           }
           part { name: "elm.swallow.size";
               type: SWALLOW;
               description { state: "default" 0.0;
                   align: 0.0 0.0;
                   rel1.to: "elm.swallow.offset";
                   rel1.relative: 1.0 1.0;
                   rel2.to: "elm.swallow.offset";
                   rel2.relative: 1.0 1.0;
               }
           }
           //here we do non catch events like the hover hover does
           part { name: "base";
               type: RECT;
               mouse_events: 1;
               description { state: "default" 0.0;
                   color: 0 0 0 0;
                   visible: 0;
               }
           }
           part { name: "elm.swallow.slot.left";
               type: SWALLOW;
               description { state: "default" 0.0;
               }
           }
           part { name: "elm.swallow.slot.right";
               type: SWALLOW;
               description { state: "default" 0.0;
               }
           }
           part { name: "elm.swallow.slot.top";
               type: SWALLOW;
               description { state: "default" 0.0;
               }
           }
           part { name: "bottomclip";
               type: RECT;
               description { state: "default" 0.0;
                   rel1.to_y: "pop";
                   rel1.relative: 0.0 1.0;
                   rel1.offset: -1 -2;
               }
           }
           part { name: "bottom";
               clip_to: "bottomclip";
               description { state: "default" 0.0;
                   visible: 0;
                   rel1.to: "elm.swallow.slot.bottom";
                   rel1.offset: -5 -5;
                   rel2.to: "elm.swallow.slot.bottom";
                   rel2.offset: 4 4;
                   image {
                       normal: "bt_dis_base.png";
                       border: 4 4 4 4;
                   }
                   image.middle: SOLID;
               }
               description { state: "visible" 0.0;
                   inherit: "default" 0.0;
                   visible: 1;
               }
           }
           part { name: "elm.swallow.slot.bottom";
               type: SWALLOW;
               clip_to: "bottomclip";
               description { state: "default" 0.0;
                   align: 0.5 1.0;
                   rel1.to: "elm.swallow.slot.middle";
                   rel1.relative: 0.0 1.0;
                   rel1.offset: 0 0;
                   rel2.to: "elm.swallow.slot.middle";
                   rel2.relative: 1.0 1.0;
                   rel2.offset: -1 0;
               }
               description { state: "visible" 0.0;
                   inherit: "default" 0.0;
                   rel1.offset: 0 6;
                   rel2.offset: -1 6;
                   align: 0.5 0.0;
               }
           }
           part { name: "pop";
               mouse_events: 1;
               repeat_events:1;
               description { state: "default" 0.0;
                   rel1.to: "elm.swallow.slot.middle";
                   rel1.offset: -5 -5;
                   rel2.to: "elm.swallow.slot.middle";
                   rel2.offset: 4 4;
               }
           }
           part { name: "elm.swallow.slot.middle";
               type: SWALLOW;
               repeat_events:1;
               description { state: "default" 0.0;
                   rel1.to: "elm.swallow.size";
                   rel2.to: "elm.swallow.size";
               }
           }
       }
       programs {
           program { name: "end";
               signal: "mouse,up,1";
               source: "base";
               action: SIGNAL_EMIT "elm,action,dismiss" "";
           }
           program { name: "show";
               signal: "elm,action,show";
               source: "elm";
               action: STATE_SET "visible" 0.0;
                       //	    transition: DECELERATE 0.5;
               target: "base";
           }
           program { name: "hide";
               signal: "elm,action,hide";
               source: "elm";
               action: STATE_SET "default" 0.0;
                       //	    transition: DECELERATE 0.5;
               target: "base";
           }
           program { name: "bottomshow";
               signal: "elm,action,slot,bottom,show";
               source: "elm";
               action: STATE_SET "visible" 0.0;
               transition: DECELERATE 0.5;
               target: "bottom";
               target: "elm.swallow.slot.bottom";
           }
           program { name: "bottomhide";
               signal: "elm,action,slot,bottom,hide";
               source: "elm";
               action: STATE_SET "default" 0.0;
               transition: DECELERATE 0.5;
               target: "bottom";
               target: "elm.swallow.slot.bottom";
           }
       }
   }

   group { name: "elm/hover/base/hoversel_vertical/default";
      alias: "elm/hover/base/hoversel_vertical/entry";
      images {
//	 image: "shad_circ.png" COMP;
	 image: "bt_base2.png" COMP;
	 image: "bt_hilight.png" COMP;
	 image: "bt_shine.png" COMP;
	 image: "outdent-top.png" COMP;
	 image: "outdent-bottom.png" COMP;
      }
      parts {
	 part { name: "elm.swallow.offset";
            type: SWALLOW;
	    description { state: "default" 0.0;
	       align: 0.0 0.0;
	       rel1.relative: 0.0 0.0;
	       rel2.relative: 0.0 0.0;
	    }
	 }
	 part { name: "elm.swallow.size";
            type: SWALLOW;
	    description { state: "default" 0.0;
	       align: 0.0 0.0;
	       rel1.to: "elm.swallow.offset";
	       rel1.relative: 1.0 1.0;
	       rel2.to: "elm.swallow.offset";
	       rel2.relative: 1.0 1.0;
	    }
	 }
/*
        part { name: "shad";
	    mouse_events:  0;
	    description { state: "default" 0.0;
	       image.normal: "shad_circ.png";
	       rel1.to: "button_image";
	       rel1.offset: -64 -64;
	       rel2.to: "button_image";
	       rel2.offset: 63 63;
               fill.smooth: 0;
	    }
	 }
 */
	 part { name: "button_image";
	    mouse_events: 1;
	    description { state: "default" 0.0;
	       rel1.to_x: "elm.swallow.slot.top";
	       rel1.to_y: "elm.swallow.slot.top";
               rel1.offset: -2 -6;
	       rel2.to_x: "elm.swallow.slot.top";
	       rel2.to_y: "elm.swallow.slot.bottom";
               rel2.offset: 1 5;
	       image {
		  normal: "bt_base2.png";
		  border: 7 7 7 7;
	       }
               image.middle: SOLID;
	    }

	    description { state: "bottom" 0.0;
	       rel1.to_x: "elm.swallow.slot.bottom";
	       rel1.to_y: "elm.swallow.slot.top";
               rel1.offset: -2 -6;
	       rel2.to_x: "elm.swallow.slot.bottom";
	       rel2.to_y: "elm.swallow.slot.bottom";
               rel2.offset: 1 5;
	       image {
		  normal: "bt_base2.png";
		  border: 7 7 7 7;
	       }
               image.middle: SOLID;
	    }

	 }

	 part { name: "base";
	    type: RECT;
	    mouse_events: 1;
	    description { state: "default" 0.0;
	       color: 0 0 0 0;
	    }
	    description { state: "visible" 0.0;
	       inherit: "default" 1.0;
	       color: 0 0 0 0;
	    }
	 }

	 part { name: "topclip";
	    type: RECT;
	    description { state: "default" 0.0;
	       rel2.to_y: "edge_top";
	       rel2.relative: 1.0 0.0;
               rel2.offset: -1 7;
	    }
	 }
	 part { name: "elm.swallow.slot.top";
            type: SWALLOW;
	    clip_to: "topclip";
	    description { state: "default" 0.0;
	       visible: 1;
	       align: 0.5 0.0;
	       rel1.to: "elm.swallow.slot.middle";
	       rel1.relative: 0.0 0.0;
	       rel1.offset: 0 -1;
	       rel2.to: "elm.swallow.slot.middle";
	       rel2.relative: 1.0 0.0;
	       rel2.offset: -1 -1;
	    }
	    description { state: "visible" 0.0;
	       inherit: "default" 0.0;
	       rel1.offset: 0 -7;
	       rel2.offset: -1 -7;
	       align: 0.5 1.0;
	    }
	 }

	 part { name: "bottomclip";
	    type: RECT;
	    description { state: "default" 0.0;
	       rel1.to_y: "edge_bottom";
	       rel1.relative: 0.0 1.0;
               rel1.offset: -1 -8;
	    }
	 }
	 part { name: "elm.swallow.slot.bottom";
            type: SWALLOW;
	    clip_to: "bottomclip";
	    description { state: "default" 0.0;
	       align: 0.5 1.0;
	       rel1.to: "elm.swallow.slot.middle";
	       rel1.relative: 0.0 1.0;
	       rel1.offset: 0 0;
	       rel2.to: "elm.swallow.slot.middle";
	       rel2.relative: 1.0 1.0;
	       rel2.offset: -1 0;
	    }
	    description { state: "visible" 0.0;
	       inherit: "default" 0.0;
	       rel1.offset: 0 6;
	       rel2.offset: -1 6;
	       align: 0.5 0.0;
	    }
	 }

	 part {	  name: "over1";
	    mouse_events: 0;
	    description { state: "default" 0.0;
               rel1.to: "button_image";
               rel2.to: "button_image";
	       rel2.relative: 1.0 0.5;
	       image {
		  normal: "bt_hilight.png";
		  border: 7 7 7 0;
	       }
	    }
	 }
	 part { name: "over2";
	    mouse_events: 1;
	    repeat_events: 1;
            ignore_flags: ON_HOLD;
	    description { state: "default" 0.0;
               rel1.to: "button_image";
               rel2.to: "button_image";
	       image {
		  normal: "bt_shine.png";
		  border: 7 7 7 7;
	       }
	    }
	 }
         part { name: "edge_top";
	    mouse_events:  0;
	    description { state: "default" 0.0;
               visible: 0;
	       rel1 {
                  to: "elm.swallow.size";
                  offset: 0 -10;
               }
	       rel2 {
                  to: "elm.swallow.size";
               }
	       image.normal: "outdent-bottom.png";
               image.border: 0 0 13 0;
               fill.smooth: 0;
	    }
	    description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 0;
	    }
	 }
         part { name: "edge_bottom";
	    mouse_events:  0;
	    description { state: "default" 0.0;
               visible: 0;
	       rel1 {
                  to: "elm.swallow.size";
               }
	       rel2 {
                  to: "elm.swallow.size";
                  offset: -1 9;
               }
	       image.normal: "outdent-top.png";
               image.border: 0 0 0 13;
               fill.smooth: 0;
	    }
	    description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 0;
	    }
	 }
	 part { name: "elm.swallow.slot.middle";
            type: SWALLOW;
	    description { state: "default" 0.0;
	       rel1.to: "elm.swallow.size";
	       rel2.to: "elm.swallow.size";
	    }
	 }
      }
      programs {
	 program { name: "end";
	    signal: "mouse,up,1";
	    source: "base";
	    action: SIGNAL_EMIT "elm,action,dismiss" "";
	 }

	 program { name: "show";
            signal: "elm,action,show";
	    source: "elm";
	    action: STATE_SET "visible" 0.0;
//	    transition: DECELERATE 0.5;
	    target: "base";
	 }
	 program { name: "hide";
            signal: "elm,action,hide";
	    source: "elm";
	    action: STATE_SET "default" 0.0;
//	    transition: DECELERATE 0.5;
	    target: "base";
	 }
	 program { name: "topshow";
            signal: "elm,action,slot,top,show";
	    source: "elm";
	    action: STATE_SET "visible" 0.0;
	    target: "edge_top";
            after: "topshow2";
	 }
	 program { name: "topshow2";
	    action: STATE_SET "visible" 0.0;
	    transition: DECELERATE 0.5;
	    target: "elm.swallow.slot.top";
	 }
	 program { name: "topshow3";
            signal: "elm,action,slot,top,show";
	    source: "elm";
	    action: STATE_SET "default" 0.0;
	    target: "button_image";
	 }
	 program { name: "tophide";
            signal: "elm,action,slot,top,hide";
	    source: "elm";
	    action: STATE_SET "default" 0.0;
	    transition: DECELERATE 0.5;
	    target: "elm.swallow.slot.top";
            after: "tophide2";
	 }
	 program { name: "tophide2";
	    action: STATE_SET "default" 0.0;
	    target: "edge_top";
	 }
	 program { name: "bottomshow";
            signal: "elm,action,slot,bottom,show";
	    source: "elm";
	    action: STATE_SET "visible" 0.0;
	    target: "edge_bottom";
            after: "bottomshow2";
	 }
	 program { name: "bottomshow2";
	    action: STATE_SET "visible" 0.0;
	    transition: DECELERATE 0.5;
	    target: "elm.swallow.slot.bottom";
	 }
	 program { name: "bottomshow3";
            signal: "elm,action,slot,bottom,show";
	    source: "elm";
	    action: STATE_SET "bottom" 0.0;
	    target: "button_image";
	 }
	 program { name: "bottomhide";
            signal: "elm,action,slot,bottom,hide";
	    source: "elm";
	    action: STATE_SET "default" 0.0;
	    transition: DECELERATE 0.5;
	    target: "elm.swallow.slot.bottom";
            after: "bottomhide2";
	 }
	 program { name: "bottomhide2";
	    action: STATE_SET "default" 0.0;
	    target: "edge_bottom";
	 }
      }
   }


	group { name: "elm/hover/base/hoversel_horizontal/entry";
		images {
			image: "10_cont_popup_copypaste_bg01.png" COMP;
		}

		parts {
			part { name: "elm.swallow.offset";
				type: SWALLOW;
				scale: 1;
				description { state: "default" 0.0;
					align: 0.0 0.0;
					rel1.relative: 0.0 0.0;
					rel2.relative: 0.0 0.0;
				}
			}
			part { name: "elm.swallow.size";
				type: SWALLOW;
				scale: 1;
				description { state: "default" 0.0;
					align: 0.0 0.0;
					rel1.to: "elm.swallow.offset";
					rel1.relative: 1.0 1.0;
					rel2.to: "elm.swallow.offset";
					rel2.relative: 1.0 1.0;
				}
			}
			part { name: "elm.swallow.slot.middle";
				type: SWALLOW;
				scale: 1;
				description { state: "default" 0.0;
					rel1.to: "elm.swallow.size";
					rel2.to: "elm.swallow.size";
				}
			}

			part { name: "base";
				type: RECT;
				mouse_events: 1;
				description { state: "default" 0.0;
					color: 0 0 0 0;
					align: 0.0 0.0;
					rel1.relative: 0.0 0.0;
					rel2.relative: 1.0 1.0;
				}
				description { state: "visible" 0.0;
					inherit: "default" 1.0;
					color: 0 0 0 64;
				}
			}

			part { name: "edge_top";
				mouse_events:  0;
				scale: 1;
				description { state: "default" 0.0;
					visible: 0;
				}
				description { state: "visible" 0.0;
					inherit: "default" 0.0;
					visible: 0;
				}
			}
			part { name: "edge_bottom";
				mouse_events:  0;
				scale: 1;
				description { state: "default" 0.0;
					visible: 0;
				}
				description { state: "visible" 0.0;
					inherit: "default" 0.0;
					visible: 0;
				}
			}


			part { name: "button_image_right";
				mouse_events: 0;
				scale: 1;
				description { state: "default" 0.0;
					color: 255 255 255 255;
					image.normal: "10_cont_popup_copypaste_bg01.png";
					image.border: 4 4 4 4;
					fill.smooth: 0;
					align: 0.5 0.5;
					rel1 {
						to: "elm.swallow.slot.right";
						relative: 0.0 0.0;
						offset: 2 2;
					}
					rel2 {
						to: "elm.swallow.slot.right";
						relative: 1.0 1.0;
						offset: -2 -2;
					}
				}
			}
			part { name: "button_image_left";
				mouse_events: 0;
				scale: 1;
				description { state: "default" 0.0;
					color: 255 255 255 255;
					image.normal: "10_cont_popup_copypaste_bg01.png";
					image.border: 4 4 4 4;
					fill.smooth: 0;
					align: 0.5 0.5;
					rel1 {
						to: "elm.swallow.slot.left";
						relative: 0.0 0.0;
						offset: 2 2;
					}
					rel2 {
						to: "elm.swallow.slot.left";
						relative: 1.0 1.0;
						offset: -2 -2;
					}
				}
			}

			part { name: "elm.swallow.slot.top";
				type: SWALLOW;
				scale: 1;
				description { state: "default" 0.0;
					visible: 1;
					fixed: 0 1;
					min: 460 60;
					max: 460 60;
					align: 0.5 1.0;
					rel1.relative: 0.0 0.0;
					rel1.to: "elm.swallow.slot.middle";
					rel2.relative: 1.0 0.0;
					rel2.to: "elm.swallow.slot.middle";
				}
				description { state: "visible" 0.0;
				   inherit: "default" 0.0;
				}
			}
			part { name: "elm.swallow.slot.bottom";
				type: SWALLOW;
				scale: 1;
				description { state: "default" 0.0;
					visible: 1;
					fixed: 0 1;
					min: 460 60;
					max: 460 60;
					align: 0.5 0.0;
					rel1.relative: 0.0 1.0;
					rel1.to: "elm.swallow.slot.middle";
					rel2.relative: 1.0 1.0;
					rel2.to: "elm.swallow.slot.middle";
				}
				description { state: "visible" 0.0;
				   inherit: "default" 0.0;
				}
			}

			part { name: "elm.swallow.slot.right";
				type: SWALLOW;
				scale: 1;
				description { state: "default" 0.0;
					visible: 1;
					align: 0.5 0.5;
					rel1.relative: 0.5 0.0;
					rel1.to_y: "elm.swallow.slot.middle";
					rel2.relative: 0.5 1.0;
					rel2.to_y: "elm.swallow.slot.middle";
				}
				description { state: "visible" 0.0;
				   inherit: "default" 0.0;
				}
			}
			part { name: "elm.swallow.slot.left";
				type: SWALLOW;
				scale: 1;
				description { state: "default" 0.0;
					visible: 1;
					align: 0.5 0.5;
					rel1.relative: 0.5 0.0;
					rel1.to_y: "elm.swallow.slot.middle";
					rel2.relative: 0.5 1.0;
					rel2.to_y: "elm.swallow.slot.middle";
				}
				description { state: "visible" 0.0;
				   inherit: "default" 0.0;
				}
			}
		}

		programs {
			program { name: "end";
				signal: "mouse,up,1";
				source: "base";
				action: SIGNAL_EMIT "elm,action,dismiss" "";
			}
			program { name: "show";
				signal: "elm,action,show";
				source: "elm";
				action: STATE_SET "visible" 0.0;
				target: "base";
			}
			program { name: "hide";
				signal: "elm,action,hide";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "base";
			}
			program { name: "topshow";
				signal: "elm,action,slot,top,show";
				source: "elm";
				action: STATE_SET "visible" 0.0;
				target: "edge_top";
				after: "topshow2";
			}
			program { name: "topshow2";
				action: STATE_SET "visible" 0.0;
				transition: DECELERATE 0.5;
				target: "elm.swallow.slot.top";
			}
			program { name: "tophide";
				signal: "elm,action,slot,top,hide";
				source: "elm";
				action: STATE_SET "default" 0.0;
				transition: DECELERATE 0.5;
				target: "elm.swallow.slot.top";
				after: "tophide2";
			}
			program { name: "tophide2";
				action: STATE_SET "default" 0.0;
				target: "edge_top";
			}
			program { name: "bottomshow";
				signal: "elm,action,slot,bottom,show";
				source: "elm";
				action: STATE_SET "visible" 0.0;
				target: "edge_bottom";
				after: "bottomshow2";
			}
			program { name: "bottomshow2";
				action: STATE_SET "visible" 0.0;
				transition: DECELERATE 0.5;
				target: "elm.swallow.slot.bottom";
			}
			program { name: "bottomhide";
				signal: "elm,action,slot,bottom,hide";
				source: "elm";
				action: STATE_SET "default" 0.0;
				transition: DECELERATE 0.5;
				target: "elm.swallow.slot.bottom";
				after: "bottomhide2";
			}
			program { name: "bottomhide2";
				action: STATE_SET "default" 0.0;
				target: "edge_bottom";
			}
		}
	}
///////////////////////////////////////////////////////////////////////////////
   group { name: "elm/notify/block_events/default";
       parts {
           part { name: "block_events";
								type: RECT;
								mouse_events:  1;
								repeat_events: 0;
								description { state: "default" 0.0;
									color: 0 0 0 180;
								}
           }
       }
	   programs {
		   program {
				name: "block_clicked";
				signal: "mouse,clicked,1";
				source: "block_events";
				action: SIGNAL_EMIT "elm,action,clicked" "elm";
		   }
	   }
   }
   group { name: "elm/notify/top/default";
       //this group is a design similar to the inwin group
       images {
      //     image: "shad_circ.png" COMP;
      //     image: "bt_dis_base.png" COMP;
      //     image: "bt_dis_hilight.png" COMP;
       }
       parts {
           part { name: "base";
               type: RECT;
               mouse_events: 0;
               repeat_events: 1;
               description { state: "default" 0.0;
                   color: 0 0 0 0;
                   rel1.offset: 10 10;
                   rel2.offset: -10 -10;
                   rel1.relative: 0.0 -1.0;
                   rel2.relative: 1.0 0.0;
               }
               description { state: "visible" 0.0;
                   inherit: "default" 0.0;
                   color: 0 0 0 64;
                   rel1.relative: 0.0 0.0;
                   rel2.relative: 1.0 1.0;
               }
           }
           part { name: "shad";
               mouse_events:  0;
               description { state: "default" 0.0;
        //           image.normal: "shad_circ.png";
                   rel1.to: "elm.swallow.content";
                   rel1.offset: -64 -64;
                   rel2.to: "elm.swallow.content";
                   rel2.offset: 63 63;
                   fill.smooth: 0;
               }
           }
           part { name: "pop";
               mouse_events: 1;
               description { state: "default" 0.0;
                   rel1.to: "elm.swallow.content";
                   rel1.offset: -5 -5;
                   rel2.to: "elm.swallow.content";
                   rel2.offset: 4 4;
                   image {
             //          normal: "bt_dis_base.png";
            //           border: 4 4 4 4;
                   }
               //    image.middle: SOLID;
               }
           }
           part { name: "popover";
               mouse_events: 0;
               description { state: "default" 0.0;
                   rel1.to: "pop";
                   rel2.to: "pop";
                   rel2.relative: 1.0 0.5;
                   image {
           //            normal: "bt_dis_hilight.png";
             //          border: 4 4 4 0;
                   }
               }
           }
           part { name: "elm.swallow.content";
               type: SWALLOW;
               description { state: "default" 0.0;
                   rel1.to: "base";
                   rel2.to: "base";
               }
           }
       }
       programs {
           program { name: "show";
               signal: "elm,action,show";
               source: "elm";
               action: STATE_SET "visible" 0.0;
               target: "base";
           }
           program { name: "show_2";
                signal: "show";
                action: STATE_SET "default" 0.0;
                target: "base";
                after: "show_3";
           }
           program { name: "show_3";
                signal: "show";
                action: STATE_SET "visible" 0.0;
                target: "base";
                transition: LINEAR 0.5;
           }
           program { name: "hide";
               signal: "elm,action,hide";
               source: "elm";
               action: STATE_SET "default" 0.0;
               target: "base";
           }
       }
   }
   group { name: "elm/notify/center/default";
       //this group is a design similar to the inwin group
       images {
          //		image: "00_popup_bg.png" COMP;
       }
       parts {
           part { name: "base";
               type: RECT;
               scale : 1;
               mouse_events: 0;
               repeat_events: 1;
               description { state: "default" 0.0;
                   color: 0 0 0 0;
                   rel1.relative: 0.0 0.0;
                   rel2.relative: 1.0 1.0;
               }
           }
          part { name: "persp";          
            type: RECT;
            description { state: "default" 0.0;
               min: 32 32;
               max: 32 32;
               align: 0.5 0.5;  
               color: 0 0 0 0;
               visible: 1;
               perspective {
                  zplane: -200;
                  focal: 1000;
               }
            }
         }
         part { name: "persp1";          
            type: RECT;
            description { state: "default" 0.0;
               min: 32 32;
               max: 32 32;
               align: 0.5 0.5;
               visible: 1;
               color: 0 0 0 0;
               perspective {
                  zplane: 0;
                  focal: 1000;
               }
            }
         }
           part { name: "pop";
               scale : 1;
               mouse_events: 1;
               description { state: "default" 0.0;
                   rel1.to: "elm.swallow.content";
                   rel2.to: "elm.swallow.content";
                   image {
				//			normal: "00_popup_bg.png";
				//			border: 16 16 15 29;
							middle: DEFAULT;
							border_scale: 0;
                   }
               }
           }
           part { name: "elm.swallow.content";
               type: SWALLOW;
               scale : 1;
               description { state: "default" 0.0;
                   rel1.to: "base";
                   rel2.to: "base";
                   	map {
	                  on: 1;
	                  backface_cull: 1;
	                  perspective: "persp";
	               }
               }
               description { state: "visible" 0.0;
                   rel1.to: "base";
                   rel2.to: "base";
                   	map {
	                  on: 1;
	                  backface_cull: 1;
	                  perspective: "persp1";
	               }
               }
               description { state: "end" 0.0;
                   rel1.to: "base";
                   rel2.to: "base";
                   	map {
	                  on: 0;
	               }
               }
           }
       }
       programs {
           program { name: "show";
               signal: "elm,action,show";
               source: "elm";
               action: STATE_SET "default" 0.0;
               target: "elm.swallow.content";
           }
           program { name: "show_2";
                signal: "show";
                action: STATE_SET "visible" 0.0;
                target: "elm.swallow.content";
                transition: LINEAR 0.2;
                after: "end";
           }
           program { name: "end";
           	 action: STATE_SET "end" 0.0;
           	 target: "elm.swallow.content";
           }
           program { name: "hide";
               signal: "elm,action,hide";
               source: "elm";
               action: STATE_SET "default" 0.0;
               target: "elm.swallow.content";
           }
       }
   }

   group { name: "elm/notify/bottom/default";
       //this group is a design similar to the inwin group
       /*images {
           image: "shad_circ.png" COMP;
           image: "bt_dis_base.png" COMP;
           image: "bt_dis_hilight.png" COMP;
       }*/
       parts {
           part { name: "base";
               type: RECT;
               mouse_events: 0;
               repeat_events: 1;
               description { state: "default" 0.0;
                   color: 0 0 0 0;
                   //rel1.offset: 10 10;
                   //rel2.offset: -10 -10;
                   rel1.relative: 0.0 1.0;
                   rel2.relative: 1.0 2.0;
               }
               description { state: "visible" 0.0;
                   inherit: "default" 0.0;
                   color: 0 0 0 64;
                   rel1.relative: 0.0 0.0;
                   rel2.relative: 1.0 1.0;
               }
           }
           /*part { name: "shad";
               mouse_events:  0;
               description { state: "default" 0.0;
                   image.normal: "shad_circ.png";
                   rel1.to: "elm.swallow.content";
                   rel1.offset: -64 -64;
                   rel2.to: "elm.swallow.content";
                   rel2.offset: 63 63;
                   fill.smooth: 0;
               }
           }
           part { name: "pop";
               mouse_events: 1;
               description { state: "default" 0.0;
                   rel1.to: "elm.swallow.content";
                   rel1.offset: -5 -5;
                   rel2.to: "elm.swallow.content";
                   rel2.offset: 4 4;
                   image {
                       normal: "bt_dis_base.png";
                       border: 4 4 4 4;
                   }
                   image.middle: SOLID;
               }
           }
           part { name: "popover";
               mouse_events: 0;
               description { state: "default" 0.0;
                   rel1.to: "pop";
                   rel2.to: "pop";
                   rel2.relative: 1.0 0.5;
                   image {
                       normal: "bt_dis_hilight.png";
                       border: 4 4 4 0;
                   }
               }
           }*/
           part { name: "elm.swallow.content";
               type: SWALLOW;
               description { state: "default" 0.0;
                   rel1.to: "base";
                   rel2.to: "base";
               }
           }
       }
       programs {
           program { name: "show";
               signal: "elm,action,show";
               source: "elm";
               action: STATE_SET "visible" 0.0;
               target: "base";
           }
           program { name: "show_2";
                signal: "show";
                action: STATE_SET "default" 0.0;
                target: "base";
                after: "show_3";
           }
           program { name: "show_3";
                signal: "show";
                action: STATE_SET "visible" 0.0;
                target: "base";
                transition: LINEAR 0.5;
           }
           program { name: "hide";
               signal: "elm,action,hide";
               source: "elm";
               action: STATE_SET "default" 0.0;
               target: "base";
           }
       }
   }
   group { name: "elm/notify/left/default";
       //this group is a design similar to the inwin group
       images {
           image: "shad_circ.png" COMP;
           image: "bt_dis_base.png" COMP;
           image: "bt_dis_hilight.png" COMP;
       }
       parts {
           part { name: "base";
               type: RECT;
               mouse_events: 0;
               repeat_events: 1;
               description { state: "default" 0.0;
                   color: 0 0 0 0;
                   rel1.offset: 10 10;
                   rel2.offset: -10 -10;
                   rel1.relative: -1.0 0.0;
                   rel2.relative: 0.0 1.0;
               }
               description { state: "visible" 0.0;
                   inherit: "default" 0.0;
                   color: 0 0 0 64;
                   rel1.relative: 0.0 0.0;
                   rel2.relative: 1.0 1.0;
               }
           }
           part { name: "shad";
               mouse_events:  0;
               description { state: "default" 0.0;
                   image.normal: "shad_circ.png";
                   rel1.to: "elm.swallow.content";
                   rel1.offset: -64 -64;
                   rel2.to: "elm.swallow.content";
                   rel2.offset: 63 63;
                   fill.smooth: 0;
               }
           }
           part { name: "pop";
               mouse_events: 1;
               description { state: "default" 0.0;
                   rel1.to: "elm.swallow.content";
                   rel1.offset: -5 -5;
                   rel2.to: "elm.swallow.content";
                   rel2.offset: 4 4;
                   image {
                       normal: "bt_dis_base.png";
                       border: 4 4 4 4;
                   }
                   image.middle: SOLID;
               }
           }
           part { name: "popover";
               mouse_events: 0;
               description { state: "default" 0.0;
                   rel1.to: "pop";
                   rel2.to: "pop";
                   rel2.relative: 1.0 0.5;
                   image {
                       normal: "bt_dis_hilight.png";
                       border: 4 4 4 0;
                   }
               }
           }
           part { name: "elm.swallow.content";
               type: SWALLOW;
               description { state: "default" 0.0;
                   rel1.to: "base";
                   rel2.to: "base";
               }
           }
       }
       programs {
           program { name: "show";
               signal: "elm,action,show";
               source: "elm";
               action: STATE_SET "visible" 0.0;
               target: "base";
           }
           program { name: "show_2";
               signal: "show";
               action: STATE_SET "default" 0.0;
               target: "base";
               after: "show_3";
           }
           program { name: "show_3";
               signal: "show";
               action: STATE_SET "visible" 0.0;
               target: "base";
               transition: LINEAR 0.5;
           }
           program { name: "hide";
               signal: "elm,action,hide";
               source: "elm";
               action: STATE_SET "default" 0.0;
               target: "base";
           }
       }
   }
   group { name: "elm/notify/right/default";
       //this group is a design similar to the inwin group
       images {
           image: "shad_circ.png" COMP;
           image: "bt_dis_base.png" COMP;
           image: "bt_dis_hilight.png" COMP;
       }
       parts {
           part { name: "base";
               type: RECT;
               mouse_events: 0;
               repeat_events: 1;
                description { state: "default" 0.0;
                   color: 0 0 0 0;
                   rel1.offset: 10 10;
                   rel2.offset: -10 -10;
                   rel1.relative: 1.0 0.0;
                   rel2.relative: 2.0 1.0;
               }
               description { state: "visible" 0.0;
                   inherit: "default" 0.0;
                   color: 0 0 0 64;
                   rel1.relative: 0.0 0.0;
                   rel2.relative: 1.0 1.0;
               }
           }
           part { name: "shad";
               mouse_events:  0;
               description { state: "default" 0.0;
                   image.normal: "shad_circ.png";
                   rel1.to: "elm.swallow.content";
                   rel1.offset: -64 -64;
                   rel2.to: "elm.swallow.content";
                   rel2.offset: 63 63;
                   fill.smooth: 0;
               }
           }
           part { name: "pop";
               mouse_events: 1;
               description { state: "default" 0.0;
                   rel1.to: "elm.swallow.content";
                   rel1.offset: -5 -5;
                   rel2.to: "elm.swallow.content";
                   rel2.offset: 4 4;
                   image {
                       normal: "bt_dis_base.png";
                       border: 4 4 4 4;
                   }
                   image.middle: SOLID;
               }
           }
           part { name: "popover";
               mouse_events: 0;
               description { state: "default" 0.0;
                   rel1.to: "pop";
                   rel2.to: "pop";
                   rel2.relative: 1.0 0.5;
                   image {
                       normal: "bt_dis_hilight.png";
                       border: 4 4 4 0;
                   }
               }
           }
           part { name: "elm.swallow.content";
               type: SWALLOW;
               description { state: "default" 0.0;
                   rel1.to: "base";
                   rel2.to: "base";
               }
           }
       }
       programs {
           program { name: "show";
               signal: "elm,action,show";
               source: "elm";
               action: STATE_SET "visible" 0.0;
               target: "base";
           }
           program { name: "show_2";
               signal: "show";
               action: STATE_SET "default" 0.0;
               target: "base";
               after: "show_3";
           }
           program { name: "show_3";
               signal: "show";
               action: STATE_SET "visible" 0.0;
               target: "base";
               transition: LINEAR 0.5;
           }
           program { name: "hide";
               signal: "elm,action,hide";
               source: "elm";
               action: STATE_SET "default" 0.0;
               target: "base";
           }
       }
   }
   group { name: "elm/notify/top_left/default";
       //this group is a design similar to the inwin group
       images {
           image: "shad_circ.png" COMP;
           image: "bt_dis_base.png" COMP;
           image: "bt_dis_hilight.png" COMP;
       }
       parts {
           part { name: "base";
               type: RECT;
               mouse_events: 0;
               repeat_events: 1;
                description { state: "default" 0.0;
                   color: 0 0 0 0;
                   rel1.offset: 10 10;
                   rel2.offset: -10 -10;
                   rel1.relative: 0.0 -1.0;
                   rel2.relative: 1.0 0.0;
               }
               description { state: "visible" 0.0;
                   inherit: "default" 0.0;
                   color: 0 0 0 64;
                   rel1.relative: 0.0 0.0;
                   rel2.relative: 1.0 1.0;
               }
           }
           part { name: "shad";
               mouse_events:  0;
               description { state: "default" 0.0;
                   image.normal: "shad_circ.png";
                   rel1.to: "elm.swallow.content";
                   rel1.offset: -64 -64;
                   rel2.to: "elm.swallow.content";
                   rel2.offset: 63 63;
                   fill.smooth: 0;
               }
           }
           part { name: "pop";
               mouse_events: 1;
               description { state: "default" 0.0;
                   rel1.to: "elm.swallow.content";
                   rel1.offset: -5 -5;
                   rel2.to: "elm.swallow.content";
                   rel2.offset: 4 4;
                   image {
                       normal: "bt_dis_base.png";
                       border: 4 4 4 4;
                   }
                   image.middle: SOLID;
               }
           }
           part { name: "popover";
               mouse_events: 0;
               description { state: "default" 0.0;
                   rel1.to: "pop";
                   rel2.to: "pop";
                   rel2.relative: 1.0 0.5;
                   image {
                       normal: "bt_dis_hilight.png";
                       border: 4 4 4 0;
                   }
               }
           }
           part { name: "elm.swallow.content";
               type: SWALLOW;
               description { state: "default" 0.0;
                   rel1.to: "base";
                   rel2.to: "base";
               }
           }
       }
       programs {
           program { name: "show";
               signal: "elm,action,show";
               source: "elm";
               action: STATE_SET "visible" 0.0;
               target: "base";
           }
           program { name: "show_2";
               signal: "show";
               action: STATE_SET "default" 0.0;
               target: "base";
               after: "show_3";
           }
           program { name: "show_3";
               signal: "show";
               action: STATE_SET "visible" 0.0;
               target: "base";
               transition: LINEAR 0.5;
           }
           program { name: "hide";
               signal: "elm,action,hide";
               source: "elm";
               action: STATE_SET "default" 0.0;
               target: "base";
           }
       }
   }
   group { name: "elm/notify/top_right/default";
       //this group is a design similar to the inwin group
       images {
           image: "shad_circ.png" COMP;
           image: "bt_dis_base.png" COMP;
           image: "bt_dis_hilight.png" COMP;
       }
       parts {
           part { name: "base";
               type: RECT;
               mouse_events: 0;
               repeat_events: 1;
               description { state: "default" 0.0;
                   color: 0 0 0 0;
                   rel1.offset: 10 10;
                   rel2.offset: -10 -10;
                   rel1.relative: 0.0 -1.0;
                   rel2.relative: 1.0 0.0;
               }
               description { state: "visible" 0.0;
                   inherit: "default" 0.0;
                   color: 0 0 0 64;
                   rel1.relative: 0.0 0.0;
                   rel2.relative: 1.0 1.0;
               }
           }
           part { name: "shad";
               mouse_events:  0;
               description { state: "default" 0.0;
                   image.normal: "shad_circ.png";
                   rel1.to: "elm.swallow.content";
                   rel1.offset: -64 -64;
                   rel2.to: "elm.swallow.content";
                   rel2.offset: 63 63;
                   fill.smooth: 0;
               }
           }
           part { name: "pop";
               mouse_events: 1;
               description { state: "default" 0.0;
                   rel1.to: "elm.swallow.content";
                   rel1.offset: -5 -5;
                   rel2.to: "elm.swallow.content";
                   rel2.offset: 4 4;
                   image {
                       normal: "bt_dis_base.png";
                       border: 4 4 4 4;
                   }
                   image.middle: SOLID;
               }
           }
           part { name: "popover";
               mouse_events: 0;
               description { state: "default" 0.0;
                   rel1.to: "pop";
                   rel2.to: "pop";
                   rel2.relative: 1.0 0.5;
                   image {
                       normal: "bt_dis_hilight.png";
                       border: 4 4 4 0;
                   }
               }
           }
           part { name: "elm.swallow.content";
               type: SWALLOW;
               description { state: "default" 0.0;
                   rel1.to: "base";
                   rel2.to: "base";
               }
           }
       }
       programs {
           program { name: "show";
               signal: "elm,action,show";
               source: "elm";
               action: STATE_SET "visible" 0.0;
               target: "base";
           }
           program { name: "show_2";
               signal: "show";
               action: STATE_SET "default" 0.0;
               target: "base";
               after: "show_3";
           }
           program { name: "show_3";
               signal: "show";
               action: STATE_SET "visible" 0.0;
               target: "base";
               transition: LINEAR 0.5;
           }
           program { name: "hide";
               signal: "elm,action,hide";
               source: "elm";
               action: STATE_SET "default" 0.0;
               target: "base";
           }
       }
   }
   group { name: "elm/notify/bottom_left/default";
       //this group is a design similar to the inwin group
       images {
           image: "shad_circ.png" COMP;
           image: "bt_dis_base.png" COMP;
           image: "bt_dis_hilight.png" COMP;
       }
       parts {
           part { name: "base";
               type: RECT;
               mouse_events: 0;
               repeat_events: 1;
               description { state: "default" 0.0;
                   color: 0 0 0 0;
                   rel1.offset: 10 10;
                   rel2.offset: -10 -10;
                   rel1.relative: 0.0 1.0;
                   rel2.relative: 1.0 2.0;
               }
               description { state: "visible" 0.0;
                   inherit: "default" 0.0;
                   color: 0 0 0 64;
                   rel1.relative: 0.0 0.0;
                   rel2.relative: 1.0 1.0;
               }
           }
           part { name: "shad";
               mouse_events:  0;
               description { state: "default" 0.0;
                   image.normal: "shad_circ.png";
                   rel1.to: "elm.swallow.content";
                   rel1.offset: -64 -64;
                   rel2.to: "elm.swallow.content";
                   rel2.offset: 63 63;
                   fill.smooth: 0;
               }
           }
           part { name: "pop";
               mouse_events: 1;
               description { state: "default" 0.0;
                   rel1.to: "elm.swallow.content";
                   rel1.offset: -5 -5;
                   rel2.to: "elm.swallow.content";
                   rel2.offset: 4 4;
                   image {
                       normal: "bt_dis_base.png";
                       border: 4 4 4 4;
                   }
                   image.middle: SOLID;
               }
           }
           part { name: "popover";
               mouse_events: 0;
               description { state: "default" 0.0;
                   rel1.to: "pop";
                   rel2.to: "pop";
                   rel2.relative: 1.0 0.5;
                   image {
                       normal: "bt_dis_hilight.png";
                       border: 4 4 4 0;
                   }
               }
           }
           part { name: "elm.swallow.content";
               type: SWALLOW;
               description { state: "default" 0.0;
                   rel1.to: "base";
                   rel2.to: "base";
               }
           }
       }
       programs {
           program { name: "show";
               signal: "elm,action,show";
               source: "elm";
               action: STATE_SET "visible" 0.0;
               target: "base";
           }
           program { name: "show_2";
               signal: "show";
               action: STATE_SET "default" 0.0;
               target: "base";
               after: "show_3";
           }
           program { name: "show_3";
               signal: "show";
               action: STATE_SET "visible" 0.0;
               target: "base";
               transition: LINEAR 0.5;
           }
           program { name: "hide";
               signal: "elm,action,hide";
               source: "elm";
               action: STATE_SET "default" 0.0;
               target: "base";
           }
       }
   }
   group { name: "elm/notify/bottom_right/default";
       //this group is a design similar to the inwin group
       images {
           image: "shad_circ.png" COMP;
           image: "bt_dis_base.png" COMP;
           image: "bt_dis_hilight.png" COMP;
       }
       parts {
           part { name: "base";
               type: RECT;
               mouse_events: 0;
               repeat_events: 1;
              description { state: "default" 0.0;
                   color: 0 0 0 0;
                   rel1.offset: 10 10;
                   rel2.offset: -10 -10;
                   rel1.relative: 0.0 1.0;
                   rel2.relative: 1.0 2.0;
               }
               description { state: "visible" 0.0;
                   inherit: "default" 0.0;
                   color: 0 0 0 64;
                   rel1.relative: 0.0 0.0;
                   rel2.relative: 1.0 1.0;
               }
           }
           part { name: "shad";
               mouse_events:  0;
               description { state: "default" 0.0;
                   image.normal: "shad_circ.png";
                   rel1.to: "elm.swallow.content";
                   rel1.offset: -64 -64;
                   rel2.to: "elm.swallow.content";
                   rel2.offset: 63 63;
                   fill.smooth: 0;
               }
           }
           part { name: "pop";
               mouse_events: 1;
               description { state: "default" 0.0;
                   rel1.to: "elm.swallow.content";
                   rel1.offset: -5 -5;
                   rel2.to: "elm.swallow.content";
                   rel2.offset: 4 4;
                   image {
                       normal: "bt_dis_base.png";
                       border: 4 4 4 4;
                   }
                   image.middle: SOLID;
               }
           }
           part { name: "popover";
               mouse_events: 0;
               description { state: "default" 0.0;
                   rel1.to: "pop";
                   rel2.to: "pop";
                   rel2.relative: 1.0 0.5;
                   image {
                       normal: "bt_dis_hilight.png";
                       border: 4 4 4 0;
                   }
               }
           }
           part { name: "elm.swallow.content";
               type: SWALLOW;
               description { state: "default" 0.0;
                   rel1.to: "base";
                   rel2.to: "base";
               }
           }
       }
       programs {
           program { name: "show";
               signal: "elm,action,show";
               source: "elm";
               action: STATE_SET "visible" 0.0;
               target: "base";
           }
           program { name: "show_2";
               signal: "show";
               action: STATE_SET "default" 0.0;
               target: "base";
               after: "show_3";
           }
           program { name: "show_3";
               signal: "show";
               action: STATE_SET "visible" 0.0;
               target: "base";
               transition: LINEAR 0.5;
           }
           program { name: "hide";
               signal: "elm,action,hide";
               source: "elm";
               action: STATE_SET "default" 0.0;
               target: "base";
           }
       }
   }

///////////////////////////////////////////////////////////////////////////////
   group { name: "elm/win/inwin/default";
      images {
	 image: "shad_circ.png" COMP;
	 image: "bt_dis_base.png" COMP;
	 image: "bt_dis_hilight.png" COMP;
      }
      parts {
	 part { name: "base";
	    type: RECT;
	    mouse_events: 1;
	    description { state: "default" 0.0;
	       color: 0 0 0 0;
	    }
	    description { state: "visible" 0.0;
	       inherit: "default" 1.0;
	       color: 0 0 0 64;
	    }
	 }
         part { name: "shad";
	    mouse_events:  0;
	    description { state: "default" 0.0;
	       image.normal: "shad_circ.png";
	       rel1.to: "elm.swallow.content";
	       rel1.offset: -64 -64;
	       rel2.to: "elm.swallow.content";
	       rel2.offset: 63 63;
               fill.smooth: 0;
	    }
	 }
	 part { name: "pop";
	    mouse_events: 1;
	    description { state: "default" 0.0;
	       rel1.to: "elm.swallow.content";
               rel1.offset: -5 -5;
	       rel2.to: "elm.swallow.content";
               rel2.offset: 4 4;
               image {
		  normal: "bt_dis_base.png";
		  border: 4 4 4 4;
	       }
               image.middle: SOLID;
	    }
	 }
         part { name: "popover";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       rel1.to: "pop";
	       rel2.to: "pop";
	       rel2.relative: 1.0 0.5;
	       image {
		  normal: "bt_dis_hilight.png";
		  border: 4 4 4 0;
	       }
	    }
	 }
	 part { name: "elm.swallow.content";
            type: SWALLOW;
	    description { state: "default" 0.0;
               rel1.relative: 0.1 0.1;
               rel2.relative: 0.9 0.9;
	    }
	 }
      }
      programs {
	 program { name: "show";
            signal: "elm,action,show";
	    source: "elm";
	    action: STATE_SET "visible" 0.0;
//	    transition: DECELERATE 0.5;
	    target: "base";
	 }
	 program { name: "hide";
            signal: "elm,action,hide";
	    source: "elm";
	    action: STATE_SET "default" 0.0;
//	    transition: DECELERATE 0.5;
	    target: "base";
	 }
      }
   }

   group { name: "elm/win/inwin/minimal";
      images {
	 image: "shad_circ.png" COMP;
	 image: "bt_dis_base.png" COMP;
	 image: "bt_dis_hilight.png" COMP;
      }
      parts {
	 part { name: "base";
	    type: RECT;
	    mouse_events: 1;
	    description { state: "default" 0.0;
	       color: 0 0 0 0;
	    }
	    description { state: "visible" 0.0;
	       inherit: "default" 1.0;
	       color: 0 0 0 64;
	    }
	 }
         part { name: "shad";
	    mouse_events:  0;
	    description { state: "default" 0.0;
	       image.normal: "shad_circ.png";
	       rel1.to: "elm.swallow.content";
	       rel1.offset: -64 -64;
	       rel2.to: "elm.swallow.content";
	       rel2.offset: 63 63;
               fill.smooth: 0;
	    }
	 }
	 part { name: "pop";
	    mouse_events: 1;
	    description { state: "default" 0.0;
	       rel1.to: "elm.swallow.content";
               rel1.offset: -5 -5;
	       rel2.to: "elm.swallow.content";
               rel2.offset: 4 4;
               image {
		  normal: "bt_dis_base.png";
		  border: 4 4 4 4;
	       }
               image.middle: SOLID;
	    }
	 }
         part { name: "popover";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       rel1.to: "pop";
	       rel2.to: "pop";
	       rel2.relative: 1.0 0.5;
	       image {
		  normal: "bt_dis_hilight.png";
		  border: 4 4 4 0;
	       }
	    }
	 }
	 part { name: "elm.swallow.content";
            type: SWALLOW;
	    description { state: "default" 0.0;
               fixed: 1 1;
               rel1.relative: 0.5 0.5;
               rel2.relative: 0.5 0.5;
	    }
	 }
      }
      programs {
	 program { name: "show";
            signal: "elm,action,show";
	    source: "elm";
	    action: STATE_SET "visible" 0.0;
//	    transition: DECELERATE 0.5;
	    target: "base";
	 }
	 program { name: "hide";
            signal: "elm,action,hide";
	    source: "elm";
	    action: STATE_SET "default" 0.0;
//	    transition: DECELERATE 0.5;
	    target: "base";
	 }
      }
   }

   group { name: "elm/win/inwin/minimal_vertical";
      images {
	 image: "shad_circ.png" COMP;
	 image: "bt_dis_base.png" COMP;
	 image: "bt_dis_hilight.png" COMP;
      }
      parts {
	 part { name: "base";
	    type: RECT;
	    mouse_events: 1;
	    description { state: "default" 0.0;
	       color: 0 0 0 0;
	    }
	    description { state: "visible" 0.0;
	       inherit: "default" 1.0;
	       color: 0 0 0 64;
	    }
	 }
         part { name: "shad";
	    mouse_events:  0;
	    description { state: "default" 0.0;
	       image.normal: "shad_circ.png";
	       rel1.to: "elm.swallow.content";
	       rel1.offset: -64 -64;
	       rel2.to: "elm.swallow.content";
	       rel2.offset: 63 63;
               fill.smooth: 0;
	    }
	 }
	 part { name: "pop";
	    mouse_events: 1;
	    description { state: "default" 0.0;
	       rel1.to: "elm.swallow.content";
               rel1.offset: -5 -5;
	       rel2.to: "elm.swallow.content";
               rel2.offset: 4 4;
               image {
		  normal: "bt_dis_base.png";
		  border: 4 4 4 4;
	       }
               image.middle: SOLID;
	    }
	 }
         part { name: "popover";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       rel1.to: "pop";
	       rel2.to: "pop";
	       rel2.relative: 1.0 0.5;
	       image {
		  normal: "bt_dis_hilight.png";
		  border: 4 4 4 0;
	       }
	    }
	 }
	 part { name: "elm.swallow.content";
            type: SWALLOW;
	    description { state: "default" 0.0;
               fixed: 1 1;
               rel1.relative: 0.1 0.5;
               rel2.relative: 0.9 0.5;
	    }
	 }
      }
      programs {
	 program { name: "show";
            signal: "elm,action,show";
	    source: "elm";
	    action: STATE_SET "visible" 0.0;
//	    transition: DECELERATE 0.5;
	    target: "base";
	 }
	 program { name: "hide";
            signal: "elm,action,hide";
	    source: "elm";
	    action: STATE_SET "default" 0.0;
//	    transition: DECELERATE 0.5;
	    target: "base";
	 }
      }
   }

///////////////////////////////////////////////////////////////////////////////
   group { name: "elm/pager/base/default";
      data.item: "onshow" "raise";
// other options
//      data.item: "onhide" "lower";
//      data.item: "onshow" "lower";
      /*images {
	 image: "frame_1.png" COMP;
	 image: "frame_2.png" COMP;
         image: "dia_grad.png" COMP;
      }*/
      parts {
         part { name: "clip";
            type: RECT;
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       rel1 {
                  to: "base";
                  offset: -9999 -9999;
               }
	       rel2 {
                  to: "base";
                  offset: 9999 9999;
               }
               color: 255 255 255 255;
	    }
	    description { state: "visible" 0.0;
               inherit: "default" 0.0;
	    }
	    description { state: "hidden" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 0;
               visible: 0;
	    }
	 }
         part { name: "base0";
	    mouse_events:  0;
            clip_to: "clip";
	    description { state: "default" 0.0;
	       //image.normal: "dia_grad.png";
	       rel1.to: "over";
	       rel2.to: "over";
               /*fill {
		  smooth: 0;
		  size {
		     relative: 0.0 1.0;
                     offset: 64 0;
		  }
	       }*/
	    }
	 }
	 part { name: "base";
	    mouse_events:  0;
            clip_to: "clip";
	    description { state: "default" 0.0;
	       /*image {
		  normal: "frame_2.png";
		  border: 5 5 32 26;
		  middle: 0;
	       }
	       fill.smooth : 0;*/
	    }
	    description { state: "hidden" 0.0;
               inherit: "default" 0.0;
               rel1.relative: -1.0 0.0;
               rel2.relative: 0.0 1.0;
	    }
	    description { state: "visible" 0.0;
               inherit: "default" 0.0;
               rel1.relative: 0.0 0.0;
               rel2.relative: 1.0 1.0;
	    }
	 }
         part { name: "over";
	    mouse_events:  0;
            clip_to: "clip";
	    description { state:    "default" 0.0;
	       rel1 {
                  to: "base";
                  offset: 4 4;
               }
	       rel2 {
                  to: "base";
                  offset: -5 -5;
               }
	       /*image {
		  normal: "frame_1.png";
		  border: 2 2 28 22;
		  middle: 0;
	       }
	       fill.smooth : 0;*/
	    }
	 }
	 part { name: "elm.swallow.content";
	    type: SWALLOW;
            clip_to: "clip";
	    description { state: "default" 0.0;
	       rel1 {
                  to: "base";
                  //offset: 8 8;
               }
	       rel2 {
                  to: "base";
                  //offset: -9 -9;
               }
	    }
	 }
      }
      programs {
 program { name: "push_start";
	    signal: "elm,action,push";
	    source: "elm";
	    action:  STATE_SET "hidden" 0.0;
	    target: "base";
	    target: "clip";
            after: "show_start2";
	 }

         program { name: "show_start";
	    signal: "elm,action,show";
	    source: "elm";
	    action:  STATE_SET "hidden" 0.0;
	    target: "base";
	    target: "clip";
            after: "show_start2";
	 }
         program { name: "show_start2";
	    action:  STATE_SET "visible" 0.0;
            transition: DECELERATE 0.5;
	    target: "base";
	    target: "clip";
            after: "show_end";
	 }
         program { name: "show_end";
            action: SIGNAL_EMIT "elm,action,show,finished" "";
	 }
 program { name: "pop_start";
	    signal: "elm,action,pop";
	    source: "elm";
	    action:  STATE_SET "visible" 0.0;
	    target: "base";
	    target: "clip";
            after: "hide_start2";
	 }

         program { name: "hide_start";
	    signal: "elm,action,hide";
	    source: "elm";
	    action:  STATE_SET "visible" 0.0;
	    target: "base";
	    target: "clip";
            after: "hide_start2";
	 }
         program { name: "hide_start2";
	    action:  STATE_SET "hidden" 0.0;
            transition: DECELERATE 0.5;
	    target: "base";
	    target: "clip";
            after: "hide_end";
	 }
         program { name: "hide_end";
            action: SIGNAL_EMIT "elm,action,hide,finished" "";
	 }
         program { name: "reset";
	    signal: "elm,action,reset";
	    source: "elm";
	    action:  STATE_SET "default" 0.0;
	    target: "base";
	    target: "clip";
	 }
      }
   }

   group { name: "elm/pager/base/fade";
       data.item: "onshow" "raise";
       // other options
       //      data.item: "onhide" "lower";
       //      data.item: "onshow" "lower";
       images {
           image: "frame_1.png" COMP;
           image: "frame_2.png" COMP;
           image: "dia_grad.png" COMP;
       }
       parts {
           part { name: "clip_base";
               type: RECT;
               mouse_events: 0;
               description { state: "default" 0.0;
                   rel1 {
                       to: "base";
                       offset: -9999 -9999;
                   }
                   rel2 {
                       to: "base";
                       offset: 9999 9999;
                   }
                   color: 255 255 255 120;
               }
               description { state: "visible" 0.0;
                   inherit: "default" 0.0;
               }
               description { state: "hidden" 0.0;
                   inherit: "default" 0.0;
                   color: 255 255 255 0;
                   visible: 0;
               }
           }
           part { name: "clip";
               type: RECT;
               mouse_events: 0;
               description { state: "default" 0.0;
                   rel1 {
                       to: "base";
                       offset: -9999 -9999;
                   }
                   rel2 {
                       to: "base";
                       offset: 9999 9999;
                   }
                   color: 255 255 255 255;
               }
               description { state: "visible" 0.0;
                   inherit: "default" 0.0;
               }
               description { state: "hidden" 0.0;
                   inherit: "default" 0.0;
                   color: 255 255 255 0;
                   visible: 0;
               }
           }
           part { name: "base0";
               mouse_events:  0;
               clip_to: "clip_base";
               description { state: "default" 0.0;
                   image.normal: "dia_grad.png";
                   rel1.to: "over";
                   rel2.to: "over";
                   fill {
                       smooth: 0;
                       size {
                           relative: 0.0 1.0;
                           offset: 64 0;
                       }
                   }
               }
           }
           part { name: "base";
               mouse_events:  0;
               clip_to: "clip_base";
               description { state: "default" 0.0;
                   image {
                       normal: "frame_2.png";
                       border: 5 5 32 26;
                       middle: 0;
                   }
                   fill.smooth : 0;
               }
           }
           part { name: "over";
               mouse_events:  0;
               clip_to: "clip";
               description { state:    "default" 0.0;
                   rel1 {
                       to: "base";
                       offset: 4 4;
                   }
                   rel2 {
                       to: "base";
                       offset: -5 -5;
                   }
                   image {
                       normal: "frame_1.png";
                       border: 2 2 28 22;
                       middle: 0;
                   }
                   fill.smooth : 0;
               }
           }
           part { name: "elm.swallow.content";
               type: SWALLOW;
               clip_to: "clip";
               description { state: "default" 0.0;
                   rel1 {
                       to: "base";
                       offset: 8 8;
                   }
                   rel2 {
                       to: "base";
                       offset: -9 -9;
                   }
               }
           }
       }
       programs {
       	 program { name: "push_start";
	    signal: "elm,action,push";
	    source: "elm";
	    action:  STATE_SET "hidden" 0.0;
	    target: "base";
	    target: "clip";
            after: "show_start2";
	 }
           program { name: "show_start";
               signal: "elm,action,show";
               source: "elm";
               action:  STATE_SET "hidden" 0.0;
               target: "clip";
               target: "clip_base";
               after: "show_start2";
           }
           program { name: "show_start2";
               action:  STATE_SET "visible" 0.0;
               transition: DECELERATE 0.5;
               target: "clip";
               target: "clip_base";
               after: "show_end";
           }
           program { name: "show_end";
               action: SIGNAL_EMIT "elm,action,show,finished" "";
           }
           program { name: "pop_start";
	    signal: "elm,action,pop";
	    source: "elm";
	    action:  STATE_SET "visible" 0.0;
	    target: "base";
	    target: "clip";
            after: "hide_start2";
	 }
           program { name: "hide_start";
               signal: "elm,action,hide";
               source: "elm";
               action:  STATE_SET "visible" 0.0;
               target: "clip";
               target: "clip_base";
               after: "hide_start2";
           }
           program { name: "hide_start2";
               action:  STATE_SET "hidden" 0.0;
               transition: DECELERATE 0.5;
               target: "clip";
               target: "clip_base";
               after: "hide_end";
           }
           program { name: "hide_end";
               action: SIGNAL_EMIT "elm,action,hide,finished" "";
           }
           program { name: "reset";
               signal: "elm,action,reset";
               source: "elm";
               action:  STATE_SET "default" 0.0;
               target: "clip_base";
               target: "clip";
           }
       }
   }
   group { name: "elm/pager/base/fade_translucide";
       data.item: "onshow" "raise";
       // other options
       //      data.item: "onhide" "lower";
       //      data.item: "onshow" "lower";
       images {
           image: "frame_1.png" COMP;
           image: "frame_2.png" COMP;
           image: "dia_grad.png" COMP;
       }
       parts {
           part { name: "clip_base";
               type: RECT;
               mouse_events: 0;
               description { state: "default" 0.0;
                   rel1 {
                       to: "base";
                       offset: -9999 -9999;
                   }
                   rel2 {
                       to: "base";
                       offset: 9999 9999;
                   }
                   color: 255 255 255 120;
               }
               description { state: "visible" 0.0;
                   inherit: "default" 0.0;
               }
               description { state: "hidden" 0.0;
                   inherit: "default" 0.0;
                   color: 255 255 255 0;
                   visible: 0;
               }
           }
           part { name: "clip";
               type: RECT;
               mouse_events: 0;
               description { state: "default" 0.0;
                   rel1 {
                       to: "base";
                       offset: -9999 -9999;
                   }
                   rel2 {
                       to: "base";
                       offset: 9999 9999;
                   }
                   color: 255 255 255 255;
               }
               description { state: "visible" 0.0;
                   inherit: "default" 0.0;
               }
               description { state: "hidden" 0.0;
                   inherit: "default" 0.0;
                   color: 255 255 255 0;
                   visible: 0;
               }
           }
           part { name: "base0";
               mouse_events:  0;
               clip_to: "clip_base";
               description { state: "default" 0.0;
                   image.normal: "dia_grad.png";
                   rel1.to: "over";
                   rel2.to: "over";
                   fill {
                       smooth: 0;
                       size {
                           relative: 0.0 1.0;
                           offset: 64 0;
                       }
                   }
               }
           }
           part { name: "base";
               mouse_events:  0;
               clip_to: "clip_base";
               description { state: "default" 0.0;
                   image {
                       normal: "frame_2.png";
                       border: 5 5 32 26;
                       middle: 0;
                   }
                   fill.smooth : 0;
               }
           }
           part { name: "over";
               mouse_events:  0;
               clip_to: "clip";
               description { state:    "default" 0.0;
                   rel1 {
                       to: "base";
                       offset: 4 4;
                   }
                   rel2 {
                       to: "base";
                       offset: -5 -5;
                   }
                   image {
                       normal: "frame_1.png";
                       border: 2 2 28 22;
                       middle: 0;
                   }
                   fill.smooth : 0;
               }
           }
           part { name: "elm.swallow.content";
               type: SWALLOW;
               clip_to: "clip";
               description { state: "default" 0.0;
                   rel1 {
                       to: "base";
                       offset: 8 8;
                   }
                   rel2 {
                       to: "base";
                       offset: -9 -9;
                   }
               }
           }
       }
       programs {
        program { name: "push_start";
	    signal: "elm,action,push";
	    source: "elm";
	    action:  STATE_SET "hidden" 0.0;
	    target: "base";
	    target: "clip";
            after: "show_start2";
	 }
           program { name: "show_start";
               signal: "elm,action,show";
               source: "elm";
               action:  STATE_SET "hidden" 0.0;
               target: "clip";
               target: "clip_base";
               after: "show_start2";
           }
           program { name: "show_start2";
               action:  STATE_SET "visible" 0.0;
               transition: DECELERATE 0.5;
               target: "clip";
               target: "clip_base";
               after: "show_end";
           }
           program { name: "show_end";
               action: SIGNAL_EMIT "elm,action,show,finished" "";
           }
           program { name: "pop_start";
	    signal: "elm,action,pop";
	    source: "elm";
	    action:  STATE_SET "visible" 0.0;
	    target: "base";
	    target: "clip";
            after: "hide_start2";
	 }
           program { name: "hide_start";
               signal: "elm,action,hide";
               source: "elm";
               action:  STATE_SET "visible" 0.0;
               target: "clip";
               target: "clip_base";
               after: "hide_start2";
           }
           program { name: "hide_start2";
               action:  STATE_SET "hidden" 0.0;
               transition: DECELERATE 0.5;
               target: "clip";
               target: "clip_base";
               after: "hide_end";
           }
           program { name: "hide_end";
               action: SIGNAL_EMIT "elm,action,hide,finished" "";
           }
           program { name: "reset";
               signal: "elm,action,reset";
               source: "elm";
               action:  STATE_SET "default" 0.0;
               target: "clip_base";
               target: "clip";
           }
       }
   }


#if 0
///////////////////////////////////////////////////////////////////////////////
   group { name: "elm/separator/horizontal/default";
       images {
           image: "separator_h.png" COMP;
       }
       parts {
           part { name: "separator"; // separator group
               description { state: "default" 0.0;
                   min: 2 2;
                   rel1.offset: 4 4;
                   rel2.offset: -5 -5;
                   image {
                       normal: "separator_h.png";
                   }
                   fill {
                       smooth: 0;
                   }
               }
           }
       }
   }

   ///////////////////////////////////////////////////////////////////////////////
   group { name: "elm/separator/vertical/default";
       images {
           image: "separator_v.png" COMP;
       }
       parts {
           part { name: "separator"; // separator group
               description { state: "default" 0.0;
                   min: 2 2;
                   rel1.offset: 4 4;
                   rel2.offset: -5 -5;
                   image {
                       normal: "separator_v.png";
                   }
                   fill {
                       smooth: 0;
                   }
               }
           }
       }
   }
#endif

	group { name: "elm/separator/horizontal/dialoguefield_top";
		parts {
			part { name: "separator"; // separator group
				type: RECT;
				scale: 1;
				description {
				state: "default" 0.0;
				min: 0 15;
				align: 0 0;
				color: 0 0 0 0;
               }
           }
       }
   }

	group { name: "elm/separator/horizontal/dialoguefield_middle";
		parts {
			part {
				name: "separator"; // separator group
				type: RECT;
				scale: 1;
				description {
					state: "default" 0.0;
					min: 0 10;
					align: 0 0;
					color: 0 0 0 0;
				}
			}
		}
	}
	group { name: "elm/separator/horizontal/dialoguefield_bottom";
		parts {
			part {
				name: "separator"; // separator group
				type: RECT;
				scale: 1;
				description {
					state: "default" 0.0;
					min: 0 10;
					align: 0 0;
					color: 0 0 0 0;
				}
			}
		}
	}

///////////////////////////////////////////////////////////////////////////////

   group { name: "elm/progressbar/horizontal/default";
      images {
         image: "progress_slider_bg.9.png" COMP;
         image: "progress_slider_bar.9.png" COMP;
      }
      parts {
         part { name: "elm.background.progressbar";
            mouse_events: 0;
            scale: 1;
            description {
               state: "default" 0.0;
               rel1 {
                  relative: 0.0 0.0;
                  offset: 0 0;
               }
               rel2 {
                  relative: 1.0 1.0;
               }
            }
         }
         part { name: "elm.swallow.bar";
            mouse_events: 0;
            scale: 1;
            type: SWALLOW;
            description {
               min: 0 18;
               max: 99999 18;
               state: "default" 0.0;
               rel1 {
                  to_y: "elm.background.progressbar";
                  relative: 0.0 0.0;
               }
               rel2 {
                  to: "elm.background.progressbar";
                  relative: 1.0 1.0;
               }
            }
         }
         part { name: "elm.swallow.content";
            type: SWALLOW;
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               align: 0.0 0.5;
               rel1 {
                  offset: 0 0;
                  to_y: "elm.background.progressbar";
               }
               rel2 {
                  offset: 0 -1;
                  relative: 0.0 1.0;
                  to_y: "elm.background.progressbar";
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               aspect: 1.0 1.0;
               aspect_preference: VERTICAL;
               rel2.offset: 0 -1;//4 -1;
            }
         }
         part { name: "background";
            mouse_events: 0;
            scale: 1;
            clip_to: "elm.background.progressbar";
            description {
               state: "default" 0.0;
               rel1 {
                  to: "elm.swallow.bar";
                  relative: 0.0 0.0;
               }
               rel2 {
                  to: "elm.swallow.bar";
                  relative: 1.0 1.0;
                  offset: -1 -1;
               }
               image {
                  normal: "progress_slider_bg.9.png";
                  border: 3 3 2 2;
               }
            }
         }
         part { name: "elm.text.status";
            type: TEXT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               fixed: 1 1;
               visible: 0;
               rel1 {
                  to: "background";
                  relative: 0.5 0.5;
               }
               rel2 {
                  to: "background";
                  relative: 0.5 0.5;
               }
               text {
                  font: "SLP:style=Roman";
                  size: 25;
                  min: 0 0;
                  align: 0.5 0.0;
               }
               color: 255 255 255 255;
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               visible: 0;
               text.min: 1 1;
            }
         }

         part { name: "elm.progress.progressbar";
            mouse_events: 0;
            scale: 1;
            clip_to: "elm.background.progressbar";
            description {
               state: "default" 0.0;
               min: 0 0;
               fixed: 1 0;
               rel1 {
                  to: "elm.swallow.bar";
                  relative: 0.0 0.0;
               }
               rel2 {
                  to_y: "elm.swallow.bar";
                  to_x: "elm.cur.progressbar";
                  offset: -1 -1;
               }
               image {
                  normal: "progress_slider_bar.9.png";
                  border: 3 3 2 2;
               }
            }
            description {
               state: "invert" 0.0;
               inherit: "default" 0.0;
               rel1 {
                  to_y: "elm.swallow.bar";
                  to_x: "elm.cur.progressbar";
               }
               rel2 {
                  to: "elm.swallow.bar";
                  relative: 1.0 1.0;
               }
            }
            description {
               state: "state_begin" 0.0;
               inherit: "default" 0.0;
               rel1 {
                  to: "elm.swallow.bar";
                  relative: 0.0 0.0;
               }
               rel2 {
                  to: "elm.swallow.bar";
                  relative: 0.1 1.0;
               }
            }
            description {
               state: "state_end" 0.0;
               inherit: "default" 0.0;
               rel1 {
                  to: "elm.swallow.bar";
                  relative: 0.9 0.0;
               }
               rel2 {
                  to: "elm.swallow.bar";
                  relative: 1.0 1.0;
               }
            }
		}
         part { name: "text-bar";
            type: TEXT;
            mouse_events: 0;
            scale: 1;
            clip_to: "progress-rect";
            effect: SOFT_SHADOW;
            scale: 1;
            description { state: "default" 0.0;
               align: 0.0 0.0;
               fixed: 1 1;
               visible: 0;
               rel1.to: "elm.text.status";
               rel1.offset: -1 -1;
               rel2.to: "elm.text.status";
               text {
                  text_source: "elm.text.status";
                  font: "SLP:style=Roman";
                  size: 10;
                  min: 0 0;
                  align: 0.0 0.0;
               }
               color: 224 224 224 255;
               color3: 0 0 0 64;
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               visible: 0;
               text.min: 1 1;
            }
         }
         part { name: "elm.cur.progressbar";
            mouse_events: 0;
            scale: 1;
            dragable {
               confine: "background";
               x: 1 1 1;
               y: 0 0 0;
            }
            description { state: "default" 0.0;
               min: 0 28;
               fixed: 1 1;
               visible: 0;
               rel1 {
                  to: "background";
                  relative: 0 0;
               }
               rel2.to: "background";
           }
         }
         part { name: "progress-rect";
            mouse_events: 0;
            scale: 1;
            description {
               state: "default" 0.0;
               rel1.to: "elm.progress.progressbar";
               rel2.to: "elm.progress.progressbar";
            }
         }

	     part { name: "elm.padding.left";
            type: RECT;
			scale: 1;
            description {
				state: "default" 0.0;
				min: 20 0;
				fixed: 1 0;
				rel1 {
                	relative: 0.0  0.0;
	                offset:   0    0;
               	}
               	rel2 {
                  	relative: 0.0  1.0;
                  	offset:   0   0;
               	}
               	color: 0 0 0 0;
		  		align: 0.0 0.0;
            }
         }

         part { name: "elm.text";
            type: TEXT;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               fixed: 1 1;
               align: 0.0 0.5;
               rel1 {
				  to_x: "elm.padding.left";
                  relative: 1.0 0.0;
                  offset: 0 0;
               }
               rel2 {
                  relative: 1.0 1.0;
                  offset: 0 0;
               }
               color: 255 255 255 255;
               text {
                  font: "SLP:style=Roman";
                  size: 34;
                  min: 0 0;
                  align: 0.0 0.5;
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 0;
               text.min: 1 1;
            }
         }
      }
      programs {
         program { name: "label_show";
            signal: "elm,state,text,visible";
            source: "elm";
            action:  STATE_SET "visible" 0.0;
            target: "elm.text";
         }
         program { name: "label_hide";
            signal: "elm,state,text,hidden";
            source: "elm";
            action:  STATE_SET "default" 0.0;
            target: "elm.text";
         }
         program { name: "icon_show";
            signal: "elm,state,icon,visible";
            source: "elm";
            action:  STATE_SET "visible" 0.0;
            target: "elm.swallow.content";
         }
         program { name: "icon_hide";
            signal: "elm,state,icon,hidden";
            source: "elm";
            action:  STATE_SET "default" 0.0;
            target: "elm.swallow.content";
         }
         program { name: "units_show";
            signal: "elm,state,units,visible";
            source: "elm";
            action:  STATE_SET "show" 0.0;
            target: "text-bar";
            target: "elm.text.status";
         }
         program { name: "units_hide";
            signal: "elm,state,units,hidden";
            source: "elm";
            action:  STATE_SET "default" 0.0;
            target: "text-bar";
            target: "elm.text.status";
         }
         program { name: "slide_to_end";
            action:  STATE_SET "state_end" 0.0;
            transition: LINEAR 0.5;
            target: "elm.progress.progressbar";
            after: "slide_to_begin";
         }
         program { name: "slide_to_begin";
            signal: "elm,state,slide,begin";
            action: STATE_SET "state_begin" 0.0;
            target: "elm.progress.progressbar";
            transition: LINEAR 0.5;
            after: "slide_to_end";
         }
         program { name: "start_pulse";
            signal: "elm,state,pulse,start";
            source: "elm";
            after: "slide_to_end";
         }
         program { name: "stop_pulse";
            signal: "elm,state,pulse,stop";
            source: "elm";
            action: ACTION_STOP;
            target: "slide_to_begin";
            target: "slide_to_end";
            target: "start_pulse";
            after: "state_pulse";
         }
         program { name: "state_pulse";
            signal: "elm,state,pulse";
            source: "elm";
            action: STATE_SET "state_begin" 0.0;
            target: "elm.progress.progressbar";
            after: "units_hide";
         }
         program { name: "state_fraction";
            signal: "elm,state,fraction";
            source: "elm";
            action: ACTION_STOP;
            target: "slide_to_begin";
            target: "slide_to_end";
            target: "start_pulse";
            action: STATE_SET "default" 0.0;
            target: "elm.progress.progressbar";
         }
         program { name: "set_invert_on";
            signal: "elm,state,inverted,on";
            source: "elm";
            action:  STATE_SET "invert" 0.0;
            target: "elm.progress.progressbar";
         }
         program { name: "set_invert_off";
            signal: "elm,state,inverted,off";
            source: "elm";
            action:  STATE_SET "default" 0.0;
            target: "elm.progress.progressbar";
         }
      }
   }


   group { name: "elm/progressbar/horizontal/list_progress";
      images {
         image: "00_winset_list_progress_bg.png" COMP;
         image: "00_winset_list_progress_bar.png" COMP;
      }
      parts {
	     part { name: "elm.padding.left";
            type: RECT;
			scale: 1;
            description {
				state: "default" 0.0;
				min: 0 0;
				fixed: 1 0;
				rel1 {
                	relative: 0.0  0.0;
	                offset:   0    0;
               	}
               	rel2 {
                  	relative: 0.0  1.0;
                  	offset:   0   0;
               	}
               	color: 0 0 0 0;
		  		align: 0.0 0.0;
            }
         }
         part { name: "elm.padding.right";
            type: RECT;
			scale: 1;
            description {
				state: "default" 0.0;
				min: 0 0;
				fixed: 1 0;
				rel1 {
                	relative: 1.0  0.0;
	                offset:   0    0;
               	}
               	rel2 {
                  	relative: 1.0  1.0;
                  	offset:   0   0;
               	}
               	color: 0 0 0 0;
		  		align: 1.0 0.0;
            }
         }
		  part { name: "elm.background.progressbar";
            mouse_events: 0;
            scale: 1;
            description {
               state: "default" 0.0;
               rel1 {
				  to_x: "elm.padding.left";
                  relative: 1.0 0.0;
                  offset: 0 0;
               }
               rel2 {
				  to_x: "elm.padding.right";
                  relative: 0.0 1.0;
                  offset: 0 0;
               }
            }
         }
         part { name: "elm.swallow.bar";
            mouse_events: 0;
            scale: 1;
            type: SWALLOW;
            description {
               min: 48 14;
               max: 99999 14;
               state: "default" 0.0;
               rel1 {
                  to: "elm.background.progressbar";
                  relative: 0.0 0.0;
               }
               rel2 {
                  to: "elm.background.progressbar";
                  relative: 1.0 1.0;
               }
            }
         }
         part { name: "elm.swallow.content";
            type: SWALLOW;
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               align: 0.0 0.5;
               rel1 {
                  offset: 0 0;
                  to_y: "elm.background.progressbar";
               }
               rel2 {
                  offset: 0 -1;
                  relative: 0.0 1.0;
                  to_y: "elm.background.progressbar";
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               aspect: 1.0 1.0;
               aspect_preference: VERTICAL;
               rel2.offset: 4 -1;
            }
         }
         part { name: "elm.text";
            type: TEXT;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               fixed: 1 1;
               align: 0.0 0.5;
               rel1.to_x: "elm.swallow.content";
               rel1.relative: 1.0 0.0;
               rel1.offset: -1 4;
               rel2.to_x: "elm.swallow.content";
               rel2.relative: 1.0 1.0;
               rel2.offset: -1 -5;
               color: 0 0 0 255;
               text {
                  font: "SLP:style=Roman";
                  size: 10;
                  min: 0 0;
                  align: 0.0 0.5;
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 0;
               text.min: 1 1;
               rel1.offset: 0 4;
               rel2.offset: 0 -5;
            }
         }

         part { name: "background";
            mouse_events: 0;
            scale: 1;
            clip_to: "elm.background.progressbar";
            description {
               state: "default" 0.0;
               rel1 {
                  to: "elm.swallow.bar";
                  relative: 0.0 0.0;
               }
               rel2 {
                  to: "elm.swallow.bar";
                  relative: 1.0 1.0;
                  offset: -1 -1;
               }
               image {
                  normal: "00_winset_list_progress_bg.png";
                  border: 6 6 0 0;
               }
            }
         }

         part { name: "elm.text.status";
            type: TEXT;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               fixed: 1 1;
               visible: 0;
               rel1 {
                  to: "background";
                  relative: 0.5 0.5;
               }
               rel2 {
                  to: "background";
                  relative: 0.5 0.5;
               }
               text {
                  font: "SLP:style=Roman";
                  size: 10;
                  min: 0 0;
                  align: 0.5 0.0;
               }
               color: 0 0 0 255;
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               visible: 0;
               text.min: 1 1;
            }
         }

         part { name: "elm.progress.progressbar";
            mouse_events: 0;
            scale: 1;
            clip_to: "elm.background.progressbar";
            description {
               state: "default" 0.0;
               min: 0 0;
               fixed: 1 1;
               rel1 {
                  to: "elm.swallow.bar";
                  relative: 0.0 0.0;
               }
               rel2 {
                  to_y: "elm.swallow.bar";
                  to_x: "elm.cur.progressbar";
                  offset: -1 -1;
               }
               image {
                  normal: "00_winset_list_progress_bar.png";
                  border: 6 6 0 0;
               }
            }
            description {
               state: "invert" 0.0;
               inherit: "default" 0.0;
               rel1 {
                  to_y: "elm.swallow.bar";
                  to_x: "elm.cur.progressbar";
               }
               rel2 {
                  to: "elm.swallow.bar";
                  relative: 1.0 1.0;
               }
            }
            description {
               state: "state_begin" 0.0;
               inherit: "default" 0.0;
               rel1 {
                  to: "elm.swallow.bar";
                  relative: 0.0 0.0;
               }
               rel2 {
                  to: "elm.swallow.bar";
                  relative: 0.1 1.0;
               }
            }
            description {
               state: "state_end" 0.0;
               inherit: "default" 0.0;
               rel1 {
                  to: "elm.swallow.bar";
                  relative: 0.9 0.0;
               }
               rel2 {
                  to: "elm.swallow.bar";
                  relative: 1.0 1.0;
               }
            }
         }
         part { name: "text-bar";
            type: TEXT;
            mouse_events: 0;
            scale: 1;
            clip_to: "progress-rect";
            effect: SOFT_SHADOW;
            scale: 0;
            description { state: "default" 0.0;
               align: 0.0 0.0;
               fixed: 1 1;
               visible: 0;
               rel1.to: "elm.text.status";
               rel1.offset: -1 -1;
               rel2.to: "elm.text.status";
               text {
                  text_source: "elm.text.status";
                  font: "SLP:style=Roman";
                  size: 10;
                  min: 0 0;
                  align: 0.0 0.0;
               }
               color: 224 224 224 255;
               color3: 0 0 0 64;
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               visible: 0;
               text.min: 1 1;
            }
         }
         part { name: "elm.cur.progressbar";
            mouse_events: 0;
            scale: 1;
            dragable {
               confine: "background";
               x: 1 1 1;
               y: 0 0 0;
            }
            description { state: "default" 0.0;
               min: 0 28;
               fixed: 1 1;
               visible: 0;
               rel1 {
                  to: "background";
                  relative: 0 0;
               }
               rel2.to: "background";
           }
         }
         part { name: "progress-rect";
            mouse_events: 0;
            scale: 1;
            description {
               state: "default" 0.0;
               rel1.to: "elm.progress.progressbar";
               rel2.to: "elm.progress.progressbar";
            }
         }
      }
      programs {
         program { name: "label_show";
            signal: "elm,state,text,visible";
            source: "elm";
            action:  STATE_SET "visible" 0.0;
            target: "elm.text";
         }
         program { name: "label_hide";
            signal: "elm,state,text,hidden";
            source: "elm";
            action:  STATE_SET "default" 0.0;
            target: "elm.text";
         }
         program { name: "icon_show";
            signal: "elm,state,icon,visible";
            source: "elm";
            action:  STATE_SET "visible" 0.0;
            target: "elm.swallow.content";
         }
         program { name: "icon_hide";
            signal: "elm,state,icon,hidden";
            source: "elm";
            action:  STATE_SET "default" 0.0;
            target: "elm.swallow.content";
         }
         program { name: "units_show";
            signal: "elm,state,units,visible";
            source: "elm";
            action:  STATE_SET "show" 0.0;
            target: "text-bar";
            target: "elm.text.status";
         }
         program { name: "units_hide";
            signal: "elm,state,units,hidden";
            source: "elm";
            action:  STATE_SET "default" 0.0;
            target: "text-bar";
            target: "elm.text.status";
         }
         program { name: "slide_to_end";
            action:  STATE_SET "state_end" 0.0;
            transition: LINEAR 0.5;
            target: "elm.progress.progressbar";
            after: "slide_to_begin";
         }
         program { name: "slide_to_begin";
            signal: "elm,state,slide,begin";
            action: STATE_SET "state_begin" 0.0;
            target: "elm.progress.progressbar";
            transition: LINEAR 0.5;
            after: "slide_to_end";
         }
         program { name: "start_pulse";
            signal: "elm,state,pulse,start";
            source: "elm";
           // after: "slide_to_end";
         }
         program { name: "stop_pulse";
            signal: "elm,state,pulse,stop";
            source: "elm";
            action: ACTION_STOP;
            target: "slide_to_begin";
            target: "slide_to_end";
            target: "start_pulse";
            //after: "state_pulse";
         }
         program { name: "state_pulse";
            signal: "elm,state,pulse";
            source: "elm";
            action: STATE_SET "state_begin" 0.0;
            target: "elm.progress.progressbar";
            after: "units_hide";
         }
         program { name: "state_fraction";
            signal: "elm,state,fraction";
            source: "elm";
            action: ACTION_STOP;
            target: "slide_to_begin";
            target: "slide_to_end";
            target: "start_pulse";
            action: STATE_SET "default" 0.0;
            target: "elm.progress.progressbar";
         }
         program { name: "set_invert_on";
            signal: "elm,state,inverted,on";
            source: "elm";
            action:  STATE_SET "invert" 0.0;
            target: "elm.progress.progressbar";
         }
         program { name: "set_invert_off";
            signal: "elm,state,inverted,off";
            source: "elm";
            action:  STATE_SET "default" 0.0;
            target: "elm.progress.progressbar";
         }
      }
   }


   group { name: "elm/progressbar/horizontal/toolbar_progress";
      images {
         image: "00_toolbar_progress_bg.png" COMP;
         image: "00_toolbar_progress_bar.png" COMP;
      }
      parts {
	     part { name: "elm.padding.left";
            type: RECT;
			scale: 1;
            description {
				state: "default" 0.0;
				min: 0 0;
				fixed: 1 0;
				rel1 {
                	relative: 0.0  0.0;
	                offset:   0    0;
               	}
               	rel2 {
                  	relative: 0.0  1.0;
                  	offset:   0   0;
               	}
               	color: 0 0 0 0;
		  		align: 0.0 0.0;
            }
         }
         part { name: "elm.padding.right";
            type: RECT;
			scale: 1;
            description {
				state: "default" 0.0;
				min: 0 0;
				fixed: 1 0;
				rel1 {
                	relative: 1.0  0.0;
	                offset:   0    0;
               	}
               	rel2 {
                  	relative: 1.0  1.0;
                  	offset:   0   0;
               	}
               	color: 0 0 0 0;
		  		align: 1.0 0.0;
            }
         }
		  part { name: "elm.background.progressbar";
            mouse_events: 0;
            scale: 1;
            description {
               state: "default" 0.0;
               rel1 {
				  to_x: "elm.padding.left";
                  relative: 1.0 0.0;
                  offset: 0 0;
               }
               rel2 {
				  to_x: "elm.padding.right";
                  relative: 0.0 1.0;
                  offset: 0 0;
               }
            }
         }
         part { name: "elm.swallow.bar";
            mouse_events: 0;
            scale: 1;
            type: SWALLOW;
            description {
               min: 48 14;
               max: 99999 14;
               state: "default" 0.0;
               rel1 {
                  to: "elm.background.progressbar";
                  relative: 0.0 0.0;
               }
               rel2 {
                  to: "elm.background.progressbar";
                  relative: 1.0 1.0;
               }
            }
         }
         part { name: "elm.swallow.content";
            type: SWALLOW;
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               align: 0.0 0.5;
               rel1 {
                  offset: 0 0;
                  to_y: "elm.background.progressbar";
               }
               rel2 {
                  offset: 0 -1;
                  relative: 0.0 1.0;
                  to_y: "elm.background.progressbar";
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               aspect: 1.0 1.0;
               aspect_preference: VERTICAL;
               rel2.offset: 4 -1;
            }
         }
         part { name: "elm.text";
            type: TEXT;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               fixed: 1 1;
               align: 0.0 0.5;
               rel1.to_x: "elm.swallow.content";
               rel1.relative: 1.0 0.0;
               rel1.offset: -1 4;
               rel2.to_x: "elm.swallow.content";
               rel2.relative: 1.0 1.0;
               rel2.offset: -1 -5;
               color: 0 0 0 255;
               text {
                  font: "SLP:style=Roman";
                  size: 10;
                  min: 0 0;
                  align: 0.0 0.5;
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 0;
               text.min: 1 1;
               rel1.offset: 0 4;
               rel2.offset: 0 -5;
            }
         }

         part { name: "background";
            mouse_events: 0;
            scale: 1;
            clip_to: "elm.background.progressbar";
            description {
               state: "default" 0.0;
               rel1 {
                  to: "elm.swallow.bar";
                  relative: 0.0 0.0;
               }
               rel2 {
                  to: "elm.swallow.bar";
                  relative: 1.0 1.0;
                  offset: -1 -1;
               }
               image {
                  normal: "00_toolbar_progress_bg.png";
                  border: 6 6 0 0;
               }
            }
         }

         part { name: "elm.text.status";
            type: TEXT;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               fixed: 1 1;
               visible: 0;
               rel1 {
                  to: "background";
                  relative: 0.5 0.5;
               }
               rel2 {
                  to: "background";
                  relative: 0.5 0.5;
               }
               text {
                  font: "SLP:style=Roman";
                  size: 10;
                  min: 0 0;
                  align: 0.5 0.0;
               }
               color: 0 0 0 255;
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               visible: 0;
               text.min: 1 1;
            }
         }

         part { name: "elm.progress.progressbar";
            mouse_events: 0;
            scale: 1;
            clip_to: "elm.background.progressbar";
            description {
               state: "default" 0.0;
               min: 0 0;
               fixed: 1 1;
               rel1 {
                  to: "elm.swallow.bar";
                  relative: 0.0 0.0;
               }
               rel2 {
                  to_y: "elm.swallow.bar";
                  to_x: "elm.cur.progressbar";
                  offset: -1 -1;
               }
               image {
                  normal: "00_toolbar_progress_bar.png";
                  border: 6 6 0 0;
               }
            }
            description {
               state: "invert" 0.0;
               inherit: "default" 0.0;
               rel1 {
                  to_y: "elm.swallow.bar";
                  to_x: "elm.cur.progressbar";
               }
               rel2 {
                  to: "elm.swallow.bar";
                  relative: 1.0 1.0;
               }
            }
            description {
               state: "state_begin" 0.0;
               inherit: "default" 0.0;
               rel1 {
                  to: "elm.swallow.bar";
                  relative: 0.0 0.0;
               }
               rel2 {
                  to: "elm.swallow.bar";
                  relative: 0.1 1.0;
               }
            }
            description {
               state: "state_end" 0.0;
               inherit: "default" 0.0;
               rel1 {
                  to: "elm.swallow.bar";
                  relative: 0.9 0.0;
               }
               rel2 {
                  to: "elm.swallow.bar";
                  relative: 1.0 1.0;
               }
            }
         }
         part { name: "text-bar";
            type: TEXT;
            mouse_events: 0;
            scale: 1;
            clip_to: "progress-rect";
            effect: SOFT_SHADOW;
            scale: 0;
            description { state: "default" 0.0;
               align: 0.0 0.0;
               fixed: 1 1;
               visible: 0;
               rel1.to: "elm.text.status";
               rel1.offset: -1 -1;
               rel2.to: "elm.text.status";
               text {
                  text_source: "elm.text.status";
                  font: "SLP:style=Roman";
                  size: 10;
                  min: 0 0;
                  align: 0.0 0.0;
               }
               color: 224 224 224 255;
               color3: 0 0 0 64;
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               visible: 0;
               text.min: 1 1;
            }
         }
         part { name: "elm.cur.progressbar";
            mouse_events: 0;
            scale: 1;
            dragable {
               confine: "background";
               x: 1 1 1;
               y: 0 0 0;
            }
            description { state: "default" 0.0;
               min: 0 28;
               fixed: 1 1;
               visible: 0;
               rel1 {
                  to: "background";
                  relative: 0 0;
               }
               rel2.to: "background";
           }
         }
         part { name: "progress-rect";
            mouse_events: 0;
            scale: 1;
            description {
               state: "default" 0.0;
               rel1.to: "elm.progress.progressbar";
               rel2.to: "elm.progress.progressbar";
            }
         }
      }
      programs {
         program { name: "label_show";
            signal: "elm,state,text,visible";
            source: "elm";
            action:  STATE_SET "visible" 0.0;
            target: "elm.text";
         }
         program { name: "label_hide";
            signal: "elm,state,text,hidden";
            source: "elm";
            action:  STATE_SET "default" 0.0;
            target: "elm.text";
         }
         program { name: "icon_show";
            signal: "elm,state,icon,visible";
            source: "elm";
            action:  STATE_SET "visible" 0.0;
            target: "elm.swallow.content";
         }
         program { name: "icon_hide";
            signal: "elm,state,icon,hidden";
            source: "elm";
            action:  STATE_SET "default" 0.0;
            target: "elm.swallow.content";
         }
         program { name: "units_show";
            signal: "elm,state,units,visible";
            source: "elm";
            action:  STATE_SET "show" 0.0;
            target: "text-bar";
            target: "elm.text.status";
         }
         program { name: "units_hide";
            signal: "elm,state,units,hidden";
            source: "elm";
            action:  STATE_SET "default" 0.0;
            target: "text-bar";
            target: "elm.text.status";
         }
         program { name: "slide_to_end";
            action:  STATE_SET "state_end" 0.0;
            transition: LINEAR 0.5;
            target: "elm.progress.progressbar";
            after: "slide_to_begin";
         }
         program { name: "slide_to_begin";
            signal: "elm,state,slide,begin";
            action: STATE_SET "state_begin" 0.0;
            target: "elm.progress.progressbar";
            transition: LINEAR 0.5;
            after: "slide_to_end";
         }
         program { name: "start_pulse";
            signal: "elm,state,pulse,start";
            source: "elm";
            after: "slide_to_end";
         }
         program { name: "stop_pulse";
            signal: "elm,state,pulse,stop";
            source: "elm";
            action: ACTION_STOP;
            target: "slide_to_begin";
            target: "slide_to_end";
            target: "start_pulse";
            after: "state_pulse";
         }
         program { name: "state_pulse";
            signal: "elm,state,pulse";
            source: "elm";
            action: STATE_SET "state_begin" 0.0;
            target: "elm.progress.progressbar";
            after: "units_hide";
         }
         program { name: "state_fraction";
            signal: "elm,state,fraction";
            source: "elm";
            action: ACTION_STOP;
            target: "slide_to_begin";
            target: "slide_to_end";
            target: "start_pulse";
            action: STATE_SET "default" 0.0;
            target: "elm.progress.progressbar";
         }
         program { name: "set_invert_on";
            signal: "elm,state,inverted,on";
            source: "elm";
            action:  STATE_SET "invert" 0.0;
            target: "elm.progress.progressbar";
         }
         program { name: "set_invert_off";
            signal: "elm,state,inverted,off";
            source: "elm";
            action:  STATE_SET "default" 0.0;
            target: "elm.progress.progressbar";
         }
      }
   }


   group { name: "elm/progressbar/horizontal/pending_list";
      images {
         image: "00_pending_list_01.png" COMP;
         image: "00_pending_list_02.png" COMP;
      }
      parts {
	     part { name: "elm.padding.left";
            type: RECT;
			scale: 1;
            description {
				state: "default" 0.0;
				min: 0 0;
				fixed: 1 0;
				rel1 {
                	relative: 0.0  0.0;
	                offset:   0    0;
               	}
               	rel2 {
                  	relative: 0.0  1.0;
                  	offset:   0   0;
               	}
               	color: 0 0 0 0;
		  		align: 0.0 0.0;
            }
         }
         part { name: "elm.padding.right";
            type: RECT;
			scale: 1;
            description {
				state: "default" 0.0;
				min: 0 0;
				fixed: 1 0;
				rel1 {
                	relative: 1.0  0.0;
	                offset:   0    0;
               	}
               	rel2 {
                  	relative: 1.0  1.0;
                  	offset:   0   0;
               	}
               	color: 0 0 0 0;
		  		align: 1.0 0.0;
            }
         }
		  part { name: "elm.background.progressbar";
            mouse_events: 0;
            scale: 1;
            description {
               state: "default" 0.0;
               rel1 {
				  to_x: "elm.padding.left";
                  relative: 1.0 0.0;
                  offset: 0 0;
               }
               rel2 {
				  to_x: "elm.padding.right";
                  relative: 0.0 1.0;
                  offset: 0 0;
               }
            }
         }
         part { name: "elm.swallow.bar";
            mouse_events: 0;
            scale: 1;
            type: SWALLOW;
            description {
               min: 406 14;
               max: 99999 14;
               state: "default" 0.0;
               rel1 {
                  to: "elm.background.progressbar";
                  relative: 0.0 0.0;
               }
               rel2 {
                  to: "elm.background.progressbar";
                  relative: 1.0 1.0;
               }
            }
         }
         part { name: "elm.swallow.content";
            type: SWALLOW;
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               align: 0.0 0.5;
               rel1 {
                  offset: 0 0;
                  to_y: "elm.background.progressbar";
               }
               rel2 {
                  offset: 0 -1;
                  relative: 0.0 1.0;
                  to_y: "elm.background.progressbar";
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               aspect: 1.0 1.0;
               aspect_preference: VERTICAL;
               rel2.offset: 4 -1;
            }
         }
         part { name: "elm.text";
            type: TEXT;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               fixed: 1 1;
               align: 0.0 0.5;
               rel1.to_x: "elm.swallow.content";
               rel1.relative: 1.0 0.0;
               rel1.offset: -1 4;
               rel2.to_x: "elm.swallow.content";
               rel2.relative: 1.0 1.0;
               rel2.offset: -1 -5;
               color: 0 0 0 255;
               text {
                  font: "SLP:style=Roman";
                  size: 10;
                  min: 0 0;
                  align: 0.0 0.5;
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 0;
               text.min: 1 1;
               rel1.offset: 0 4;
               rel2.offset: 0 -5;
            }
         }

         part { name: "background";
            mouse_events: 0;
            scale: 1;
            clip_to: "elm.background.progressbar";
            description { state: "default" 0.0;
               rel1 {
                  to: "elm.swallow.bar";
                  relative: 0.0 0.0;
               }
               rel2 {
                  to: "elm.swallow.bar";
                  relative: 1.0 1.0;
                  offset: -1 -1;
               }
               image {
                  normal: "00_pending_list_01.png";
                  border: 0 0 0 0;
               }
            }
         }

         part { name: "elm.progress.progressbar";
            mouse_events: 0;
            scale: 1;
            clip_to: "elm.background.progressbar";
            description {
               state: "default" 0.0;
               min: 0 0;
               fixed: 1 1;
               rel1 {
                  to: "elm.swallow.bar";
                  relative: 0.0 0.0;
               }
               rel2 {
                  to_y: "elm.swallow.bar";
                  to_x: "elm.cur.progressbar";
                  offset: -1 -1;
               }
               image {
                  normal: "00_pending_list_01.png";
                  border: 0 0 0 0;
               }
            }
            description {
               state: "invert" 0.0;
               inherit: "default" 0.0;
               rel1 {
                  to_y: "elm.swallow.bar";
                  to_x: "elm.cur.progressbar";
               }
               rel2 {
                  to: "elm.swallow.bar";
                  relative: 1.0 1.0;
               }
            }
            description {
               state: "state_begin" 0.0;
               inherit: "default" 0.0;
               rel1 {
                  to: "elm.swallow.bar";
                  relative: 0.0 0.0;
               }
               rel2 {
                  to: "elm.swallow.bar";
                  relative: 1.0 1.0;
               }
            }
            description {
               state: "state_end" 0.0;
               inherit: "default" 0.0;
               rel1 {
                  to: "elm.swallow.bar";
                  relative: 0.0 0.0;
               }
               rel2 {
                  to: "elm.swallow.bar";
                  relative: 1.0 1.0;
               }
               image {
                  normal: "00_pending_list_02.png";
                  border: 0 0 0 0;
               }
            }
         }
         part { name: "elm.cur.progressbar";
            mouse_events: 0;
            scale: 1;
            dragable {
               confine: "background";
               x: 1 1 1;
               y: 0 0 0;
            }
            description { state: "default" 0.0;
               min: 0 28;
               fixed: 1 1;
               visible: 0;
               rel1 {
                  to: "background";
                  relative: 0 0;
               }
               rel2.to: "background";
           }
         }
         part { name: "progress-rect";
            mouse_events: 0;
            scale: 1;
            description {
               state: "default" 0.0;
               rel1.to: "elm.progress.progressbar";
               rel2.to: "elm.progress.progressbar";
            }
         }
      }
      programs {
         program { name: "label_show";
            signal: "elm,state,text,visible";
            source: "elm";
            action:  STATE_SET "visible" 0.0;
            target: "elm.text";
         }
         program { name: "label_hide";
            signal: "elm,state,text,hidden";
            source: "elm";
            action:  STATE_SET "default" 0.0;
            target: "elm.text";
         }
         program { name: "icon_show";
            signal: "elm,state,icon,visible";
            source: "elm";
            action:  STATE_SET "visible" 0.0;
            target: "elm.swallow.content";
         }
         program { name: "icon_hide";
            signal: "elm,state,icon,hidden";
            source: "elm";
            action:  STATE_SET "default" 0.0;
            target: "elm.swallow.content";
         }
         program { name: "slide_to_end";
            action:  STATE_SET "state_end" 0.0;
            transition: LINEAR 0.3;
            target: "elm.progress.progressbar";
            after: "slide_to_begin";
         }
         program { name: "slide_to_begin";
            signal: "elm,state,slide,begin";
            action: STATE_SET "state_begin" 0.0;
            target: "elm.progress.progressbar";
            transition: LINEAR 0.3;
            after: "slide_to_end";
         }
         program { name: "start_pulse";
            signal: "elm,state,pulse,start";
            source: "elm";
            after: "slide_to_end";
         }
         program { name: "stop_pulse";
            signal: "elm,state,pulse,stop";
            source: "elm";
            action: ACTION_STOP;
            target: "slide_to_begin";
            target: "slide_to_end";
            target: "start_pulse";
            after: "state_pulse";
         }
         program { name: "state_pulse";
            signal: "elm,state,pulse";
            source: "elm";
            action: STATE_SET "state_begin" 0.0;
            target: "elm.progress.progressbar";
         }
         program { name: "state_fraction";
            signal: "elm,state,fraction";
            source: "elm";
            action: ACTION_STOP;
            target: "slide_to_begin";
            target: "slide_to_end";
            target: "start_pulse";
            action: STATE_SET "default" 0.0;
            target: "elm.progress.progressbar";
         }
         program { name: "set_invert_on";
            signal: "elm,state,inverted,on";
            source: "elm";
            action:  STATE_SET "invert" 0.0;
            target: "elm.progress.progressbar";
         }
         program { name: "set_invert_off";
            signal: "elm,state,inverted,off";
            source: "elm";
            action:  STATE_SET "default" 0.0;
            target: "elm.progress.progressbar";
         }
      }
   }




   group { name: "elm/progressbar/horizontal/UIProgressViewStyleDefault";
      images {
         image: "progress_slider_bg01.9.png" COMP;
         image: "progress_slider_bar01.9.png" COMP;
      }
      parts {
	     part { name: "elm.padding.left";
            type: RECT;
			scale: 1;
            description {
				state: "default" 0.0;
				//min: 25 0;
				min: 0 0;
				fixed: 1 0;
				rel1 {
                	relative: 0.0  0.0;
	                offset:   0    0;
               	}
               	rel2 {
                  	relative: 0.0  1.0;
                  	offset:   0   0;
               	}
               	color: 0 0 0 0;
		  		align: 0.0 0.0;
            }
         }
         part { name: "elm.padding.right";
            type: RECT;
			scale: 1;
            description {
				state: "default" 0.0;
				//min: 25 0;
				min: 0 0;
				fixed: 1 0;
				rel1 {
                	relative: 1.0  0.0;
	                offset:   0    0;
               	}
               	rel2 {
                  	relative: 1.0  1.0;
                  	offset:   0   0;
               	}
               	color: 0 0 0 0;
		  		align: 1.0 0.0;
            }
         }
		  part { name: "elm.background.progressbar";
            mouse_events: 0;
            scale: 1;
            description {
               state: "default" 0.0;
               rel1 {
				  to_x: "elm.padding.left";
                  relative: 1.0 0.0;
                  offset: 0 0;
               }
               rel2 {
				  to_x: "elm.padding.right";
                  relative: 0.0 1.0;
                  offset: 0 0;
               }
            }
         }
         part { name: "elm.swallow.bar";
            mouse_events: 0;
            scale: 1;
            type: SWALLOW;
            description {
               min: 48 14;
               max: 99999 14;
               state: "default" 0.0;
               rel1 {
                  to: "elm.background.progressbar";
                  relative: 0.0 0.0;
               }
               rel2 {
                  to: "elm.background.progressbar";
                  relative: 1.0 1.0;
               }
            }
         }
         part { name: "elm.swallow.content";
            type: SWALLOW;
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               align: 0.0 0.5;
               rel1 {
                  offset: 0 0;
                  to_y: "elm.background.progressbar";
               }
               rel2 {
                  offset: 0 -1;
                  relative: 0.0 1.0;
                  to_y: "elm.background.progressbar";
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               aspect: 1.0 1.0;
               aspect_preference: VERTICAL;
               rel2.offset: 4 -1;
            }
         }
         part { name: "elm.text";
            type: TEXT;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               fixed: 1 1;
               align: 0.0 0.5;
               rel1.to_x: "elm.swallow.content";
               rel1.relative: 1.0 0.0;
               rel1.offset: -1 4;
               rel2.to_x: "elm.swallow.content";
               rel2.relative: 1.0 1.0;
               rel2.offset: -1 -5;
               color: 0 0 0 255;
               text {
                  font: "SLP:style=Roman";
                  size: 10;
                  min: 0 0;
                  align: 0.0 0.5;
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 0;
               text.min: 1 1;
               rel1.offset: 0 4;
               rel2.offset: 0 -5;
            }
         }

         part { name: "background";
            mouse_events: 0;
            scale: 1;
            clip_to: "elm.background.progressbar";
            description {
               state: "default" 0.0;
               rel1 {
                  to: "elm.swallow.bar";
                  relative: 0.0 0.0;
               }
               rel2 {
                  to: "elm.swallow.bar";
                  relative: 1.0 1.0;
                  offset: -1 -1;
               }
               image {
                  normal: "progress_slider_bg01.9.png";
                  border: 6 6 0 0;
               }
            }
         }

         part { name: "elm.text.status";
            type: TEXT;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               fixed: 1 1;
               visible: 0;
               rel1 {
                  to: "background";
                  relative: 0.5 0.5;
               }
               rel2 {
                  to: "background";
                  relative: 0.5 0.5;
               }
               text {
                  font: "SLP:style=Roman";
                  size: 10;
                  min: 0 0;
                  align: 0.5 0.0;
               }
               color: 0 0 0 255;
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               visible: 0;
               text.min: 1 1;
            }
         }

         part { name: "elm.progress.progressbar";
            mouse_events: 0;
            scale: 1;
            clip_to: "elm.background.progressbar";
            description {
               state: "default" 0.0;
               min: 0 0;
               fixed: 1 1;
               rel1 {
                  to: "elm.swallow.bar";
                  relative: 0.0 0.0;
               }
               rel2 {
                  to_y: "elm.swallow.bar";
                  to_x: "elm.cur.progressbar";
                  offset: -1 -1;
               }
               image {
                  normal: "progress_slider_bar01.9.png";
                  border: 6 6 0 0;
               }
            }
            description {
               state: "invert" 0.0;
               inherit: "default" 0.0;
               rel1 {
                  to_y: "elm.swallow.bar";
                  to_x: "elm.cur.progressbar";
               }
               rel2 {
                  to: "elm.swallow.bar";
                  relative: 1.0 1.0;
               }
            }
            description {
               state: "state_begin" 0.0;
               inherit: "default" 0.0;
               rel1 {
                  to: "elm.swallow.bar";
                  relative: 0.0 0.0;
               }
               rel2 {
                  to: "elm.swallow.bar";
                  relative: 0.1 1.0;
               }
            }
            description {
               state: "state_end" 0.0;
               inherit: "default" 0.0;
               rel1 {
                  to: "elm.swallow.bar";
                  relative: 0.9 0.0;
               }
               rel2 {
                  to: "elm.swallow.bar";
                  relative: 1.0 1.0;
               }
            }
         }
         part { name: "text-bar";
            type: TEXT;
            mouse_events: 0;
            scale: 1;
            clip_to: "progress-rect";
            effect: SOFT_SHADOW;
            scale: 0;
            description { state: "default" 0.0;
               align: 0.0 0.0;
               fixed: 1 1;
               visible: 0;
               rel1.to: "elm.text.status";
               rel1.offset: -1 -1;
               rel2.to: "elm.text.status";
               text {
                  text_source: "elm.text.status";
                  font: "SLP:style=Roman";
                  size: 10;
                  min: 0 0;
                  align: 0.0 0.0;
               }
               color: 224 224 224 255;
               color3: 0 0 0 64;
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               visible: 0;
               text.min: 1 1;
            }
         }
         part { name: "elm.cur.progressbar";
            mouse_events: 0;
            scale: 1;
            dragable {
               confine: "background";
               x: 1 1 1;
               y: 0 0 0;
            }
            description { state: "default" 0.0;
               min: 0 28;
               fixed: 1 1;
               visible: 0;
               rel1 {
                  to: "background";
                  relative: 0 0;
               }
               rel2.to: "background";
           }
         }
         part { name: "progress-rect";
            mouse_events: 0;
            scale: 1;
            description {
               state: "default" 0.0;
               rel1.to: "elm.progress.progressbar";
               rel2.to: "elm.progress.progressbar";
            }
         }
      }
      programs {
         program { name: "label_show";
            signal: "elm,state,text,visible";
            source: "elm";
            action:  STATE_SET "visible" 0.0;
            target: "elm.text";
         }
         program { name: "label_hide";
            signal: "elm,state,text,hidden";
            source: "elm";
            action:  STATE_SET "default" 0.0;
            target: "elm.text";
         }
         program { name: "icon_show";
            signal: "elm,state,icon,visible";
            source: "elm";
            action:  STATE_SET "visible" 0.0;
            target: "elm.swallow.content";
         }
         program { name: "icon_hide";
            signal: "elm,state,icon,hidden";
            source: "elm";
            action:  STATE_SET "default" 0.0;
            target: "elm.swallow.content";
         }
         program { name: "units_show";
            signal: "elm,state,units,visible";
            source: "elm";
            action:  STATE_SET "show" 0.0;
            target: "text-bar";
            target: "elm.text.status";
         }
         program { name: "units_hide";
            signal: "elm,state,units,hidden";
            source: "elm";
            action:  STATE_SET "default" 0.0;
            target: "text-bar";
            target: "elm.text.status";
         }
         program { name: "slide_to_end";
            action:  STATE_SET "state_end" 0.0;
            transition: LINEAR 0.5;
            target: "elm.progress.progressbar";
            after: "slide_to_begin";
         }
         program { name: "slide_to_begin";
            signal: "elm,state,slide,begin";
            action: STATE_SET "state_begin" 0.0;
            target: "elm.progress.progressbar";
            transition: LINEAR 0.5;
            after: "slide_to_end";
         }
         program { name: "start_pulse";
            signal: "elm,state,pulse,start";
            source: "elm";
            after: "slide_to_end";
         }
         program { name: "stop_pulse";
            signal: "elm,state,pulse,stop";
            source: "elm";
            action: ACTION_STOP;
            target: "slide_to_begin";
            target: "slide_to_end";
            target: "start_pulse";
            after: "state_pulse";
         }
         program { name: "state_pulse";
            signal: "elm,state,pulse";
            source: "elm";
            action: STATE_SET "state_begin" 0.0;
            target: "elm.progress.progressbar";
            after: "units_hide";
         }
         program { name: "state_fraction";
            signal: "elm,state,fraction";
            source: "elm";
            action: ACTION_STOP;
            target: "slide_to_begin";
            target: "slide_to_end";
            target: "start_pulse";
            action: STATE_SET "default" 0.0;
            target: "elm.progress.progressbar";
         }
         program { name: "set_invert_on";
            signal: "elm,state,inverted,on";
            source: "elm";
            action:  STATE_SET "invert" 0.0;
            target: "elm.progress.progressbar";
         }
         program { name: "set_invert_off";
            signal: "elm,state,inverted,off";
            source: "elm";
            action:  STATE_SET "default" 0.0;
            target: "elm.progress.progressbar";
         }
      }
   }



   group { name: "elm/progressbar/horizontal/UIProgressViewStyleBar";
      images {
         image: "progress_slider_bg02.9.png" COMP;
         image: "progress_slider_bar02.9.png" COMP;
      }
      parts {
	     part { name: "elm.padding.left";
            type: RECT;
			scale: 1;
            description {
				state: "default" 0.0;
				//min: 25 0;
				min: 0 0;
				fixed: 1 0;
				rel1 {
                	relative: 0.0  0.0;
	                offset:   0    0;
               	}
               	rel2 {
                  	relative: 0.0  1.0;
                  	offset:   0   0;
               	}
               	color: 0 0 0 0;
		  		align: 0.0 0.0;
            }
         }
         part { name: "elm.padding.right";
            type: RECT;
			scale: 1;
            description {
				state: "default" 0.0;
				//min: 25 0;
				min: 0 0;
				fixed: 1 0;
				rel1 {
                	relative: 1.0  0.0;
	                offset:   0    0;
               	}
               	rel2 {
                  	relative: 1.0  1.0;
                  	offset:   0   0;
               	}
               	color: 0 0 0 0;
		  		align: 1.0 0.0;
            }
         }
		  part { name: "elm.background.progressbar";
            mouse_events: 0;
            scale: 1;
            description {
               state: "default" 0.0;
               rel1 {
				  to_x: "elm.padding.left";
                  relative: 1.0 0.0;
                  offset: 0 0;
               }
               rel2 {
				  to_x: "elm.padding.right";
                  relative: 0.0 1.0;
                  offset: 0 0;
               }
            }
         }
         part { name: "elm.swallow.bar";
            mouse_events: 0;
            scale: 1;
            type: SWALLOW;
            description {
               min: 48 14;
               max: 99999 14;
               state: "default" 0.0;
               rel1 {
                  to: "elm.background.progressbar";
                  relative: 0.0 0.0;
               }
               rel2 {
                  to: "elm.background.progressbar";
                  relative: 1.0 1.0;
               }
            }
         }
         part { name: "elm.swallow.content";
            type: SWALLOW;
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               align: 0.0 0.5;
               rel1 {
                  offset: 0 0;
                  to_y: "elm.background.progressbar";
               }
               rel2 {
                  offset: 0 -1;
                  relative: 0.0 1.0;
                  to_y: "elm.background.progressbar";
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               aspect: 1.0 1.0;
               aspect_preference: VERTICAL;
               rel2.offset: 4 -1;
            }
         }
         part { name: "elm.text";
            type: TEXT;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               fixed: 1 1;
               align: 0.0 0.5;
               rel1.to_x: "elm.swallow.content";
               rel1.relative: 1.0 0.0;
               rel1.offset: -1 4;
               rel2.to_x: "elm.swallow.content";
               rel2.relative: 1.0 1.0;
               rel2.offset: -1 -5;
               color: 0 0 0 255;
               text {
                  font: "SLP:style=Roman";
                  size: 10;
                  min: 0 0;
                  align: 0.0 0.5;
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 0;
               text.min: 1 1;
               rel1.offset: 0 4;
               rel2.offset: 0 -5;
            }
         }

         part { name: "background";
            mouse_events: 0;
            scale: 1;
            clip_to: "elm.background.progressbar";
            description {
               state: "default" 0.0;
               rel1 {
                  to: "elm.swallow.bar";
                  relative: 0.0 0.0;
               }
               rel2 {
                  to: "elm.swallow.bar";
                  relative: 1.0 1.0;
                  offset: -1 -1;
               }
               image {
                  normal: "progress_slider_bg02.9.png";
                  border: 6 6 0 0;
               }
            }
         }

         part { name: "elm.text.status";
            type: TEXT;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               fixed: 1 1;
               visible: 0;
               rel1 {
                  to: "background";
                  relative: 0.5 0.5;
               }
               rel2 {
                  to: "background";
                  relative: 0.5 0.5;
               }
               text {
                  font: "SLP:style=Roman";
                  size: 10;
                  min: 0 0;
                  align: 0.5 0.0;
               }
               color: 0 0 0 255;
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               visible: 0;
               text.min: 1 1;
            }
         }

         part { name: "elm.progress.progressbar";
            mouse_events: 0;
            scale: 1;
            clip_to: "elm.background.progressbar";
            description {
               state: "default" 0.0;
               min: 0 0;
               fixed: 1 1;
               rel1 {
                  to: "elm.swallow.bar";
                  relative: 0.0 0.0;
               }
               rel2 {
                  to_y: "elm.swallow.bar";
                  to_x: "elm.cur.progressbar";
                  offset: -1 -1;
               }
               image {
                  normal: "progress_slider_bar02.9.png";
                  border: 6 6 0 0;
               }
            }
            description {
               state: "invert" 0.0;
               inherit: "default" 0.0;
               rel1 {
                  to_y: "elm.swallow.bar";
                  to_x: "elm.cur.progressbar";
               }
               rel2 {
                  to: "elm.swallow.bar";
                  relative: 1.0 1.0;
               }
            }
            description {
               state: "state_begin" 0.0;
               inherit: "default" 0.0;
               rel1 {
                  to: "elm.swallow.bar";
                  relative: 0.0 0.0;
               }
               rel2 {
                  to: "elm.swallow.bar";
                  relative: 0.1 1.0;
               }
            }
            description {
               state: "state_end" 0.0;
               inherit: "default" 0.0;
               rel1 {
                  to: "elm.swallow.bar";
                  relative: 0.9 0.0;
               }
               rel2 {
                  to: "elm.swallow.bar";
                  relative: 1.0 1.0;
               }
            }
         }
         part { name: "text-bar";
            type: TEXT;
            mouse_events: 0;
            scale: 1;
            clip_to: "progress-rect";
            effect: SOFT_SHADOW;
            scale: 0;
            description { state: "default" 0.0;
               align: 0.0 0.0;
               fixed: 1 1;
               visible: 0;
               rel1.to: "elm.text.status";
               rel1.offset: -1 -1;
               rel2.to: "elm.text.status";
               text {
                  text_source: "elm.text.status";
                  font: "SLP:style=Roman";
                  size: 10;
                  min: 0 0;
                  align: 0.0 0.0;
               }
               color: 224 224 224 255;
               color3: 0 0 0 64;
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               visible: 0;
               text.min: 1 1;
            }
         }
         part { name: "elm.cur.progressbar";
            mouse_events: 0;
            scale: 1;
            dragable {
               confine: "background";
               x: 1 1 1;
               y: 0 0 0;
            }
            description { state: "default" 0.0;
               min: 0 28;
               fixed: 1 1;
               visible: 0;
               rel1 {
                  to: "background";
                  relative: 0 0;
               }
               rel2.to: "background";
           }
         }
         part { name: "progress-rect";
            mouse_events: 0;
            scale: 1;
            description {
               state: "default" 0.0;
               rel1.to: "elm.progress.progressbar";
               rel2.to: "elm.progress.progressbar";
            }
         }
      }
      programs {
         program { name: "label_show";
            signal: "elm,state,text,visible";
            source: "elm";
            action:  STATE_SET "visible" 0.0;
            target: "elm.text";
         }
         program { name: "label_hide";
            signal: "elm,state,text,hidden";
            source: "elm";
            action:  STATE_SET "default" 0.0;
            target: "elm.text";
         }
         program { name: "icon_show";
            signal: "elm,state,icon,visible";
            source: "elm";
            action:  STATE_SET "visible" 0.0;
            target: "elm.swallow.content";
         }
         program { name: "icon_hide";
            signal: "elm,state,icon,hidden";
            source: "elm";
            action:  STATE_SET "default" 0.0;
            target: "elm.swallow.content";
         }
         program { name: "units_show";
            signal: "elm,state,units,visible";
            source: "elm";
            action:  STATE_SET "show" 0.0;
            target: "text-bar";
            target: "elm.text.status";
         }
         program { name: "units_hide";
            signal: "elm,state,units,hidden";
            source: "elm";
            action:  STATE_SET "default" 0.0;
            target: "text-bar";
            target: "elm.text.status";
         }
         program { name: "slide_to_end";
            action:  STATE_SET "state_end" 0.0;
            transition: LINEAR 0.5;
            target: "elm.progress.progressbar";
            after: "slide_to_begin";
         }
         program { name: "slide_to_begin";
            signal: "elm,state,slide,begin";
            action: STATE_SET "state_begin" 0.0;
            target: "elm.progress.progressbar";
            transition: LINEAR 0.5;
            after: "slide_to_end";
         }
         program { name: "start_pulse";
            signal: "elm,state,pulse,start";
            source: "elm";
            after: "slide_to_end";
         }
         program { name: "stop_pulse";
            signal: "elm,state,pulse,stop";
            source: "elm";
            action: ACTION_STOP;
            target: "slide_to_begin";
            target: "slide_to_end";
            target: "start_pulse";
            after: "state_pulse";
         }
         program { name: "state_pulse";
            signal: "elm,state,pulse";
            source: "elm";
            action: STATE_SET "state_begin" 0.0;
            target: "elm.progress.progressbar";
            after: "units_hide";
         }
         program { name: "state_fraction";
            signal: "elm,state,fraction";
            source: "elm";
            action: ACTION_STOP;
            target: "slide_to_begin";
            target: "slide_to_end";
            target: "start_pulse";
            action: STATE_SET "default" 0.0;
            target: "elm.progress.progressbar";
         }
         program { name: "set_invert_on";
            signal: "elm,state,inverted,on";
            source: "elm";
            action:  STATE_SET "invert" 0.0;
            target: "elm.progress.progressbar";
         }
         program { name: "set_invert_off";
            signal: "elm,state,inverted,off";
            source: "elm";
            action:  STATE_SET "default" 0.0;
            target: "elm.progress.progressbar";
         }
      }
   }


#define PROGRESS_LOAD_IMAGEG( param_num ) \
	image: "00_winset_list_progress_"#param_num".png" COMP;

#define PROGRESS_BG_DESC( param_name, param_num ) \
	description { state: "pulse" 0.#param_num; \
	   inherit: "default" 0.0; \
	   image { \
		   normal: "00_winset_"#param_name"_process_"#param_num".png"; \
	   } \
	}

#define	PROGRESSING_DELAY 	0.03

   group { name: "elm/progressbar/horizontal/list_process";
       images {
           image: "00_winset_list_process_01.png" COMP;
           image: "00_winset_list_process_02.png" COMP;
           image: "00_winset_list_process_03.png" COMP;
           image: "00_winset_list_process_04.png" COMP;
           image: "00_winset_list_process_05.png" COMP;
           image: "00_winset_list_process_06.png" COMP;
           image: "00_winset_list_process_07.png" COMP;
           image: "00_winset_list_process_08.png" COMP;
           image: "00_winset_list_process_09.png" COMP;
           image: "00_winset_list_process_10.png" COMP;
           image: "00_winset_list_process_11.png" COMP;
           image: "00_winset_list_process_12.png" COMP;
           image: "00_winset_list_process_13.png" COMP;
           image: "00_winset_list_process_14.png" COMP;
           image: "00_winset_list_process_15.png" COMP;
           image: "00_winset_list_process_16.png" COMP;
           image: "00_winset_list_process_17.png" COMP;
           image: "00_winset_list_process_18.png" COMP;
           image: "00_winset_list_process_19.png" COMP;
           image: "00_winset_list_process_20.png" COMP;
           image: "00_winset_list_process_21.png" COMP;
           image: "00_winset_list_process_22.png" COMP;
           image: "00_winset_list_process_23.png" COMP;
           image: "00_winset_list_process_24.png" COMP;
           image: "00_winset_list_process_25.png" COMP;
           image: "00_winset_list_process_26.png" COMP;
           image: "00_winset_list_process_27.png" COMP;
           image: "00_winset_list_process_28.png" COMP;
           image: "00_winset_list_process_29.png" COMP;
           image: "00_winset_list_process_30.png" COMP;
       }
       parts {
           part { name: "elm.background.progressbar";
               mouse_events: 0;
               scale: 1;
               type: RECT;
               description {
                   state: "default" 0.0;
               }
           }
           part { name: "elm.swallow.bar";
               mouse_events: 0;
               scale: 1;
               type: SWALLOW;
               description { state: "default" 0.0;
                   min: 0 0;
                   max: 0 0;
                   visible: 0;
               }
           }
           part { name: "elm.swallow.content";
               type: SWALLOW;
               scale: 1;
               description { state: "default" 0.0;
                   min: 0 0;
                   max: 0 0;
                   visible: 0;
               }
           }
           part { name: "background";
               mouse_events: 0;
               scale: 1;
               clip_to: "elm.background.progressbar";
               description {
                   state: "default" 0.0;
                   min: 32 32;
                   max: 32 32;
                   visible: 1;
                   aspect: 1.0 1.0;
                   aspect_preference: BOTH;
                   image {
                       normal: "00_winset_list_process_01.png";
                   }
               }
               description { state: "pulse" 0.0;
                   inherit: "default" 0.0;
                   image {
                       normal: "00_winset_list_process_01.png";
                   }
               }
				PROGRESS_BG_DESC( list, 01 )
				PROGRESS_BG_DESC( list, 02 )
				PROGRESS_BG_DESC( list, 03 )
				PROGRESS_BG_DESC( list, 04 )
				PROGRESS_BG_DESC( list, 05 )
				PROGRESS_BG_DESC( list, 06 )
				PROGRESS_BG_DESC( list, 07 )
				PROGRESS_BG_DESC( list, 08 )
				PROGRESS_BG_DESC( list, 09 )
				PROGRESS_BG_DESC( list, 10 )
				PROGRESS_BG_DESC( list, 11 )
				PROGRESS_BG_DESC( list, 12 )
				PROGRESS_BG_DESC( list, 13 )
				PROGRESS_BG_DESC( list, 14 )
				PROGRESS_BG_DESC( list, 15 )
				PROGRESS_BG_DESC( list, 16 )
				PROGRESS_BG_DESC( list, 17 )
				PROGRESS_BG_DESC( list, 18 )
				PROGRESS_BG_DESC( list, 19 )
				PROGRESS_BG_DESC( list, 20 )
				PROGRESS_BG_DESC( list, 21 )
				PROGRESS_BG_DESC( list, 22 )
				PROGRESS_BG_DESC( list, 23 )
				PROGRESS_BG_DESC( list, 24 )
				PROGRESS_BG_DESC( list, 25 )
				PROGRESS_BG_DESC( list, 26 )
				PROGRESS_BG_DESC( list, 27 )
				PROGRESS_BG_DESC( list, 28 )
				PROGRESS_BG_DESC( list, 29 )
				PROGRESS_BG_DESC( list, 30 )

           }
       }
	   script {
			public pulse_state;
	   }
       programs {
           program { name: "continue_pulse";
			   script {
					new Float:state;
					state = get_float(pulse_state);
					set_state(PART:"background", "pulse", state);
					state += 0.01;
					if( state > 0.30 )
						state = 0.01;
					set_float(pulse_state, state);
			   }
               after: "delay";
           }
           program { name: "delay";
               action: STATE_SET "pulse" 0.10;
               target: "background";
			   in: PROGRESSING_DELAY 0.0;
               after: "continue_pulse";
           }
           program { name: "start_pulse";
               signal: "elm,state,pulse,start";
               source: "elm";
			   script {
					set_float(pulse_state, 0.0);
			   }
               after: "continue_pulse";
           }
           program { name: "stop_pulse";
               signal: "elm,state,pulse,stop";
               source: "elm";
			   action: ACTION_STOP;
               target: "continue_pulse";
               target: "delay";
               target: "start_pulse";
               after: "init_pulse";
           }
		   program { name: "init_pulse";
				action: STATE_SET "default" 0.0;
				target: "background";
		   }
       }
   }


   group { name: "elm/progressbar/horizontal/toolbar_process";
       images {
           image: "00_winset_toolbar_process_01.png" COMP;
           image: "00_winset_toolbar_process_02.png" COMP;
           image: "00_winset_toolbar_process_03.png" COMP;
           image: "00_winset_toolbar_process_04.png" COMP;
           image: "00_winset_toolbar_process_05.png" COMP;
           image: "00_winset_toolbar_process_06.png" COMP;
           image: "00_winset_toolbar_process_07.png" COMP;
           image: "00_winset_toolbar_process_08.png" COMP;
           image: "00_winset_toolbar_process_09.png" COMP;
           image: "00_winset_toolbar_process_10.png" COMP;
           image: "00_winset_toolbar_process_11.png" COMP;
           image: "00_winset_toolbar_process_12.png" COMP;
           image: "00_winset_toolbar_process_13.png" COMP;
           image: "00_winset_toolbar_process_14.png" COMP;
           image: "00_winset_toolbar_process_15.png" COMP;
           image: "00_winset_toolbar_process_16.png" COMP;
           image: "00_winset_toolbar_process_17.png" COMP;
           image: "00_winset_toolbar_process_18.png" COMP;
           image: "00_winset_toolbar_process_19.png" COMP;
           image: "00_winset_toolbar_process_20.png" COMP;
           image: "00_winset_toolbar_process_21.png" COMP;
           image: "00_winset_toolbar_process_22.png" COMP;
           image: "00_winset_toolbar_process_23.png" COMP;
           image: "00_winset_toolbar_process_24.png" COMP;
           image: "00_winset_toolbar_process_25.png" COMP;
           image: "00_winset_toolbar_process_26.png" COMP;
           image: "00_winset_toolbar_process_27.png" COMP;
           image: "00_winset_toolbar_process_28.png" COMP;
           image: "00_winset_toolbar_process_29.png" COMP;
           image: "00_winset_toolbar_process_30.png" COMP;
       }
       parts {
           part { name: "elm.background.progressbar";
               mouse_events: 0;
               scale: 1;
               type: RECT;
               description {
                   state: "default" 0.0;
               }
           }
           part { name: "elm.swallow.bar";
               mouse_events: 0;
               scale: 1;
               type: SWALLOW;
               description { state: "default" 0.0;
                   min: 0 0;
                   max: 0 0;
                   visible: 0;
               }
           }
           part { name: "elm.swallow.content";
               type: SWALLOW;
               scale: 1;
               description { state: "default" 0.0;
                   min: 0 0;
                   max: 0 0;
                   visible: 0;
               }
           }
           part { name: "background";
               mouse_events: 0;
               scale: 1;
               clip_to: "elm.background.progressbar";
               description {
                   state: "default" 0.0;
                   min: 32 32;
                   max: 32 32;
                   visible: 1;
                   aspect: 1.0 1.0;
                   aspect_preference: BOTH;
                   image {
                       normal: "00_winset_toolbar_process_01.png";
                   }
               }
               description { state: "pulse" 0.0;
                   inherit: "default" 0.0;
                   image {
                       normal: "00_winset_toolbar_process_01.png";
                   }
               }
				PROGRESS_BG_DESC( toolbar, 01 )
				PROGRESS_BG_DESC( toolbar, 02 )
				PROGRESS_BG_DESC( toolbar, 03 )
				PROGRESS_BG_DESC( toolbar, 04 )
				PROGRESS_BG_DESC( toolbar, 05 )
				PROGRESS_BG_DESC( toolbar, 06 )
				PROGRESS_BG_DESC( toolbar, 07 )
				PROGRESS_BG_DESC( toolbar, 08 )
				PROGRESS_BG_DESC( toolbar, 09 )
				PROGRESS_BG_DESC( toolbar, 10 )
				PROGRESS_BG_DESC( toolbar, 11 )
				PROGRESS_BG_DESC( toolbar, 12 )
				PROGRESS_BG_DESC( toolbar, 13 )
				PROGRESS_BG_DESC( toolbar, 14 )
				PROGRESS_BG_DESC( toolbar, 15 )
				PROGRESS_BG_DESC( toolbar, 16 )
				PROGRESS_BG_DESC( toolbar, 17 )
				PROGRESS_BG_DESC( toolbar, 18 )
				PROGRESS_BG_DESC( toolbar, 19 )
				PROGRESS_BG_DESC( toolbar, 20 )
				PROGRESS_BG_DESC( toolbar, 21 )
				PROGRESS_BG_DESC( toolbar, 22 )
				PROGRESS_BG_DESC( toolbar, 23 )
				PROGRESS_BG_DESC( toolbar, 24 )
				PROGRESS_BG_DESC( toolbar, 25 )
				PROGRESS_BG_DESC( toolbar, 26 )
				PROGRESS_BG_DESC( toolbar, 27 )
				PROGRESS_BG_DESC( toolbar, 28 )
				PROGRESS_BG_DESC( toolbar, 29 )
				PROGRESS_BG_DESC( toolbar, 30 )

           }
       }
	   script {
			public pulse_state;
	   }
       programs {
           program { name: "continue_pulse";
			   script {
					new Float:state;
					state = get_float(pulse_state);
					set_state(PART:"background", "pulse", state);
					state += 0.01;
					if( state > 0.30 )
						state = 0.01;
					set_float(pulse_state, state);
			   }
               after: "delay";
           }
           program { name: "delay";
               action: STATE_SET "pulse" 0.10;
               target: "background";
			   in: PROGRESSING_DELAY 0.0;
               after: "continue_pulse";
           }
           program { name: "start_pulse";
               signal: "elm,state,pulse,start";
               source: "elm";
			   script {
					set_float(pulse_state, 0.0);
			   }
               after: "continue_pulse";
           }
           program { name: "stop_pulse";
               signal: "elm,state,pulse,stop";
               source: "elm";
			   action: ACTION_STOP;
               target: "continue_pulse";
               target: "delay";
               target: "start_pulse";
               after: "init_pulse";
           }
		   program { name: "init_pulse";
				action: STATE_SET "default" 0.0;
				target: "background";
		   }
       }
   }

   group { name: "elm/progressbar/horizontal/UIActivityIndicatorStyleWhiteLarge";
       images {
           image: "progress_01.png" COMP;
           image: "progress_02.png" COMP;
           image: "progress_03.png" COMP;
           image: "progress_04.png" COMP;
           image: "progress_05.png" COMP;
           image: "progress_06.png" COMP;
           image: "progress_07.png" COMP;
           image: "progress_08.png" COMP;
           image: "progress_09.png" COMP;
           image: "progress_10.png" COMP;
           image: "progress_11.png" COMP;
           image: "progress_12.png" COMP;
       }
       parts {
           part { name: "elm.background.progressbar";
               mouse_events: 0;
               scale: 1;
               type: RECT;
               description {
                   state: "default" 0.0;
               }
           }
           part { name: "elm.swallow.bar";
               mouse_events: 0;
               scale: 1;
               type: SWALLOW;
               description { state: "default" 0.0;
                   min: 0 0;
                   max: 0 0;
                   visible: 0;
               }
           }
           part { name: "elm.swallow.content";
               type: SWALLOW;
               scale: 1;
               description { state: "default" 0.0;
                   min: 0 0;
                   max: 0 0;
                   visible: 0;
               }
           }
           part { name: "background";
               mouse_events: 0;
               scale: 1;
               clip_to: "elm.background.progressbar";
               description {
                   state: "default" 0.0;
                   min: 60 60;
                   max: 60 60;
                   visible: 1;
                   aspect: 1.0 1.0;
                   aspect_preference: BOTH;
                   image {
                       normal: "progress_01.png";
                   }
               }
               description {
                   state: "pulse" 0.0;
                   inherit: "default" 0.0;
                   image {
                       normal: "progress_01.png";
                   }
               }
               description {
                   state: "pulse" 0.01;
                   inherit: "default" 0.0;
                   image {
                       normal: "progress_01.png";
                   }
               }
               description {
                   state: "pulse" 0.02;
                   inherit: "default" 0.0;
                   image {
                       normal: "progress_02.png";
                   }
               }
               description {
                   state: "pulse" 0.03;
                   inherit: "default" 0.0;
                   image {
                       normal: "progress_03.png";
                   }
               }
               description {
                   state: "pulse" 0.04;
                   inherit: "default" 0.0;
                   image {
                       normal: "progress_04.png";
                   }
               }
               description {
                   state: "pulse" 0.05;
                   inherit: "default" 0.0;
                   image {
                       normal: "progress_05.png";
                   }
               }
               description {
                   state: "pulse" 0.06;
                   inherit: "default" 0.0;
                   image {
                       normal: "progress_06.png";
                   }
               }
               description {
                   state: "pulse" 0.07;
                   inherit: "default" 0.0;
                   image {
                       normal: "progress_07.png";
                   }
               }
               description {
                   state: "pulse" 0.08;
                   inherit: "default" 0.0;
                   image {
                       normal: "progress_08.png";
                   }
               }
               description {
                   state: "pulse" 0.09;
                   inherit: "default" 0.0;
                   image {
                       normal: "progress_09.png";
                   }
               }
               description {
                   state: "pulse" 0.10;
                   inherit: "default" 0.0;
                   image {
                       normal: "progress_10.png";
                   }
               }
               description {
                   state: "pulse" 0.11;
                   inherit: "default" 0.0;
                   image {
                       normal: "progress_11.png";
                   }
               }
               description {
                   state: "pulse" 0.12;
                   inherit: "default" 0.0;
                   image {
                       normal: "progress_12.png";
                   }
               }
           }
       }
	   script {
			public pulse_state;
	   }
       programs {
           program { name: "continue_pulse";
			   script {
					new Float:state;
					state = get_float(pulse_state);
					set_state(PART:"background", "pulse", state);
					state += 0.01;
					if( state > 0.12 )
						state = 0.01;
					set_float(pulse_state, state);
			   }
               after: "delay";
           }
           program { name: "delay";
               action: STATE_SET "pulse" 0.10;
               target: "background";
			   in: PROGRESSING_DELAY 0.0;
               after: "continue_pulse";
           }
           program { name: "start_pulse";
               signal: "elm,state,pulse,start";
               source: "elm";
			   script {
					set_float(pulse_state, 0.0);
			   }
               after: "continue_pulse";
           }
           program { name: "stop_pulse";
               signal: "elm,state,pulse,stop";
               source: "elm";
			   action: ACTION_STOP;
               target: "continue_pulse";
               target: "delay";
               target: "start_pulse";
               after: "init_pulse";
           }
		   program { name: "init_pulse";
				action: STATE_SET "default" 0.0;
				target: "background";
		   }
       }
   }


   group { name: "elm/progressbar/horizontal/UIActivityIndicatorStyleWhite";
       images {
           image: "progress_01_s.png" COMP;
           image: "progress_02_s.png" COMP;
           image: "progress_03_s.png" COMP;
           image: "progress_04_s.png" COMP;
           image: "progress_05_s.png" COMP;
           image: "progress_06_s.png" COMP;
           image: "progress_07_s.png" COMP;
           image: "progress_08_s.png" COMP;
           image: "progress_09_s.png" COMP;
           image: "progress_10_s.png" COMP;
           image: "progress_11_s.png" COMP;
           image: "progress_12_s.png" COMP;
       }
       parts {
           part { name: "elm.background.progressbar";
               mouse_events: 0;
               scale: 1;
               type: RECT;
               description {
                   state: "default" 0.0;
               }
           }
           part { name: "elm.swallow.bar";
               mouse_events: 0;
               scale: 1;
               type: SWALLOW;
               description { state: "default" 0.0;
                   min: 0 0;
                   max: 0 0;
                   visible: 0;
               }
           }
           part { name: "elm.swallow.content";
               type: SWALLOW;
               scale: 1;
               description { state: "default" 0.0;
                   min: 0 0;
                   max: 0 0;
                   visible: 0;
               }
           }
           part { name: "background";
               mouse_events: 0;
               scale: 1;
               clip_to: "elm.background.progressbar";
               description {
                   state: "default" 0.0;
                   min: 30 30;
                   max: 30 30;
                   visible: 1;
                   aspect: 1.0 1.0;
                   aspect_preference: BOTH;
                   image {
                       normal: "progress_01_s.png";
                   }
               }
               description {
                   state: "pulse" 0.0;
                   inherit: "default" 0.0;
                   image {
                       normal: "progress_01_s.png";
                   }
               }
               description {
                   state: "pulse" 0.01;
                   inherit: "default" 0.0;
                   image {
                       normal: "progress_01_s.png";
                   }
               }
               description {
                   state: "pulse" 0.02;
                   inherit: "default" 0.0;
                   image {
                       normal: "progress_02_s.png";
                   }
               }
               description {
                   state: "pulse" 0.03;
                   inherit: "default" 0.0;
                   image {
                       normal: "progress_03_s.png";
                   }
               }
               description {
                   state: "pulse" 0.04;
                   inherit: "default" 0.0;
                   image {
                       normal: "progress_04_s.png";
                   }
               }
               description {
                   state: "pulse" 0.05;
                   inherit: "default" 0.0;
                   image {
                       normal: "progress_05_s.png";
                   }
               }
               description {
                   state: "pulse" 0.06;
                   inherit: "default" 0.0;
                   image {
                       normal: "progress_06_s.png";
                   }
               }
               description {
                   state: "pulse" 0.07;
                   inherit: "default" 0.0;
                   image {
                       normal: "progress_07_s.png";
                   }
               }
               description {
                   state: "pulse" 0.08;
                   inherit: "default" 0.0;
                   image {
                       normal: "progress_08_s.png";
                   }
               }
               description {
                   state: "pulse" 0.09;
                   inherit: "default" 0.0;
                   image {
                       normal: "progress_09_s.png";
                   }
               }
               description {
                   state: "pulse" 0.10;
                   inherit: "default" 0.0;
                   image {
                       normal: "progress_10_s.png";
                   }
               }
               description {
                   state: "pulse" 0.11;
                   inherit: "default" 0.0;
                   image {
                       normal: "progress_11_s.png";
                   }
               }
               description {
                   state: "pulse" 0.12;
                   inherit: "default" 0.0;
                   image {
                       normal: "progress_12_s.png";
                   }
               }
           }
       }
	   script {
			public pulse_state;
	   }
       programs {
           program { name: "continue_pulse";
			   script {
					new Float:state;
					state = get_float(pulse_state);
					set_state(PART:"background", "pulse", state);
					state += 0.01;
					if( state > 0.12 )
						state = 0.01;
					set_float(pulse_state, state);
			   }
               after: "delay";
           }
           program { name: "delay";
               action: STATE_SET "pulse" 0.10;
               target: "background";
			   in: PROGRESSING_DELAY 0.0;
               after: "continue_pulse";
           }
           program { name: "start_pulse";
               signal: "elm,state,pulse,start";
               source: "elm";
			   script {
					set_float(pulse_state, 0.0);
			   }
               after: "continue_pulse";
           }
           program { name: "stop_pulse";
               signal: "elm,state,pulse,stop";
               source: "elm";
			   action: ACTION_STOP;
               target: "continue_pulse";
               target: "delay";
               target: "start_pulse";
               after: "init_pulse";
           }
		   program { name: "init_pulse";
				action: STATE_SET "default" 0.0;
				target: "background";
		   }
       }
   }


   group { name: "elm/progressbar/horizontal/UIActivityIndicatorStyleGray";
       images {
           image: "progress_01_g.png" COMP;
           image: "progress_02_g.png" COMP;
           image: "progress_03_g.png" COMP;
           image: "progress_04_g.png" COMP;
           image: "progress_05_g.png" COMP;
           image: "progress_06_g.png" COMP;
           image: "progress_07_g.png" COMP;
           image: "progress_08_g.png" COMP;
           image: "progress_09_g.png" COMP;
           image: "progress_10_g.png" COMP;
           image: "progress_11_g.png" COMP;
           image: "progress_12_g.png" COMP;
       }
       parts {
           part { name: "elm.background.progressbar";
               mouse_events: 0;
               scale: 1;
               type: RECT;
               description {
                   state: "default" 0.0;
               }
           }
           part { name: "elm.swallow.bar";
               mouse_events: 0;
               scale: 1;
               type: SWALLOW;
               description { state: "default" 0.0;
                   min: 0 0;
                   max: 0 0;
                   visible: 0;
               }
           }
           part { name: "elm.swallow.content";
               type: SWALLOW;
               scale: 1;
               description { state: "default" 0.0;
                   min: 0 0;
                   max: 0 0;
                   visible: 0;
               }
           }
           part { name: "background";
               mouse_events: 0;
               scale: 1;
               clip_to: "elm.background.progressbar";
               description {
                   state: "default" 0.0;
                   min: 30 30;
                   max: 30 30;
                   visible: 1;
                   aspect: 1.0 1.0;
                   aspect_preference: BOTH;
                   image {
                       normal: "progress_01_g.png";
                   }
               }
               description {
                   state: "pulse" 0.0;
                   inherit: "default" 0.0;
                   image {
                       normal: "progress_01_g.png";
                   }
               }
               description {
                   state: "pulse" 0.01;
                   inherit: "default" 0.0;
                   image {
                       normal: "progress_01_g.png";
                   }
               }
               description {
                   state: "pulse" 0.02;
                   inherit: "default" 0.0;
                   image {
                       normal: "progress_02_g.png";
                   }
               }
               description {
                   state: "pulse" 0.03;
                   inherit: "default" 0.0;
                   image {
                       normal: "progress_03_g.png";
                   }
               }
               description {
                   state: "pulse" 0.04;
                   inherit: "default" 0.0;
                   image {
                       normal: "progress_04_g.png";
                   }
               }
               description {
                   state: "pulse" 0.05;
                   inherit: "default" 0.0;
                   image {
                       normal: "progress_05_g.png";
                   }
               }
               description {
                   state: "pulse" 0.06;
                   inherit: "default" 0.0;
                   image {
                       normal: "progress_06_g.png";
                   }
               }
               description {
                   state: "pulse" 0.07;
                   inherit: "default" 0.0;
                   image {
                       normal: "progress_07_g.png";
                   }
               }
               description {
                   state: "pulse" 0.08;
                   inherit: "default" 0.0;
                   image {
                       normal: "progress_08_g.png";
                   }
               }
               description {
                   state: "pulse" 0.09;
                   inherit: "default" 0.0;
                   image {
                       normal: "progress_09_g.png";
                   }
               }
               description {
                   state: "pulse" 0.10;
                   inherit: "default" 0.0;
                   image {
                       normal: "progress_10_g.png";
                   }
               }
               description {
                   state: "pulse" 0.11;
                   inherit: "default" 0.0;
                   image {
                       normal: "progress_11_g.png";
                   }
               }
               description {
                   state: "pulse" 0.12;
                   inherit: "default" 0.0;
                   image {
                       normal: "progress_12_g.png";
                   }
               }
           }
       }
	   script {
			public pulse_state;
	   }
       programs {
           program { name: "continue_pulse";
			   script {
					new Float:state;
					state = get_float(pulse_state);
					set_state(PART:"background", "pulse", state);
					state += 0.01;
					if( state > 0.12 )
						state = 0.01;
					set_float(pulse_state, state);
			   }
               after: "delay";
           }
           program { name: "delay";
               action: STATE_SET "pulse" 0.10;
               target: "background";
			   in: PROGRESSING_DELAY 0.0;
               after: "continue_pulse";
           }
           program { name: "start_pulse";
               signal: "elm,state,pulse,start";
               source: "elm";
			   script {
					set_float(pulse_state, 0.0);
			   }
               after: "continue_pulse";
           }
           program { name: "stop_pulse";
               signal: "elm,state,pulse,stop";
               source: "elm";
			   action: ACTION_STOP;
               target: "continue_pulse";
               target: "delay";
               target: "start_pulse";
               after: "init_pulse";
           }
		   program { name: "init_pulse";
				action: STATE_SET "default" 0.0;
				target: "background";
		   }
       }
   }


///////////////////////////////////////////////////////////////////////////////
   group { name: "elm/spinner/base/default";
       images {
           image: "shelf_inset.png" COMP;
           image: "bt_base1.png" COMP;
           image: "bt_hilight.png" COMP;
           image: "bt_shine.png" COMP;
           image: "bt_glow.png" COMP;
           image: "bt_dis_base.png" COMP;
           image: "bt_dis_hilight.png" COMP;
           image: "sp_bt_l.png" COMP;
           image: "sp_bt_r.png" COMP;
       }
       parts {
           part { name: "bg";
               type: RECT;
               description { state: "default" 0.0;
                   max: 99999 30;
                   min: 0 30;
                   rel1.offset: 1 1;
                   rel2.offset: -2 -2;
                   color: 255 255 255 0;
               }
           }
           part { name: "conf_over";
               mouse_events:  0;
               description { state: "default" 0.0;
                   rel1.to: "bg";
                   rel2.to: "bg";
                   image {
                       normal: "shelf_inset.png";
                       border: 7 7 7 7;
                       middle: 0;
                   }
                   fill.smooth : 0;
               }
           }
           part { name: "left_bt";
               mouse_events:  1;
               description { state: "default" 0.0;
                   rel1 { to: "bg";
                       offset: 2 2;
                   }
                   rel2 { to: "bg";
                       offset: -3 -3;
                   }
                   align: 0.0 0.5;
                   min: 24 24;
                   max: 24 24;
                   image {
                       normal: "bt_base1.png";
                       border: 6 6 6 6;
                   }
                   fill.smooth : 0;
               }
               description { state: "clicked" 0.0;
                   inherit: "default" 0.0;
                   image.normal: "bt_base1.png";
                   image.middle: SOLID;
               }
               description { state: "disabled" 0.0;
                   inherit:  "default" 0.0;
                   image {
                       normal: "bt_dis_base.png";
                       border: 4 4 4 4;
                   }
               }
           }
           part {	  name: "left_over1";
               mouse_events: 0;
               description { state: "default" 0.0;
                   rel1.to: "left_bt";
                   rel2 { to: "left_bt";
                       relative: 1.0 0.5;
                   }
                   image {
                       normal: "bt_hilight.png";
                       border: 7 7 7 0;
                   }
               }
               description { state: "disabled" 0.0;
                   inherit:  "default" 0.0;
                   image {
                       normal: "bt_dis_hilight.png";
                       border: 4 4 4 0;
                   }
               }
           }
           part { name: "left_over2";
               mouse_events: 1;
               repeat_events: 1;
               ignore_flags: ON_HOLD;
               description { state: "default" 0.0;
                   rel1.to: "left_bt";
                   rel2.to: "left_bt";
                   image {
                       normal: "bt_shine.png";
                       border: 7 7 7 7;
                   }
               }
               description { state: "disabled" 0.0;
                   inherit:  "default" 0.0;
                   visible: 0;
               }
           }
           part { name: "left_over3";
               mouse_events: 1;
               repeat_events: 1;
               description { state: "default" 0.0;
                   color: 255 255 255 0;
                   rel1.to: "left_bt";
                   rel2.to: "left_bt";
                   image {
                       normal: "bt_glow.png";
                       border: 12 12 12 12;
                   }
                   fill.smooth : 0;
               }
               description { state: "clicked" 0.0;
                   inherit:  "default" 0.0;
                   visible: 1;
                   color: 255 255 255 255;
               }
           }
           part { name: "right_bt";
               mouse_events:  1;
               description { state: "default" 0.0;
                   rel1 { to: "bg";
                       offset: -27 3;
                   }
                   rel2 { to: "bg";
                       offset: -3 -3;
                   }
                   align: 1.0 0.5;
                   min: 24 24;
                   max: 24 24;
                   image {
                       normal: "bt_base1.png";
                       border: 5 5 4 12;
                   }
                   fill.smooth : 0;
               }
               description { state: "clicked" 0.0;
                   inherit: "default" 0.0;
                   image.normal: "bt_base1.png";
                   image.middle: SOLID;
               }
               description { state: "disabled" 0.0;
                   inherit:  "default" 0.0;
                   image {
                       normal: "bt_dis_base.png";
                       border: 4 4 4 4;
                   }
               }
           }
           part { name: "right_over1";
               mouse_events: 0;
               description { state: "default" 0.0;
                   rel1.to: "right_bt";
                   rel2 { to: "right_bt";
                       relative: 1.0 0.5;
                   }
                   image {
                       normal: "bt_hilight.png";
                       border: 7 7 7 0;
                   }
               }
               description { state: "disabled" 0.0;
                   inherit:  "default" 0.0;
                   image {
                       normal: "bt_dis_hilight.png";
                       border: 4 4 4 0;
                   }
               }
           }
           part { name: "right_over2";
               mouse_events: 1;
               repeat_events: 1;
               ignore_flags: ON_HOLD;
               description { state: "default" 0.0;
                   rel1.to: "right_bt";
                   rel2.to: "right_bt";
                   image {
                       normal: "bt_shine.png";
                       border: 7 7 7 7;
                   }
               }
               description { state: "disabled" 0.0;
                   inherit:  "default" 0.0;
                   visible: 0;
               }
           }
           part { name: "right_over3";
               mouse_events: 1;
               repeat_events: 1;
               description { state: "default" 0.0;
                   color: 255 255 255 0;
                   rel1.to: "right_bt";
                   rel2.to: "right_bt";
                   image {
                       normal: "bt_glow.png";
                       border: 12 12 12 12;
                   }
                   fill.smooth : 0;
               }
               description { state: "clicked" 0.0;
                   inherit:  "default" 0.0;
                   visible: 1;
                   color: 255 255 255 255;
               }
           }
           part { name: "left_bt_icon";
               repeat_events: 1;
               description { state: "default" 0.0;
                   rel1.to: "left_bt";
                   rel2.to: "left_bt";
                   align: 0.5 0.5;
                   min: 16 16;
                   max: 16 16;
                   image.normal: "sp_bt_l.png";
               }
           }
           part { name: "right_bt_icon";
               repeat_events: 1;
               description { state: "default" 0.0;
                   rel1.to: "right_bt";
                   rel2.to: "right_bt";
                   align: 0.5 0.5;
                   min: 16 16;
                   max: 16 16;
                   image.normal: "sp_bt_r.png";
               }
           }
           part { name: "elm.text";
               type: TEXT;
               mouse_events: 0;
               scale: 1;
               description { state: "default" 0.0;
                   visible: 1;
                   align: 0.0 0.5;
                   rel1 { relative: 1.0 0.0;
                       offset: 3 2;
                       to_x: "left_bt";
                       to_y: "bg";
                   }
                   rel2 { relative: 0.0 1.0;
                       offset: -3 -2;
                       to_x: "right_bt";
                       to_y: "bg";
                   }
                   color: 0 0 0 255;
                   text {
                       font: "SLP:style=Roman";
                       size: 10;
                       min: 1 1;
                       align: 0.5 0.5;
                   }
               }
               description { state: "active" 0.0;
                   inherit: "default" 0.0;
                   visible: 0;
               }
               description { state: "disabled_active" 0.0;
                   inherit: "default" 0.0;
                   color: 0 0 0 128;
                   color3: 0 0 0 0;
               }
               description { state: "disabled" 0.0;
                   inherit: "default" 0.0;
                   color: 0 0 0 128;
                   color3: 0 0 0 0;
               }
           }
           part { name: "elm.dragable.slider";
               type: RECT;
               mouse_events: 0;
               scale: 1;
               dragable {
                   x: 1 1 0;
                   y: 0 0 0;
               }
               description { state: "default" 0.0;
                   rel1.to: "bg";
                   rel2.to: "bg";
                   fixed: 1 1;
                   color: 0 0 0 0;
               }
           }
           part { name: "button_events";
               type: RECT;
               dragable {
                   events: "elm.dragable.slider";
               }
               mouse_events: 1;
               description { state: "default" 0.0;
                   rel1.to: "elm.text";
                   rel2.to: "elm.text";
                   color: 0 0 0 0;
               }
           }
           part { name: "elm.swallow.entry";
               type: SWALLOW;
               description { state: "default" 0.0;
                   visible: 0;
                   align: 0.5 0.5;
                   rel1 { relative: 1.0 0.5;
                       offset: 3 2;
                       to_x: "left_bt";
                       to_y: "bg";
                   }
                   rel2 { relative: 0.0 0.5;
                       offset: -3 -2;
                       to_x: "right_bt";
                       to_y: "bg";
                   }
                   fixed: 1 1;
                   color: 0 0 0 0;
               }
               description { state: "active" 0.0;
                   inherit: "default" 0.0;
                   visible: 1;
                   color: 255 255 255 255;
               }
               description { state: "disabled_active" 0.0;
                   inherit: "default" 0.0;
                   visible: 0;
               }
               description { state: "disabled" 0.0;
                   inherit: "default" 0.0;
                   visible: 0;
               }
           }
           part { name: "disabler";
               type: RECT;
               description { state: "default" 0.0;
                   color: 0 0 0 0;
                   visible: 0;
               }
               description { state: "disabled" 0.0;
                   inherit: "default" 0.0;
                   visible: 1;
               }
           }
       }
       programs {
           program { name: "text_show";
               signal: "elm,state,text,visible";
               source: "elm";
               action:  STATE_SET "visible" 0.0;
               target: "elm.text";
           }
           program { name: "text_hide";
               signal: "elm,state,text,hidden";
               source: "elm";
               action:  STATE_SET "default" 0.0;
               target: "elm.text";
           }
           program { name: "dec";
               signal: "mouse,down,1";
               source: "left_bt";
               action: SIGNAL_EMIT "elm,action,decrement,start" "";
           }
           program { name: "dec2";
               signal: "mouse,up,1";
               source: "left_bt";
               action: SIGNAL_EMIT "elm,action,decrement,stop" "";
           }
           program { name: "inc";
               signal: "mouse,down,1";
               source: "right_bt";
               action: SIGNAL_EMIT "elm,action,increment,start" "";
           }
           program { name: "inc2";
               signal: "mouse,up,1";
               source: "right_bt";
               action: SIGNAL_EMIT "elm,action,increment,stop" "";
           }
           program {
               name:   "left_bt_click";
               signal: "mouse,down,1";
               source: "left_over2";
               action: STATE_SET "clicked" 0.0;
               target: "left_bt";
           }
           program {
               name:   "left_bt_unclick";
               signal: "mouse,up,1";
               source: "left_over2";
               action: STATE_SET "default" 0.0;
               target: "left_bt";
           }
           program {
               name:   "left_bt_click2";
               signal: "mouse,down,1";
               source: "left_over3";
               action: STATE_SET "clicked" 0.0;
               target: "left_over3";
           }
           program {
               name:   "left_bt_unclick2";
               signal: "mouse,up,1";
               source: "left_over3";
               action: STATE_SET "default" 0.0;
               transition: DECELERATE 0.5;
               target: "left_over3";
           }
           program {
               name:   "left_bt_unclick3";
               signal: "mouse,up,1";
               source: "left_over2";
               action: SIGNAL_EMIT "elm,action,click" "";
           }

           program {
               name:   "right_bt_click";
               signal: "mouse,down,1";
               source: "right_over2";
               action: STATE_SET "clicked" 0.0;
               target: "right_bt";
           }
           program {
               name:   "right_bt_unclick";
               signal: "mouse,up,1";
               source: "right_over2";
               action: STATE_SET "default" 0.0;
               target: "right_bt";
           }
           program {
               name:   "right_bt_click2";
               signal: "mouse,down,1";
               source: "right_over3";
               action: STATE_SET "clicked" 0.0;
               target: "right_over3";
           }
           program {
               name:   "right_bt_unclick2";
               signal: "mouse,up,1";
               source: "right_over3";
               action: STATE_SET "default" 0.0;
               transition: DECELERATE 0.5;
               target: "right_over3";
           }
           program {
               name:   "right_bt_unclick3";
               signal: "mouse,up,1";
               source: "right_over2";
               action: SIGNAL_EMIT "elm,action,click" "";
           }
           program { name: "disable";
               signal: "elm,state,disabled";
               source: "elm";
               action: STATE_SET "disabled" 0.0;
               target: "left_bt";
               target: "left_over1";
               target: "left_over2";
               target: "right_bt";
               target: "right_over1";
               target: "right_over2";
               target: "disabler";
               after: "disable_text";
           }
           program { name: "disable_text";
               script {
                   new st[31];
                   new Float:vl;
                   get_state(PART:"elm.text", st, 30, vl);
                   if (!strcmp(st, "active"))
                   set_state(PART:"elm.text", "disabled_active", 0.0);
                   else
                   set_state(PART:"elm.text", "disabled", 0.0);

                   get_state(PART:"elm.swallow.entry", st, 30, vl);
                   if (!strcmp(st, "active"))
                   set_state(PART:"elm.swallow.entry", "disabled_active", 0.0);
                   else
                   set_state(PART:"elm.swallow.entry", "disabled", 0.0);
               }
           }
           program { name: "enable";
               signal: "elm,state,enabled";
               source: "elm";
               action: STATE_SET "default" 0.0;
               target: "left_bt";
               target: "left_over1";
               target: "left_over2";
               target: "right_bt";
               target: "right_over1";
               target: "right_over2";
               target: "disabler";
               after: "enable_text";
           }
           program { name: "enable_text";
               script {
                   new st[31];
                   new Float:vl;
                   get_state(PART:"elm.text", st, 30, vl);
                   if (!strcmp(st, "disabled_active"))
                   set_state(PART:"elm.text", "active", 0.0);
                   else
                   set_state(PART:"elm.text", "default", 0.0);

                   get_state(PART:"elm.swallow.entry", st, 30, vl);
                   if (!strcmp(st, "disabled_active"))
                   set_state(PART:"elm.swallow.entry", "active", 0.0);
                   else
                   set_state(PART:"elm.swallow.entry", "default", 0.0);
               }
           }
           program { name: "active";
               signal: "elm,state,active";
               source: "elm";
               action: STATE_SET "active" 0.0;
               target: "elm.text";
               target: "elm.swallow.entry";
           }
           program { name: "inactive";
               signal: "elm,state,inactive";
               source: "elm";
               action: STATE_SET "default" 0.0;
               target: "elm.text";
               target: "elm.swallow.entry";
           }
           program { name: "toggle_text";
               signal: "mouse,up,1";
               source: "button_events";
               action: SIGNAL_EMIT "elm,action,entry,toggle" "";
           }
       }
   }

///////////////////////////////////////////////////////////////////////////////
   group { name: "elm/spinner/base/vertical";
       images {
           image: "shelf_inset.png" COMP;
           image: "bt_hilight.png" COMP;
           image: "bt_shine.png" COMP;
           image: "bt_glow.png" COMP;
           image: "bt_dis_base.png" COMP;
           image: "bt_dis_hilight.png" COMP;
           image: "up.png" COMP;
           image: "down.png" COMP;
           image: "bt_spinner_up.png" COMP;
           image: "bt_spinner_down.png" COMP;
           image: "bt_spinner_hilight.png" COMP;
       }
       parts {
           part { name: "bg";
               type: RECT;
               description { state: "default" 0.0;
                   max: 99999 30;
                   min: 0 30;
                   rel1.offset: 1 1;
                   rel2.offset: -2 -2;
                   color: 255 255 255 0;
               }
           }
           part { name: "conf_over";
               mouse_events:  0;
               description { state: "default" 0.0;
                   rel1 {
                     to: "bg";
                     relative: 0.0 0.0;
                   }
                   rel2 {
                      to_x: "down_bt";
                      offset: -22 -1;
                   }
                   rel2 {
                      to_y: "bg";
                   }
                   image {
                       normal: "shelf_inset.png";
                       border: 7 7 7 7;
                       middle: 0;
                   }
                   fill.smooth : 0;
               }
           }
           part { name: "down_bt";
               mouse_events:  1;
               description { state: "default" 0.0;
                   rel1 {
                       to_x: "bg";
                       to_y: "up_bt";
                       relative: 1 1;
                       offset: 0 1;
                   }
                   rel2 { to: "bg";
                       relative: 1 1;
                       offset: -1 -1;
                   }
                   align: 1.0 0.5;
                   min: 24 16;
                   max: 24 16;
                   image {
                       normal: "bt_spinner_down.png";
                       border: 6 6 6 6;
                   }
                   fill.smooth : 0;
               }
               description { state: "clicked" 0.0;
                   inherit: "default" 0.0;
                   image.normal: "bt_spinner_down.png";
                   image.middle: SOLID;
               }
               description { state: "disabled" 0.0;
                   inherit:  "default" 0.0;
                   image {
                       normal: "bt_dis_base.png";
                       border: 4 4 4 4;
                   }
               }
           }
           part { name: "down_over3";
               mouse_events: 1;
               repeat_events: 1;
               description { state: "default" 0.0;
                   color: 255 255 255 0;
                   rel1.to: "down_bt";
                   rel2.to: "down_bt";
                   image {
                       normal: "bt_glow.png";
                       border: 12 12 12 12;
                   }
                   fill.smooth : 0;
               }
               description { state: "clicked" 0.0;
                   inherit:  "default" 0.0;
                   visible: 1;
                   color: 255 255 255 255;
               }
           }
           part { name: "up_bt";
               mouse_events:  1;
               description { state: "default" 0.0;
                   rel1 { to: "bg";
                       relative: 0 0;
                       offset: 0 0;
                   }
                   rel2 { to: "bg";
                       relative: 1 0.5;
                       offset: -1 -1;
                   }
                   align: 1.0 0.5;
                   min: 24 16;
                   max: 24 16;
                   image {
                       normal: "bt_spinner_up.png";
                       border: 6 6 6 6;
                   }
                   fill.smooth : 0;
               }
               description { state: "clicked" 0.0;
                   inherit: "default" 0.0;
                   image.normal: "bt_spinner_up.png";
                   image.middle: SOLID;
               }
               description { state: "disabled" 0.0;
                   inherit:  "default" 0.0;
                   image {
                       normal: "bt_dis_base.png";
                       border: 4 4 4 4;
                   }
               }
           }
           part { name: "up_over1";
               mouse_events: 0;
               description { state: "default" 0.0;
                   rel1.to: "up_bt";
                   rel2 { to: "up_bt";
                       relative: 1.0 0.5;
                   }
                   image {
                       normal: "bt_spinner_hilight.png";
                       border: 7 7 7 0;
                   }
               }
               description { state: "disabled" 0.0;
                   inherit:  "default" 0.0;
                   image {
                       normal: "bt_dis_hilight.png";
                       border: 4 4 4 0;
                   }
               }
           }
           part { name: "up_over3";
               mouse_events: 1;
               repeat_events: 1;
               description { state: "default" 0.0;
                   color: 255 255 255 0;
                   rel1.to: "up_bt";
                   rel2.to: "up_bt";
                   image {
                       normal: "bt_glow.png";
                       border: 12 12 12 12;
                   }
                   fill.smooth : 0;
               }
               description { state: "clicked" 0.0;
                   inherit:  "default" 0.0;
                   visible: 1;
                   color: 255 255 255 255;
               }
           }
           part { name: "down_bt_icon";
               repeat_events: 1;
               description { state: "default" 0.0;
                   rel1.to: "down_bt";
                   rel2.to: "down_bt";
                   align: 0.5 0.5;
                   min: 14 12;
                   max: 14 12;
                   image.normal: "down.png";
               }
           }
           part { name: "up_bt_icon";
               repeat_events: 1;
               description { state: "default" 0.0;
                   rel1.to: "up_bt";
                   rel2.to: "up_bt";
                   align: 0.5 0.5;
                   min: 14 12;
                   max: 14 12;
                   image.normal: "up.png";
               }
           }
           part { name: "elm.text";
               type: TEXT;
               mouse_events: 0;
               scale: 1;
               description { state: "default" 0.0;
                   visible: 1;
                   align: 0.0 0.5;
                   rel1 { relative: 0.0 0.0;
                       offset: 3 2;
                       to_x: "bg";
                       to_y: "bg";
                   }
                   rel2 { relative: 0.0 1.0;
                       offset: -3 -2;
                       to_x: "bg";
                       to_y: "bg";
                   }
                   color: 0 0 0 255;
                   text {
                       font: "SLP:style=Roman";
                       size: 10;
                       min: 1 1;
                       align: 0.5 0.5;
                   }
               }
               description { state: "active" 0.0;
                   inherit: "default" 0.0;
                   visible: 0;
               }
               description { state: "disabled_active" 0.0;
                   inherit: "default" 0.0;
                   color: 0 0 0 128;
                   color3: 0 0 0 0;
               }
               description { state: "disabled" 0.0;
                   inherit: "default" 0.0;
                   color: 0 0 0 128;
                   color3: 0 0 0 0;
               }
           }
           part { name: "elm.dragable.slider";
               type: RECT;
               mouse_events: 0;
               scale: 1;
               dragable {
                   x: 1 1 0;
                   y: 0 0 0;
               }
               description { state: "default" 0.0;
                   rel1.to: "bg";
                   rel2.to: "bg";
                   fixed: 1 1;
                   color: 0 0 0 0;
               }
           }
           part { name: "button_events";
               type: RECT;
               dragable {
                   events: "elm.dragable.slider";
               }
               mouse_events: 1;
               description { state: "default" 0.0;
                   rel1.to: "elm.text";
                   rel2.to: "elm.text";
                   color: 0 0 0 0;
               }
           }
           part { name: "elm.swallow.entry";
               type: SWALLOW;
               description { state: "default" 0.0;
                   visible: 0;
                   align: 0.5 0.5;
                   rel1 { relative: 0.0 0.5;
                       offset: 3 2;
                       to: "bg";
                   }
                   rel2 { relative: 1.0 0.5;
                       offset: -3 -2;
                       to: "bg";
                   }
                   fixed: 1 1;
                   color: 0 0 0 0;
               }
               description { state: "active" 0.0;
                   inherit: "default" 0.0;
                   visible: 1;
                   color: 255 255 255 255;
               }
               description { state: "disabled_active" 0.0;
                   inherit: "default" 0.0;
                   visible: 0;
               }
               description { state: "disabled" 0.0;
                   inherit: "default" 0.0;
                   visible: 0;
               }
           }
           part { name: "disabler";
               type: RECT;
               description { state: "default" 0.0;
                   color: 0 0 0 0;
                   visible: 0;
               }
               description { state: "disabled" 0.0;
                   inherit: "default" 0.0;
                   visible: 1;
               }
           }
       }
       programs {
           program { name: "text_show";
               signal: "elm,state,text,visible";
               source: "elm";
               action:  STATE_SET "visible" 0.0;
               target: "elm.text";
           }
           program { name: "text_hide";
               signal: "elm,state,text,hidden";
               source: "elm";
               action:  STATE_SET "default" 0.0;
               target: "elm.text";
           }
           program { name: "dec";
               signal: "mouse,down,1";
               source: "down_bt";
               action: SIGNAL_EMIT "elm,action,decrement,start" "";
           }
           program { name: "dec2";
               signal: "mouse,up,1";
               source: "down_bt";
               action: SIGNAL_EMIT "elm,action,decrement,stop" "";
           }
           program { name: "inc";
               signal: "mouse,down,1";
               source: "up_bt";
               action: SIGNAL_EMIT "elm,action,increment,start" "";
           }
           program { name: "inc2";
               signal: "mouse,up,1";
               source: "up_bt";
               action: SIGNAL_EMIT "elm,action,increment,stop" "";
           }
           program {
               name:   "down_bt_click2";
               signal: "mouse,down,1";
               source: "down_over3";
               action: STATE_SET "clicked" 0.0;
               target: "down_over3";
           }
           program {
               name:   "down_bt_unclick2";
               signal: "mouse,up,1";
               source: "down_over3";
               action: STATE_SET "default" 0.0;
               transition: DECELERATE 0.5;
               target: "down_over3";
           }
           program {
               name:   "up_bt_click2";
               signal: "mouse,down,1";
               source: "up_over3";
               action: STATE_SET "clicked" 0.0;
               target: "up_over3";
           }
           program {
               name:   "up_bt_unclick2";
               signal: "mouse,up,1";
               source: "up_over3";
               action: STATE_SET "default" 0.0;
               transition: DECELERATE 0.5;
               target: "up_over3";
           }
           program { name: "disable";
               signal: "elm,state,disabled";
               source: "elm";
               action: STATE_SET "disabled" 0.0;
               target: "down_bt";
               target: "up_bt";
               target: "disabler";
               after: "disable_text";
           }
           program { name: "disable_text";
               script {
                   new st[31];
                   new Float:vl;
                   get_state(PART:"elm.text", st, 30, vl);
                   if (!strcmp(st, "active"))
                   set_state(PART:"elm.text", "disabled_active", 0.0);
                   else
                   set_state(PART:"elm.text", "disabled", 0.0);

                   get_state(PART:"elm.swallow.entry", st, 30, vl);
                   if (!strcmp(st, "active"))
                   set_state(PART:"elm.swallow.entry", "disabled_active", 0.0);
                   else
                   set_state(PART:"elm.swallow.entry", "disabled", 0.0);
               }
           }
           program { name: "enable";
               signal: "elm,state,enabled";
               source: "elm";
               action: STATE_SET "default" 0.0;
               target: "down_bt";
               target: "up_bt";
               target: "disabler";
               after: "enable_text";
           }
           program { name: "enable_text";
               script {
                   new st[31];
                   new Float:vl;
                   get_state(PART:"elm.text", st, 30, vl);
                   if (!strcmp(st, "disabled_active"))
                   set_state(PART:"elm.text", "active", 0.0);
                   else
                   set_state(PART:"elm.text", "default", 0.0);

                   get_state(PART:"elm.swallow.entry", st, 30, vl);
                   if (!strcmp(st, "disabled_active"))
                   set_state(PART:"elm.swallow.entry", "active", 0.0);
                   else
                   set_state(PART:"elm.swallow.entry", "default", 0.0);
               }
           }
           program { name: "active";
               signal: "elm,state,active";
               source: "elm";
               action: STATE_SET "active" 0.0;
               target: "elm.text";
               target: "elm.swallow.entry";
           }
           program { name: "inactive";
               signal: "elm,state,inactive";
               source: "elm";
               action: STATE_SET "default" 0.0;
               target: "elm.text";
               target: "elm.swallow.entry";
           }
           program { name: "toggle_text";
               signal: "mouse,up,1";
               source: "button_events";
               action: SIGNAL_EMIT "elm,action,entry,toggle" "";
           }
       }
   }

///////////////////////////////////////////////////////////////////////////////
	group { name: "elm/picker/base/default";
		images {
			image: "01_picker_spinner_panel_bg_top.png" COMP;
			image: "01_picker_spinner_panel_bg_bottom.png" COMP;
			image: "01_picker_spinner_plus.png" COMP;
			image: "01_picker_spinner_minus.png" COMP;
			image: "01_picker_spinner_new_ani_01.png" COMP;
			image: "01_picker_spinner_new_ani_02.png" COMP;
			image: "01_picker_spinner_new_ani_03.png" COMP;
			image: "01_picker_spinner_new_ani_04.png" COMP;
			image: "01_picker_spinner_new_ani_05.png" COMP;
			image: "01_picker_spinner_new_ani_06.png" COMP;
		}

		#define ELM_PICKER_ANIM_MAX 7
		#define ELM_PICKER_ANIM_HALF 4
		script {
			public ani_state; // 0: up, 1: down
			public ani_lock;
			public animator(val) {
				new s[8], next;
				if (get_int(ani_lock) == 0)
					return 0;

				if (val == ELM_PICKER_ANIM_MAX) {
					set_state(PART:"elm.img.ani", "default", 0.0);
					if (get_int(ani_state) == 0)
						emit("pressed", "up");
					else
						emit("pressed", "down");
					set_int(ani_lock, 0);
					return 0;
				}

				if (get_int(ani_state) == 1)
					next = val;
				else
					next = ELM_PICKER_ANIM_MAX-val;

				snprintf(s, 8, "ani%d", next);
				set_state(PART:"elm.img.ani", s, 0.0);

				if (val == ELM_PICKER_ANIM_HALF) {
					if (get_int(ani_state) == 0)
						emit("half", "up");
					else
						emit("half", "down");
				}
				return 0;
			}
			public message(Msg_Type:type, id, ...) {
				if ((type == MSG_FLOAT) && (id == 1)) {
					new Float:v;
					new Float:t = 0;
					new i;

					if (get_int(ani_lock) == 1)
						return;
					set_int(ani_lock, 1);

					v = getfarg(2)/ELM_PICKER_ANIM_MAX;
					if (v < 0)
						set_int(ani_state, 1);
					else
						set_int(ani_state, 0);
					v = abs(v);

					for (i = 0; i <= ELM_PICKER_ANIM_MAX; i++) {
						t += v;
						timer(t, "animator", i);
					}
				}
       			}
		}

		parts {
			part {
				name: "elm.base";
				type: RECT;
				description {
					state: "default" 0.0;
					color: 0 0 0 0;
				}
			}

			part {
				name: "elm.rect.pad.middle";
				mouse_events: 0;
				scale: 1;
				description {
					min: 0 3;
					fixed: 0 1;
					rel1.to: "elm.base";
					rel1.relative: 0.0 0.5;
					rel2.to: "elm.base";
					rel2.relative: 1.0 0.5;
				}
			}

			part {
				name: "elm.bg.top";
				mouse_events: 1;
				description {
					state: "default" 0.0;
					rel1.to: "elm.base";
					rel1.offset: 0 0;
					rel2.to: "elm.rect.pad.middle";
					rel2.relative: 1.0 0.0;
					image.normal: "01_picker_spinner_panel_bg_top.png";
					image.border: 4 4 1 1;
				}
			}
			part {
				name: "elm.bg.bottom";
				mouse_events: 1;
				description {
					state: "default" 0.0;
					rel1.to: "elm.rect.pad.middle";
					rel1.relative: 0.0 1.0;
					rel2.to: "elm.base";
					image.normal: "01_picker_spinner_panel_bg_bottom.png";
					image.border: 4 4 1 1;
				}
			}

			part {
				type: RECT;
				name: "elm.clip.top";
				description {
					state: "default" 0.0;
					rel1.to: "elm.bg.top";
					rel2.to: "elm.bg.top";
					color: 255 255 255 255;
				}
			}

			part {
				type: RECT;
				name: "elm.clip.bottom";
				description {
					state: "default" 0.0;
					rel1.to: "elm.bg.bottom";
					rel2.to: "elm.bg.bottom";
					color: 255 255 255 255;
				}
			}

			part {
				name: "elm.text.top";
	    			type: TEXT;
				mouse_events:  0;
            			clip_to: "elm.clip.top";
				scale: 1;
				description {
					state: "default" 0.0;
					visible: 0;
					rel1.to: "elm.bg.top";
					rel1.relative: 0.0 0.0;
					rel1.offset: 13 12;
					rel2.to: "elm.bg.bottom";
					rel2.relative: 1.0 1.0;
					rel2.offset: -12 -11;
					color: 0 0 0 255;
					color2: 0 0 0 255;
					fixed: 1 1;
					text {
						font: "SLP:style=Roman";
						size: 80;
						min: 1 1;
						align: 0.5 0.5;
					}
				}
				description {
					state: "visible" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
			}

			part {
				name: "elm.text.bottom";
	    			type: TEXT;
				mouse_events:  0;
            			clip_to: "elm.clip.bottom";
				scale: 1;
				description {
					state: "default" 0.0;
					visible: 0;
					rel1.to: "elm.text.top";
					rel2.to: "elm.text.top";
					color: 0 0 0 255;
					color2: 0 0 0 255;
					fixed: 1 1;
					text {
						font: "SLP:style=Roman";
						size: 80;
						min: 1 1;
						align: 0.5 0.5;
					}
				}
				description {
					state: "visible" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
			}
			part {
				name: "elm.rect.flick";
				type: RECT;
				mouse_events: 1;
				description {
					state: "default" 0.0;
					rel1.to: "elm.bg.top";
					rel1.relative: 0.0 0.0;
					rel2.to: "elm.bg.bottom";
					rel2.relative: 1.0 1.0;
					color: 0 0 0 0;
				}
			}

			part {
				name: "elm.img.button.up";
				mouse_events:  0;
				scale: 1;
				description {
					state: "default" 0.0;
					visible: 0;
					min: 20 20;
					fixed: 1 1;
					rel1.to: "elm.bg.top";
					rel1.relative: 0.5 (16/142);
					rel2.to: "elm.bg.top";
					rel2.relative: 0.5 (36/142);
					image.normal: "01_picker_spinner_plus.png";
					align: 0.5 0.0;
				}
				description {
					state: "visible" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
			}

			part {
				name: "elm.rect.button.up";
				type: RECT;
				mouse_events: 1;
				repeat_events: 1;
				description {
					state: "default" 0.0;
					visible: 0;
					rel1.to: "elm.bg.top";
					rel2.to: "elm.bg.top";
					rel2.relative: 1.0 0.8;
					color: 0 0 0 0;
				}
				description {
					state: "visible" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
			}

			part {
				name: "elm.img.button.down";
				mouse_events:  0;
				scale: 1;
				description {
					state: "default" 0.0;
					visible: 0;
					min: 20 20;
					fixed: 1 1;
					rel1.to: "elm.bg.bottom";
					rel1.relative: 0.5 (107/143);
					rel2.to: "elm.bg.bottom";
					rel2.relative: 0.5 (127/143);
					image.normal: "01_picker_spinner_minus.png";
					align: 0.5 1.0;
				}
				description {
					state: "visible" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
			}

			part {
				name: "elm.rect.button.down";
				type: RECT;
				mouse_events: 1;
				repeat_events: 1;
				description {
					state: "default" 0.0;
					visible: 0;
					rel1.to: "elm.bg.bottom";
					rel1.relative: 0.0 0.2;
					rel2.to: "elm.bg.bottom";
					color: 0 0 0 0;
				}
				description {
					state: "visible" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
			}

			part {
				name: "elm.img.ani";
				mouse_events: 0;
				description {
					state: "default" 0.0;
					visible: 0;
					rel1.to: "elm.bg.top";
					rel1.offset: -8 0;
					rel2.to_y: "elm.bg.top";
					rel2.offset: 7 -1;
					visible: 0;
				}
				description {
					state: "ani1" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					rel1.relative: 0.0 0.063;
					image.normal: "01_picker_spinner_new_ani_01.png";
					image.border: 8 8 1 1;
				}
				description {
					state: "ani2" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					rel1.relative: 0.0 0.246;
					image.normal: "01_picker_spinner_new_ani_02.png";
					image.border: 8 8 1 1;
				}
				description {
					state: "ani3" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					rel1.relative: 0.0 0.521;
					image.normal: "01_picker_spinner_new_ani_03.png";
					image.border: 8 8 1 1;
				}
				description {
					state: "ani4" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					rel1.to: "elm.bg.bottom";
					rel1.relative: 0.0 0.0;
					rel2.to_y: "elm.bg.bottom";
					rel2.relative: 1.0 0.479;
					image.normal: "01_picker_spinner_new_ani_04.png";
					image.border: 8 8 1 1;
				}
				description {
					state: "ani5" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					rel1.to: "elm.bg.bottom";
					rel1.relative: 0.0 0.0;
					rel2.to_y: "elm.bg.bottom";
					rel2.relative: 1.0 0.754;
					image.normal: "01_picker_spinner_new_ani_05.png";
					image.border: 8 8 1 1;
				}
				description {
					state: "ani6" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					rel1.to: "elm.bg.bottom";
					rel1.relative: 0.0 0.0;
					rel2.to_y: "elm.bg.bottom";
					rel2.relative: 1.0 0.937;
					image.normal: "01_picker_spinner_new_ani_06.png";
					image.border: 8 8 1 1;
				}
			}
		}
		programs {
			program {
				name: "button_show";
				signal: "elm,state,button,visible";
				source: "elm";
				action: STATE_SET "visible" 0.0;
				target: "elm.img.button.up";
				target: "elm.rect.button.up";
				target: "elm.img.button.down";
				target: "elm.rect.button.down";
			}

			program {
				name: "button_hide";
				signal: "elm,state,button,hidden";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "elm.img.button.up";
				target: "elm.rect.button.up";
				target: "elm.img.button.down";
				target: "elm.rect.button.down";
			}

			program {
				name: "text_show";
				signal: "elm,state,text,visible";
				source: "elm";
				action: STATE_SET "visible" 0.0;
				target: "elm.text.top";
				target: "elm.text.bottom";
			}
			program {
				name: "text_hide";
				signal: "elm,state,text,hidden";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "elm.text.top";
				target: "elm.text.bottom";
			}
		}
	}

	group { name: "elm/picker/base/no_button";
		images {
			image: "01_picker_spinner_panel_bg_top.png" COMP;
			image: "01_picker_spinner_panel_bg_bottom.png" COMP;
			image: "01_picker_spinner_new_ani_01.png" COMP;
			image: "01_picker_spinner_new_ani_02.png" COMP;
			image: "01_picker_spinner_new_ani_03.png" COMP;
			image: "01_picker_spinner_new_ani_04.png" COMP;
			image: "01_picker_spinner_new_ani_05.png" COMP;
			image: "01_picker_spinner_new_ani_06.png" COMP;
		}
		script {
			public ani_state; // 0: up, 1: down
			public ani_lock;
			public animator(val) {
				new s[8], next;
				if (get_int(ani_lock) == 0)
					return 0;

				if (val == ELM_PICKER_ANIM_MAX) {
					set_state(PART:"elm.img.ani", "default", 0.0);
					if (get_int(ani_state) == 0)
						emit("pressed", "up");
					else
						emit("pressed", "down");
					set_int(ani_lock, 0);
					return 0;
				}

				if (get_int(ani_state) == 1)
					next = val;
				else
					next = ELM_PICKER_ANIM_MAX-val;

				snprintf(s, 8, "ani%d", next);
				set_state(PART:"elm.img.ani", s, 0.0);

				if (val == ELM_PICKER_ANIM_HALF) {
					if (get_int(ani_state) == 0)
						emit("half", "up");
					else
						emit("half", "down");
				}
				return 0;
			}
			public message(Msg_Type:type, id, ...) {
				if ((type == MSG_FLOAT) && (id == 1)) {
					new Float:v;
					new Float:t = 0;
					new i;

					if (get_int(ani_lock) == 1)
						return;
					set_int(ani_lock, 1);

					v = getfarg(2)/ELM_PICKER_ANIM_MAX;
					if (v < 0)
						set_int(ani_state, 1);
					else
						set_int(ani_state, 0);
					v = abs(v);

					for (i = 0; i <= ELM_PICKER_ANIM_MAX; i++) {
						t += v;
						timer(t, "animator", i);
					}
				}
       			}
		}

		parts {
			part {
				name: "elm.base";
				type: RECT;
				description {
					state: "default" 0.0;
					color: 0 0 0 0;
				}
			}

			part {
				name: "elm.rect.pad.middle";
				mouse_events: 0;
				scale: 1;
				description {
					min: 0 3;
					fixed: 0 1;
					rel1.to: "elm.base";
					rel1.relative: 0.0 0.5;
					rel2.to: "elm.base";
					rel2.relative: 1.0 0.5;
				}
			}

			part {
				name: "elm.bg.top";
				mouse_events: 1;
				description {
					state: "default" 0.0;
					rel1.to: "elm.base";
					rel1.offset: 0 0;
					rel2.to: "elm.rect.pad.middle";
					rel2.relative: 1.0 0.0;
					image.normal: "01_picker_spinner_panel_bg_top.png";
					image.border: 4 4 1 1;
				}
			}
			part {
				name: "elm.bg.bottom";
				mouse_events: 1;
				description {
					state: "default" 0.0;
					rel1.to: "elm.rect.pad.middle";
					rel1.relative: 0.0 1.0;
					rel2.to: "elm.base";
					image.normal: "01_picker_spinner_panel_bg_bottom.png";
					image.border: 4 4 1 1;
				}
			}

			part {
				type: RECT;
				name: "elm.clip.top";
				description {
					state: "default" 0.0;
					rel1.to: "elm.bg.top";
					rel2.to: "elm.bg.top";
					color: 255 255 255 255;
				}
			}

			part {
				type: RECT;
				name: "elm.clip.bottom";
				description {
					state: "default" 0.0;
					rel1.to: "elm.bg.bottom";
					rel2.to: "elm.bg.bottom";
					color: 255 255 255 255;
				}
			}

			part {
				name: "elm.text.top";
	    			type: TEXT;
				mouse_events:  0;
            			clip_to: "elm.clip.top";
				scale: 1;
				description {
					state: "default" 0.0;
					visible: 0;
					rel1.to: "elm.bg.top";
					rel1.relative: 0.0 0.0;
					rel1.offset: 13 12;
					rel2.to: "elm.bg.bottom";
					rel2.relative: 1.0 1.0;
					rel2.offset: -12 -11;
					color: 0 0 0 255;
					color2: 0 0 0 255;
					fixed: 1 1;
					text {
						font: "SLP:style=Roman";
						size: 80;
						min: 1 1;
						align: 0.5 0.5;
					}
				}
				description {
					state: "visible" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
			}

			part {
				name: "elm.text.bottom";
	    			type: TEXT;
				mouse_events:  0;
            			clip_to: "elm.clip.bottom";
				scale: 1;
				description {
					state: "default" 0.0;
					visible: 0;
					rel1.to: "elm.text.top";
					rel2.to: "elm.text.top";
					color: 0 0 0 255;
					color2: 0 0 0 255;
					fixed: 1 1;
					text {
						font: "SLP:style=Roman";
						size: 80;
						min: 1 1;
						align: 0.5 0.5;
					}
				}
				description {
					state: "visible" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
			}
			part {
				name: "elm.rect.flick";
				type: RECT;
				mouse_events: 1;
				description {
					state: "default" 0.0;
					rel1.to: "elm.bg.top";
					rel1.relative: 0.0 0.0;
					rel2.to: "elm.bg.bottom";
					rel2.relative: 1.0 1.0;
					color: 0 0 0 0;
				}
			}

			part {
				name: "elm.img.ani";
				mouse_events: 0;
				description {
					state: "default" 0.0;
					visible: 0;
					rel1.to: "elm.bg.top";
					rel1.offset: -8 0;
					rel2.to_y: "elm.bg.top";
					rel2.offset: 7 -1;
					visible: 0;
				}
				description {
					state: "ani1" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					rel1.relative: 0.0 0.063;
					image.normal: "01_picker_spinner_new_ani_01.png";
					image.border: 8 8 1 1;
				}
				description {
					state: "ani2" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					rel1.relative: 0.0 0.246;
					image.normal: "01_picker_spinner_new_ani_02.png";
					image.border: 8 8 1 1;
				}
				description {
					state: "ani3" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					rel1.relative: 0.0 0.521;
					image.normal: "01_picker_spinner_new_ani_03.png";
					image.border: 8 8 1 1;
				}
				description {
					state: "ani4" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					rel1.to: "elm.bg.bottom";
					rel1.relative: 0.0 0.0;
					rel2.to_y: "elm.bg.bottom";
					rel2.relative: 1.0 0.479;
					image.normal: "01_picker_spinner_new_ani_04.png";
					image.border: 8 8 1 1;
				}
				description {
					state: "ani5" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					rel1.to: "elm.bg.bottom";
					rel1.relative: 0.0 0.0;
					rel2.to_y: "elm.bg.bottom";
					rel2.relative: 1.0 0.754;
					image.normal: "01_picker_spinner_new_ani_05.png";
					image.border: 8 8 1 1;
				}
				description {
					state: "ani6" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					rel1.to: "elm.bg.bottom";
					rel1.relative: 0.0 0.0;
					rel2.to_y: "elm.bg.bottom";
					rel2.relative: 1.0 0.937;
					image.normal: "01_picker_spinner_new_ani_06.png";
					image.border: 8 8 1 1;
				}
			}
		}
		programs {
			program {
				name: "text_show";
				signal: "elm,state,text,visible";
				source: "elm";
				action: STATE_SET "visible" 0.0;
				target: "elm.text.top";
				target: "elm.text.bottom";
			}
			program {
				name: "text_hide";
				signal: "elm,state,text,hidden";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "elm.text.top";
				target: "elm.text.bottom";
			}
		}
	}
	group { name: "elm/picker/base/timepicker/ampm";
		images {
			image: "01_picker_spinner_panel_bg_top.png" COMP;
			image: "01_picker_spinner_panel_bg_bottom.png" COMP;
			image: "01_picker_spinner_new_ani_01.png" COMP;
			image: "01_picker_spinner_new_ani_02.png" COMP;
			image: "01_picker_spinner_new_ani_03.png" COMP;
			image: "01_picker_spinner_new_ani_04.png" COMP;
			image: "01_picker_spinner_new_ani_05.png" COMP;
			image: "01_picker_spinner_new_ani_06.png" COMP;
		}
		script {
			public ani_state; // 0: up, 1: down
			public ani_lock;
			public animator(val) {
				new s[8], next;
				if (get_int(ani_lock) == 0)
					return 0;

				if (val == ELM_PICKER_ANIM_MAX) {
					set_state(PART:"elm.img.ani", "default", 0.0);
					if (get_int(ani_state) == 0)
						emit("pressed", "up");
					else
						emit("pressed", "down");
					set_int(ani_lock, 0);
					return 0;
				}

				if (get_int(ani_state) == 1)
					next = val;
				else
					next = ELM_PICKER_ANIM_MAX-val;

				snprintf(s, 8, "ani%d", next);
				set_state(PART:"elm.img.ani", s, 0.0);

				if (val == ELM_PICKER_ANIM_HALF) {
					if (get_int(ani_state) == 0)
						emit("half", "up");
					else
						emit("half", "down");
				}
				return 0;
			}
			public message(Msg_Type:type, id, ...) {
				if ((type == MSG_FLOAT) && (id == 1)) {
					new Float:v;
					new Float:t = 0;
					new i;

					if (get_int(ani_lock) == 1)
						return;
					set_int(ani_lock, 1);

					v = getfarg(2)/ELM_PICKER_ANIM_MAX;
					if (v < 0)
						set_int(ani_state, 1);
					else
						set_int(ani_state, 0);
					v = abs(v);

					for (i = 0; i <= ELM_PICKER_ANIM_MAX; i++) {
						t += v;
						timer(t, "animator", i);
					}
				}
       			}
		}

		parts {
			part {
				name: "elm.base";
				type: RECT;
				description {
					state: "default" 0.0;
					color: 0 0 0 0;
				}
			}

			part {
				name: "elm.rect.pad.middle";
				mouse_events: 0;
				scale: 1;
				description {
					min: 0 3;
					fixed: 0 1;
					rel1.to: "elm.base";
					rel1.relative: 0.0 0.5;
					rel2.to: "elm.base";
					rel2.relative: 1.0 0.5;
				}
			}

			part {
				name: "elm.bg.top";
				mouse_events: 1;
				description {
					state: "default" 0.0;
					rel1.to: "elm.base";
					rel1.offset: 0 0;
					rel2.to: "elm.rect.pad.middle";
					rel2.relative: 1.0 0.0;
					image.normal: "01_picker_spinner_panel_bg_top.png";
					image.border: 4 4 1 1;
				}
			}
			part {
				name: "elm.bg.bottom";
				mouse_events: 1;
				description {
					state: "default" 0.0;
					rel1.to: "elm.rect.pad.middle";
					rel1.relative: 0.0 1.0;
					rel2.to: "elm.base";
					image.normal: "01_picker_spinner_panel_bg_bottom.png";
					image.border: 4 4 1 1;
				}
			}

			part {
				type: RECT;
				name: "elm.clip.top";
				description {
					state: "default" 0.0;
					rel1.to: "elm.bg.top";
					rel2.to: "elm.bg.top";
					color: 255 255 255 255;
				}
			}

			part {
				type: RECT;
				name: "elm.clip.bottom";
				description {
					state: "default" 0.0;
					rel1.to: "elm.bg.bottom";
					rel2.to: "elm.bg.bottom";
					color: 255 255 255 255;
				}
			}

			part {
				name: "elm.text.top";
	    			type: TEXT;
				mouse_events:  0;
            			clip_to: "elm.clip.top";
				scale: 1;
				description {
					state: "default" 0.0;
					visible: 0;
					rel1.to: "elm.bg.top";
					rel1.relative: 0.0 0.0;
					rel1.offset: 13 9;
					rel2.to: "elm.bg.bottom";
					rel2.relative: 1.0 1.0;
					rel2.offset: -12 -10;
					color: 0 0 0 255;
					color2: 0 0 0 255;
					fixed: 1 1;
					text {
						font: "SLP:style=Roman";
						size: 48;
						min: 1 1;
						align: 0.5 0.5;
					}
				}
				description {
					state: "visible" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
			}

			part {
				name: "elm.text.bottom";
	    			type: TEXT;
				mouse_events:  0;
            			clip_to: "elm.clip.bottom";
				scale: 1;
				description {
					state: "default" 0.0;
					visible: 0;
					rel1.to: "elm.text.top";
					rel2.to: "elm.text.top";
					color: 0 0 0 255;
					color2: 0 0 0 255;
					fixed: 1 1;
					text {
						font: "SLP:style=Roman";
						size: 48;
						min: 1 1;
						align: 0.5 0.5;
					}
				}
				description {
					state: "visible" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
			}
			part {
				name: "elm.rect.flick";
				type: RECT;
				mouse_events: 1;
				description {
					state: "default" 0.0;
					rel1.to: "elm.bg.top";
					rel1.relative: 0.0 0.0;
					rel2.to: "elm.bg.bottom";
					rel2.relative: 1.0 1.0;
					color: 0 0 0 0;
				}
			}

			part {
				name: "elm.rect.button.up";
				type: RECT;
				mouse_events: 1;
				repeat_events: 1;
				description {
					state: "default" 0.0;
					visible: 0;
					rel1.to: "elm.bg.top";
					rel2.to: "elm.bg.top";
					rel2.relative: 1.0 0.8;
					color: 0 0 0 0;
				}
				description {
					state: "visible" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
			}

			part {
				name: "elm.rect.button.down";
				type: RECT;
				mouse_events: 1;
				repeat_events: 1;
				description {
					state: "default" 0.0;
					visible: 0;
					rel1.to: "elm.bg.bottom";
					rel1.relative: 0.0 0.2;
					rel2.to: "elm.bg.bottom";
					color: 0 0 0 0;
				}
				description {
					state: "visible" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
			}

			part {
				name: "elm.img.ani";
				mouse_events: 0;
				description {
					state: "default" 0.0;
					visible: 0;
					rel1.to: "elm.bg.top";
					rel1.offset: -8 0;
					rel2.to_y: "elm.bg.top";
					rel2.offset: 7 -1;
					visible: 0;
				}
				description {
					state: "ani1" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					rel1.relative: 0.0 0.063;
					image.normal: "01_picker_spinner_new_ani_01.png";
					image.border: 8 8 1 1;
				}
				description {
					state: "ani2" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					rel1.relative: 0.0 0.246;
					image.normal: "01_picker_spinner_new_ani_02.png";
					image.border: 8 8 1 1;
				}
				description {
					state: "ani3" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					rel1.relative: 0.0 0.521;
					image.normal: "01_picker_spinner_new_ani_03.png";
					image.border: 8 8 1 1;
				}
				description {
					state: "ani4" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					rel1.to: "elm.bg.bottom";
					rel1.relative: 0.0 0.0;
					rel2.to_y: "elm.bg.bottom";
					rel2.relative: 1.0 0.479;
					image.normal: "01_picker_spinner_new_ani_04.png";
					image.border: 8 8 1 1;
				}
				description {
					state: "ani5" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					rel1.to: "elm.bg.bottom";
					rel1.relative: 0.0 0.0;
					rel2.to_y: "elm.bg.bottom";
					rel2.relative: 1.0 0.754;
					image.normal: "01_picker_spinner_new_ani_05.png";
					image.border: 8 8 1 1;
				}
				description {
					state: "ani6" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					rel1.to: "elm.bg.bottom";
					rel1.relative: 0.0 0.0;
					rel2.to_y: "elm.bg.bottom";
					rel2.relative: 1.0 0.937;
					image.normal: "01_picker_spinner_new_ani_06.png";
					image.border: 8 8 1 1;
				}
			}
		}
		programs {
			program {
				name: "button_show";
				signal: "elm,state,button,visible";
				source: "elm";
				action: STATE_SET "visible" 0.0;
				target: "elm.rect.button.up";
				target: "elm.rect.button.down";
			}

			program {
				name: "button_hide";
				signal: "elm,state,button,hidden";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "elm.rect.button.up";
				target: "elm.rect.button.down";
			}
			program {
				name: "text_show";
				signal: "elm,state,text,visible";
				source: "elm";
				action: STATE_SET "visible" 0.0;
				target: "elm.text.top";
				target: "elm.text.bottom";
			}
			program {
				name: "text_hide";
				signal: "elm,state,text,hidden";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "elm.text.top";
				target: "elm.text.bottom";
			}
		}
	}

///////////////////////////////////////////////////////////////////////////////
	group { name: "elm/timepicker/base/default";
		images {
			image: "01_hybrid_spinner_num_time_colon.png" COMP;
		}

		parts {
			part {
				name: "elm.rect.bg";
				type: RECT;
				description {
					state: "default" 0.0;
					color: 0 0 0 0;
				}
			}
			part {
				name: "elm.rect.bg.time";
				type: RECT;
				description {
					state: "default" 0.0;
					color: 0 0 0 0;
					rel2.to_x: "elm.swallow.ampm";
					rel2.relative: (-12/90) 1.0;
					color: 0 0 0 0;
				}
			}

			part {
				name: "elm.img.colon.1";
				description {
					state: "default" 0.0;
					rel1.to: "elm.swallow.hour";
					rel1.relative: 1.0 0.246;
					rel2.to: "elm.swallow.min";
					rel2.relative: 0.0 0.754;
					image.normal: "01_hybrid_spinner_num_time_colon.png";
	       				aspect: 0.34 1.0;
	       				aspect_preference: HORIZONTAL;
				}
			}
			part {
				name: "elm.img.colon.2";
				description {
					state: "default" 0.0;
					rel1.to: "elm.swallow.min";
					rel1.relative: 1.0 0.246;
					rel2.to: "elm.swallow.sub";
					rel2.relative: 0.0 0.754;
					image.normal: "01_hybrid_spinner_num_time_colon.png";
	       				aspect: 0.34 1.0;
	       				aspect_preference: HORIZONTAL;
					visible: 0;
				}
				description {
					state: "with_sec" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
			}

			part {
				name: "elm.text.hour";
	    			type: TEXT;
				mouse_events:  0;
				scale: 1;
				description {
					state: "default" 0.0;
					visible: 1;
					rel1.to_x: "elm.swallow.hour";
					rel1.to_y: "elm.rect.bg.time";
					rel2.to_x: "elm.swallow.hour";
					rel2.to_y: "elm.rect.bg.time";
					rel2.relative: 1.0 (24/317);
					color: 255 255 255 255;
					color2: 0 0 0 255;
					fixed: 1 1;
					text {
						font: "SLP:style=Roman";
						text: "Hour";
						size: 24;
						min: 1 1;
						align: 0.5 0.5;
					}
				}
			}

			part {
				name: "elm.swallow.hour";
				type: SWALLOW;
				mouse_events: 1;
				description {
					state: "default" 0.0;
					rel1.to_x: "elm.rect.bg.time";
					rel1.to_y: "elm.text.hour";
					rel1.relative: 0.0 (32/24);
					rel2.to: "elm.rect.bg.time";
					rel2.relative: 0.380 1.0;
				}
				description {
					state: "with_sec" 0.0;
					inherit: "default" 0.0;
					rel2.relative: 0.283 1.0;
				}
			}

			part {
				name: "elm.text.min";
	    			type: TEXT;
				mouse_events:  0;
				scale: 1;
				description {
					state: "default" 0.0;
					visible: 1;
					rel1.to_x: "elm.swallow.min";
					rel1.to_y: "elm.rect.bg.time";
					rel2.to_x: "elm.swallow.sub";
					rel2.to_y: "elm.rect.bg.time";
					rel2.relative: 1.0 (24/317);
					color: 255 255 255 255;
					color2: 0 0 0 255;
					fixed: 1 1;
					text {
						font: "SLP:style=Roman";
						text: "Minute";
						size: 24;
						min: 1 1;
						align: 0.5 0.5;
					}
				}
				description {
					state: "with_sec" 0.0;
					inherit: "default" 0.0;
					rel2.to_x: "elm.swallow.min";
				}
			}

			part {
				name: "elm.swallow.min";
				type: SWALLOW;
				mouse_events: 1;
				description {
					state: "default" 0.0;
					rel1.to_x: "elm.rect.bg.time";
					rel1.to_y: "elm.swallow.hour";
					rel1.relative: 0.482 0.0;
					rel2.to: "elm.rect.bg.time";
					rel2.relative: 0.729 1.0;
				}
				description {
					state: "with_sec" 0.0;
					inherit: "default" 0.0;
					rel1.relative: 0.358 0.0;
					rel2.relative: 0.641 1.0;
				}
			}

			part {
				name: "elm.text.sec";
	    			type: TEXT;
				mouse_events:  0;
				scale: 1;
				description {
					state: "default" 0.0;
					visible: 0;
					rel1.to_x: "elm.swallow.sub";
					rel1.to_y: "elm.rect.bg.time";
					rel2.to_x: "elm.swallow.sub";
					rel2.to_y: "elm.rect.bg.time";
					rel2.relative: 1.0 (24/317);
					color: 255 255 255 255;
					color2: 0 0 0 255;
					fixed: 1 1;
					text {
						font: "SLP:style=Roman";
						text: "Sec";
						size: 24;
						min: 1 1;
						align: 0.5 0.5;
					}
				}
				description {
					state: "with_sec" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
			}

			part {
				name: "elm.swallow.sub";
				type: SWALLOW;
				mouse_events: 1;
				description {
					state: "default" 0.0;
					rel1.to_x: "elm.rect.bg.time";
					rel1.to_y: "elm.swallow.hour";
					rel1.relative: 0.753 0.0;
					rel2.to: "elm.rect.bg.time";
				}
				description {
					state: "with_sec" 0.0;
					inherit: "default" 0.0;
					rel1.relative: 0.717 0.0;
				}
			}

			part {
				name: "elm.swallow.ampm";
				type: SWALLOW;
				mouse_events: 1;
				description {
					state: "default" 0.0;
					rel1.to_x: "elm.rect.bg";
					rel1.to_y: "elm.swallow.hour";
					rel1.relative: (492/480) 0.0;
					rel2.to: "elm.rect.bg";
					rel2.relative: 1.232 1.0;
					visible: 0;
				}
				description {
					state: "visible" 0.0;
					rel1.to_x: "elm.rect.bg";
					rel1.to_y: "elm.swallow.hour";
					rel1.relative: 0.793 0.0;
					rel2.to: "elm.rect.bg";
					rel2.relative: 1.0 1.0;
					visible: 1;
				}
			}
		}

		programs {
			program {
				name: "sec_hide";
				signal: "elm,state,sec,hidden";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "elm.swallow.hour";
				target: "elm.swallow.min";
				target: "elm.swallow.sub";
				target: "elm.img.colon.2";
				target: "elm.text.min";
				target: "elm.text.sec";
			}
			program {
				name: "sec_show";
				signal: "elm,state,sec,visible";
				source: "elm";
				action: STATE_SET "with_sec" 0.0;
				target: "elm.swallow.hour";
				target: "elm.swallow.min";
				target: "elm.swallow.sub";
				target: "elm.img.colon.2";
				target: "elm.text.min";
				target: "elm.text.sec";
			}
			program {
				name: "ampm_hide";
				signal: "elm,state,ampm,hidden";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "elm.swallow.ampm";
			}
			program {
				name: "ampm_show";
				signal: "elm,state,ampm,visible";
				source: "elm";
				action: STATE_SET "visible" 0.0;
				target: "elm.swallow.ampm";
			}
		}
	}

///////////////////////////////////////////////////////////////////////////////
	group { name: "elm/datepicker/base/default";

		parts {
			part {
				name: "elm.rect.bg";
				type: RECT;
				description {
					state: "default" 0.0;
					color: 0 0 0 0;
				}
			}

			part {
				name: "elm.text.year";
	    			type: TEXT;
				mouse_events:  0;
				scale: 1;
				description {
					state: "default" 0.0;
					visible: 1;
					rel1.to_x: "elm.swallow.year";
					rel1.to_y: "elm.rect.bg";
					rel2.to_x: "elm.swallow.year";
					rel2.to_y: "elm.rect.bg";
					rel2.relative: 1.0 (24/317);
					color: 255 255 255 255;
					color2: 0 0 0 255;
					fixed: 1 1;
					text {
						font: "SLP:style=Roman";
						text: "Year";
						size: 24;
						min: 1 1;
						align: 0.5 0.5;
					}
				}
			}

			part {
				name: "elm.swallow.year";
				type: SWALLOW;
				mouse_events: 1;
				description {
					state: "default" 0.0;
					rel1.to_x: "elm.rect.bg";
					rel1.to_y: "elm.text.year";
					rel1.relative: 0.549 (32/24);
					rel2.to: "elm.rect.bg";
					visible: 0;
				}
				description {
					state: "ddmmyy" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
				description {
					state: "mmddyy" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
				description {
					state: "mmyydd" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					rel1.relative: 0.274 (32/24);
					rel2.relative: 0.725 1.0;
				}
				description {
					state: "ddyymm" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					rel1.relative: 0.274 (32/24);
					rel2.relative: 0.725 1.0;
				}
				description {
					state: "yyddmm" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					rel1.relative: 0.0 (32/24);
					rel2.relative: 0.451 1.0;
				}
				description {
					state: "yymmdd" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					rel1.relative: 0.0 (32/24);
					rel2.relative: 0.451 1.0;
				}
			}

			part {
				name: "elm.text.mon";
	    			type: TEXT;
				mouse_events:  0;
				scale: 1;
				description {
					state: "default" 0.0;
					visible: 1;
					rel1.to_x: "elm.swallow.mon";
					rel1.to_y: "elm.rect.bg";
					rel2.to_x: "elm.swallow.mon";
					rel2.to_y: "elm.rect.bg";
					rel2.relative: 1.0 (24/317);
					color: 255 255 255 255;
					color2: 0 0 0 255;
					fixed: 1 1;
					text {
						font: "SLP:style=Roman";
						text: "Month";
						size: 24;
						min: 1 1;
						align: 0.5 0.5;
					}
				}
			}

			part {
				name: "elm.swallow.mon";
				type: SWALLOW;
				mouse_events: 1;
				description {
					state: "default" 0.0;
					rel1.to_x: "elm.rect.bg";
					rel1.to_y: "elm.text.mon";
					rel1.relative: 0.270 (32/24);
					rel2.to: "elm.rect.bg";
					rel2.relative: 0.503 1.0;
					visible: 0;
				}
				description {
					state: "ddmmyy" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
				description {
					state: "mmddyy" 0.0;
					inherit: "default" 0.0;
					rel1.relative: 0.0 (32/24);
					rel2.relative: 0.233 1.0;
					visible: 1;
				}
				description {
					state: "mmyydd" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					rel1.relative: 0.0 (32/24);
					rel2.relative: 0.233 1.0;
				}
				description {
					state: "ddyymm" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					rel1.relative: 0.767 (32/24);
					rel2.relative: 1.0 1.0;
				}
				description {
					state: "yyddmm" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					rel1.relative: 0.767 (32/24);
					rel2.relative: 1.0 1.0;
				}
				description {
					state: "yymmdd" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					rel1.relative: 0.497 (32/24);
					rel2.relative: 0.730 1.0;
				}
			}

			part {
				name: "elm.text.day";
	    			type: TEXT;
				mouse_events:  0;
				scale: 1;
				description {
					state: "default" 0.0;
					visible: 1;
					rel1.to_x: "elm.swallow.day";
					rel1.to_y: "elm.rect.bg";
					rel2.to_x: "elm.swallow.day";
					rel2.to_y: "elm.rect.bg";
					rel2.relative: 1.0 (24/317);
					color: 255 255 255 255;
					color2: 0 0 0 255;
					fixed: 1 1;
					text {
						font: "SLP:style=Roman";
						text: "Day";
						size: 24;
						min: 1 1;
						align: 0.5 0.5;
					}
				}
			}

			part {
				name: "elm.swallow.day";
				type: SWALLOW;
				mouse_events: 1;
				description {
					state: "default" 0.0;
					rel1.to_x: "elm.rect.bg";
					rel1.to_y: "elm.text.day";
					rel1.relative: 0.0 (32/24);
					rel2.to: "elm.rect.bg";
					rel2.relative: 0.233 1.0;
					visible: 0;
				}
				description {
					state: "ddmmyy" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
				description {
					state: "mmddyy" 0.0;
					inherit: "default" 0.0;
					rel1.relative: 0.270 (32/24);
					rel2.relative: 0.503 1.0;
					visible: 1;
				}
				description {
					state: "mmyydd" 0.0;
					inherit: "default" 0.0;
					rel1.relative: 0.767 (32/24);
					rel2.relative: 1.0 1.0;
					visible: 1;
				}
				description {
					state: "ddyymm" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					rel1.relative: 0.0 (32/24);
					rel2.relative: 0.233 1.0;
				}
				description {
					state: "yyddmm" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					rel1.relative: 0.497 (32/24);
					rel2.relative: 0.730 1.0;
				}
				description {
					state: "yymmdd" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					rel1.relative: 0.767 (32/24);
					rel2.relative: 1.0 1.0;
				}
			}

		}

		programs {
			program {
				name: "yymmdd";
				signal: "elm,state,yymmdd";
				source: "elm";
				action: STATE_SET "yymmdd" 0.0;
				target: "elm.swallow.year";
				target: "elm.swallow.mon";
				target: "elm.swallow.day";
			}
			program {
				name: "yyddmm";
				signal: "elm,state,yyddmm";
				source: "elm";
				action: STATE_SET "yyddmm" 0.0;
				target: "elm.swallow.year";
				target: "elm.swallow.mon";
				target: "elm.swallow.day";
			}
			program {
				name: "mmyydd";
				signal: "elm,state,mmyydd";
				source: "elm";
				action: STATE_SET "mmyydd" 0.0;
				target: "elm.swallow.year";
				target: "elm.swallow.mon";
				target: "elm.swallow.day";
			}
			program {
				name: "mmddyy";
				signal: "elm,state,mmddyy";
				source: "elm";
				action: STATE_SET "mmddyy" 0.0;
				target: "elm.swallow.year";
				target: "elm.swallow.mon";
				target: "elm.swallow.day";
			}
			program {
				name: "ddyymm";
				signal: "elm,state,ddyymm";
				source: "elm";
				action: STATE_SET "ddyymm" 0.0;
				target: "elm.swallow.year";
				target: "elm.swallow.mon";
				target: "elm.swallow.day";
			}
			program {
				name: "ddmmyy";
				signal: "elm,state,ddmmyy";
				source: "elm";
				action: STATE_SET "ddmmyy" 0.0;
				target: "elm.swallow.year";
				target: "elm.swallow.mon";
				target: "elm.swallow.day";
			}
		}
	}

///////////////////////////////////////////////////////////////////////////////
	group { name: "elm/datepicker2/base/default";
		images {
			image: "DatePicker_frame_up_bg.9.png" COMP;
		}

		parts {
			part {
				name: "elm.rect.bg";
				description {
					state: "default" 0.0;
					image.normal: "DatePicker_frame_up_bg.9.png";
				}
			}

			part {
				name: "elm.swallow.year";
				type: SWALLOW;
				mouse_events: 1;
				description {
					state: "default" 0.0;
					rel1.relative: 0.715 0.03;
					rel2.relative: 0.96 0.97;
					visible: 0;
				}
				description {
					state: "ddmmyy" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
				description {
					state: "mmddyy" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
				description {
					state: "mmyydd" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					rel1.relative: 0.57 0.03;
					rel2.relative: 0.815 0.97;
				}
				description {
					state: "ddyymm" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					rel1.relative: 0.185 0.03;
					rel2.relative: 0.43 0.97;
				}
				description {
					state: "yyddmm" 0.0;
					inherit: "default" 0.0;
					visible: 1;
	 				rel1.relative: 0.04 0.03;
					rel2.relative: 0.285 0.97;
				}
				description {
					state: "yymmdd" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					rel1.relative: 0.04 0.03;
					rel2.relative: 0.285 0.97;
				}
			}

			part {
				name: "elm.swallow.mon";
				type: SWALLOW;
				mouse_events: 1;
				description {
					state: "default" 0.0;
					rel1.relative: 0.185 0.03;
					rel2.relative: 0.715 0.97;
					visible: 0;
				}
				description {
					state: "ddmmyy" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
				description {
					state: "mmddyy" 0.0;
					inherit: "default" 0.0;
					rel1.relative: 0.04 0.03;
					rel2.relative: 0.57 0.97;
					visible: 1;
				}
				description {
					state: "mmyydd" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					rel1.relative: 0.04 0.03;
					rel2.relative: 0.57 0.97;
				}
				description {
					state: "ddyymm" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					rel1.relative: 0.43 0.03;
					rel2.relative: 0.96 0.97;
				}
				description {
					state: "yyddmm" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					rel1.relative: 0.43 0.03;
					rel2.relative: 0.96 0.97;
				}
				description {
					state: "yymmdd" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					rel1.relative: 0.285 0.03;
					rel2.relative: 0.815 0.97;
				}
			}

			part {
				name: "elm.swallow.day";
				type: SWALLOW;
				mouse_events: 1;
				description {
					state: "default" 0.0;
					rel1.relative: 0.04 0.03;
					rel2.relative: 0.185 0.97;
					visible: 0;
				}
				description {
					state: "ddmmyy" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
				description {
					state: "mmddyy" 0.0;
					inherit: "default" 0.0;
					rel1.relative: 0.57 0.03;
					rel2.relative: 0.715 0.97;
					visible: 1;
				}
				description {
					state: "mmyydd" 0.0;
					inherit: "default" 0.0;
					rel1.relative: 0.815 0.03;
					rel2.relative: 0.96 0.97;
					visible: 1;
				}
				description {
					state: "ddyymm" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					rel1.relative: 0.04 0.03;
					rel2.relative: 0.185 0.97;
				}
				description {
					state: "yyddmm" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					rel1.relative: 0.285 0.03;
					rel2.relative: 0.43 0.97;
				}
				description {
					state: "yymmdd" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					rel1.relative: 0.815 0.03;
					rel2.relative: 0.96 0.97;
				}
			}

		}

		programs {
			program {
				name: "yymmdd";
				signal: "elm,state,yymmdd";
				source: "elm";
				action: STATE_SET "yymmdd" 0.0;
				target: "elm.swallow.year";
				target: "elm.swallow.mon";
				target: "elm.swallow.day";
			}
			program {
				name: "yyddmm";
				signal: "elm,state,yyddmm";
				source: "elm";
				action: STATE_SET "yyddmm" 0.0;
				target: "elm.swallow.year";
				target: "elm.swallow.mon";
				target: "elm.swallow.day";
			}
			program {
				name: "mmyydd";
				signal: "elm,state,mmyydd";
				source: "elm";
				action: STATE_SET "mmyydd" 0.0;
				target: "elm.swallow.year";
				target: "elm.swallow.mon";
				target: "elm.swallow.day";
			}
			program {
				name: "mmddyy";
				signal: "elm,state,mmddyy";
				source: "elm";
				action: STATE_SET "mmddyy" 0.0;
				target: "elm.swallow.year";
				target: "elm.swallow.mon";
				target: "elm.swallow.day";
			}
			program {
				name: "ddyymm";
				signal: "elm,state,ddyymm";
				source: "elm";
				action: STATE_SET "ddyymm" 0.0;
				target: "elm.swallow.year";
				target: "elm.swallow.mon";
				target: "elm.swallow.day";
			}
			program {
				name: "ddmmyy";
				signal: "elm,state,ddmmyy";
				source: "elm";
				action: STATE_SET "ddmmyy" 0.0;
				target: "elm.swallow.year";
				target: "elm.swallow.mon";
				target: "elm.swallow.day";
			}
		}
	}
///////////////////////////////////////////////////////////////////////////////
	group { name: "elm/discpicker/base/default";
		images {
			image: "DatePicker_frame_up.9.png" COMP;
		}

		parts {
			part {
				name: "elm.base";
				type: RECT;
				description {
					state: "default" 0.0;
					color: 0 0 0 0;
				}
			}

			part {
				name: "elm.bg";
				mouse_events: 1;
				description {
					state: "default" 0.0;
					rel1.to: "elm.base";
					rel2.to: "elm.base";
					image.normal: "DatePicker_frame_up.9.png";
					image.border: 4 4 4 4;
				}
			}
		}
	}

	group { name: "elm/discpicker/item/base/default";
		parts {
			part { name: "elm.label";
				type: TEXT;
				mouse_events: 0;
				scale: 1;
				description { state: "default" 0.0;
					align: 0.5 0.5;
					color: 0 0 0 255;
					text {
						font: "SLP:style=Bold";
						size: 35;
						align: 0.5 0.5;
						min: 1 1;
					}
				}
				description { state: "selected" 0.0;
					inherit: "default" 0.0;
					color:  0 0 139 255;
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					color:  170 170 170 255;
				}
			}
		}

		programs {
			program {
				name: "unselect";
				signal: "elm,item,unselected";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "elm.label";
			}
			program {
				name: "select";
				signal: "elm,item,selected";
				source: "elm";
				action: STATE_SET "selected" 0.0;
				target: "elm.label";
			}

			program {
				name: "disable";
				signal: "elm,item,disabled";
				source: "elm";
				action: STATE_SET "disabled" 0.0;
				target: "elm.label";
			}
			// FIXME: plz check item is selected or not
			program {
				name: "enable";
				signal: "elm,item,enabled";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "elm.label";
			}
		}
	}

	group { name: "elm/discpicker/indicator/base/default";
		images {
			image: "DatePicker_frame_center.9.png" COMP;
		}

		parts {
			part { name: "elm.label";
				description {
					state: "default" 0.0;
					image.normal: "DatePicker_frame_center.9.png";
					image.border: 3 3 10 20;
				}
			}
		}
	}

////////////////////////////////////////////////////////////////////////////////////////
//
// check default textblock style
//
///////////////////////////////////////////////////////////////////////////////////////
	styles {
		style { name: "check_label_textblock_style";
			base: "font=SLP:style=Roman font_size=32 color=#000000 wrap=char";
			tag: "br" "\n";
			tag: "ps" "ps";
			tag: "hilight" "+ font=SLP:style=Bold";
			tag: "b" "+ font=SLP:style=Bold";
			tag: "whitecolor" "+ color=#ffffff";
			tag: "tab" "\t";
		}
	}

////////////////////////////////////////////////////////////////////////////////////////
//
// check default with small touch area style
//
///////////////////////////////////////////////////////////////////////////////////////

	group {
		name: "elm/check/base/default-small-touch";

		images {
			image: "01_check_bg.png" COMP;
			image: "01_check_select_icon.png" COMP;
		}

		parts {
			part {
				name: "back_bg";
				mouse_events: 0;
				type: RECT;
				scale: 1;
				description {
					state: "default" 0.0;
					rel1 { relative: 0.0 0.0; offset: 1 1; }
					rel2 { relative: 0.0 1.0; offset: 1 -2; }
					align: 0 0.5;
					min: 50 50;
					fixed: 1 1;
					aspect: 1.0 1.0;
					aspect_preference: VERTICAL;
					color: 0 0 0 0;
				}
			}
			part {
				name: "bg";
				mouse_events: 0;
				scale: 1;
				description {
					state: "default" 0.0;
					rel1 { relative: 0 0; offset: 1 1; to: "back_bg"; }
					rel2 { relative: 1 1; offset: 1 -2; to: "back_bg"; }
					align: 0.5 0.5;
					min: 50 50;
					max: 50 50;
					aspect: 1.0 1.0;
					aspect_preference: VERTICAL;
					image {
						normal: "01_check_bg.png";
						border: 1 1 1 1;
						middle: 1;
					}
					fill.smooth : 0;
				}
			}
			part {
				name: "check";
				mouse_events: 0;
				scale: 1;
				description {
					state: "default" 0.0;
					rel1 { offset: 0 0; to: "bg"; }
					rel2 { offset: -2 -2; to: "bg"; }
					visible: 0;
					image.normal: "01_check_select_icon.png";
				}
				description {
					state: "visible" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
				description {
					state: "disabled" 0.0;
					inherit: "default" 0.0;
					visible: 0;
					color: 128 128 128 128;
				}
				description {
					state: "disabled_visible" 0.0;
					inherit: "default" 0.0;
					color: 128 128 128 128;
					visible: 1;
				}
			}
			part {
				name: "elm.swallow.content";
				type: SWALLOW;
				description {
					state: "default" 0.0;
					fixed: 1 0;
					visible: 0;
					color: 255 255 255 255;
					align: 0.0 0.5;
					rel1 { relative: 1.0 0.0; offset: 1 1; to_x: "bg"; }
					rel2 { relative: 1.0 1.0; offset: 2 -2; to_x: "bg"; }
				}
				description {
					state: "visible" 0.0;
					inherit: "default" 0.0;
					fixed: 1 1;
					visible: 1;
					aspect: 1.0 1.0;
					aspect_preference: VERTICAL;
				}
				description {
					state: "disabled" 0.0;
					inherit: "default" 0.0;
					color: 128 128 128 128;
				}
				description {
					state: "disabled_visible" 0.0;
					inherit: "default" 0.0;
					color: 128 128 128 128;
					fixed: 1 1;
					visible: 1;
					aspect: 1.0 1.0;
				}
			}
			part {
				name: "elm.text";
				type: TEXTBLOCK;
				mouse_events: 0;
				scale: 1;
				description {
					state: "default" 0.0;
					visible: 0;
					fixed: 0 1;
					rel1 { relative: 1.0 0.5; offset: 1 1; to_x: "elm.swallow.content"; }
					rel2 { relative: 1.0 0.5; offset: -2 -2; }
					color: 255 255 255 255;
					align: 0.0 0.5;
					text {
						style: "check_label_textblock_style";
						min: 0 0;
					}
				}
				description {
					state: "visible" 0.0;
					inherit: "default" 0.0;
					text.min: 1 1;
					visible: 1;
				}
				description {
					state: "disabled" 0.0;
					inherit: "default" 0.0;
					color: 0 0 0 128;
					color3: 0 0 0 0;
				}
				description {
					state: "disabled_visible" 0.0;
					inherit: "default" 0.0;
					color: 0 0 0 128;
					color3: 0 0 0 0;
					visible: 1;
					text.min: 1 1;
				}
			}
			part {
				name: "events";
				type: RECT;
				ignore_flags: ON_HOLD;
				description {
					state: "default" 0.0;
					rel1 { to: "back_bg"; }
					rel2 { to: "back_bg"; }
					color: 0 0 0 0;
				}
			}
			part {
				name: "disabler";
				type: RECT;
				description {
					state: "default" 0.0;
					color: 0 0 0 0;
					visible: 0;
				}
				description {
					state: "disabled" 0.0;
				inherit: "default" 0.0;
				visible: 1;
				}
			}
		}
		programs {
			program {
				name: "click";
				signal: "mouse,up,1";
				source: "events";
				action: SIGNAL_EMIT "elm,action,check,toggle" "";
			}
			program {
				name: "check_on";
				signal: "elm,state,check,on";
				source: "elm";
				action: STATE_SET "visible" 0.0;
				target: "check";
			}
			program {
				name: "check_off";
				signal: "elm,state,check,off";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "check";
			}
			program {
				name: "text_show";
				signal: "elm,state,text,visible";
				source: "elm";
				action: STATE_SET "visible" 0.0;
				target: "elm.text";
			}
			program {
				name: "text_hide";
				signal: "elm,state,text,hidden";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "elm.text";
			}
			program {
				name: "icon_show";
				signal: "elm,state,icon,visible";
				source: "elm";
				action: STATE_SET "visible" 0.0;
				target: "elm.swallow.content";
			}
			program {
				name: "icon_hide";
				signal: "elm,state,icon,hidden";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "elm.swallow.content";
			}
			program {
				name: "disable";
				signal: "elm,state,disabled";
				source: "elm";
				action: STATE_SET "disabled" 0.0;
				target: "disabler";
				after: "disable_text";
			}
			program {
				name: "disable_text";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "visible"))
						set_state(PART:"elm.text", "disabled_visible", 0.0);
					else
						set_state(PART:"elm.text", "disabled", 0.0);

					get_state(PART:"elm.swallow.content", st, 30, vl);
					if (!strcmp(st, "visible"))
						set_state(PART:"elm.swallow.content", "disabled_visible", 0.0);
					else
						set_state(PART:"elm.swallow.content", "disabled", 0.0);

					get_state(PART:"check", st, 30, vl);
					if (!strcmp(st, "visible"))
						set_state(PART:"check", "disabled_visible", 0.0);
					else
						set_state(PART:"check", "disabled", 0.0);
				}
			}
			program {
				name: "enable";
				signal: "elm,state,enabled";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "disabler";
				after: "enable_text";
			}
			program {
				name: "enable_text";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "disabled_visible"))
						set_state(PART:"elm.text", "visible", 0.0);
					else
						set_state(PART:"elm.text", "default", 0.0);

					get_state(PART:"elm.swallow.content", st, 30, vl);
					if (!strcmp(st, "visible"))
						set_state(PART:"elm.swallow.content", "visible", 0.0);
					else
						set_state(PART:"elm.swallow.content", "default", 0.0);

					get_state(PART:"check", st, 30, vl);
					if (!strcmp(st, "visible"))
						set_state(PART:"check", "visible", 0.0);
					else
						set_state(PART:"check", "default", 0.0);
				}
			}
		}
	}


////////////////////////////////////////////////////////////////////////////////////////
//
// check default-divided style
//
///////////////////////////////////////////////////////////////////////////////////////
	group {
		name: "elm/check/base/default-divided";

		images {
			image: "01_button_on_lighting.png" COMP;
			image: "01_check_bg.png" COMP;
			image: "01_check_select_icon.png" COMP;
		}

		parts {
			part {
				name: "back_bg";
				mouse_events: 0;
				scale: 1;
				description {
					state: "default" 0.0;
					rel1 { relative: 0.0 0.0; offset: 1 1; }
					rel2 { relative: 0.0 1.0; offset: 1 -2; }
					align: 0 0.5;
					min: 93 92;
					fixed: 1 1;
					aspect: 1.0 1.0;
					aspect_preference: VERTICAL;
					image {
						normal: "01_button_on_lighting.png";
						border: 0 0 0 0;
						middle: 1;
					}
					fill.smooth : 0;
				}
			}
			part {
				name: "bg";
				mouse_events: 0;
				scale: 1;
				description {
					state: "default" 0.0;
					rel1 { relative: 0 0; offset: 1 1; to: "back_bg"; }
					rel2 { relative: 1 1; offset: 1 -2; to: "back_bg"; }
					align: 0.5 0.5;
					min: 50 50;
					max: 50 50;
					aspect: 1.0 1.0;
					aspect_preference: VERTICAL;
					image {
						normal: "01_check_bg.png";
						border: 5 5 5 5;
						middle: 1;
					}
					fill.smooth : 0;
				}
			}
			part {
				name: "check";
				mouse_events: 0;
				scale: 1;
				description {
					state: "default" 0.0;
					rel1 { offset: 0 0; to: "bg"; }
					rel2 { offset: -2 -2; to: "bg"; }
					visible: 0;
					image.normal: "01_check_select_icon.png";
				}
				description {
					state: "visible" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
				description {
					state: "disabled" 0.0;
					inherit: "default" 0.0;
					visible: 0;
					color: 128 128 128 128;
				}
				description {
					state: "disabled_visible" 0.0;
					inherit: "default" 0.0;
					color: 128 128 128 128;
					visible: 1;
				}
			}
			part {
				name: "elm.swallow.content";
				type: SWALLOW;
				description {
					state: "default" 0.0;
					fixed: 1 0;
					visible: 0;
					color: 255 255 255 255;
					align: 0.0 0.5;
					rel1 { relative: 1.0 0.0; offset: 1 1; to_x: "bg"; }
					rel2 { relative: 1.0 1.0; offset: 2 -2; to_x: "bg"; }
				}
				description {
					state: "visible" 0.0;
					inherit: "default" 0.0;
					fixed: 1 1;
					visible: 1;
					aspect: 1.0 1.0;
					aspect_preference: VERTICAL;
				}
				description {
					state: "disabled" 0.0;
					inherit: "default" 0.0;
					color: 128 128 128 128;
				}
				description {
					state: "disabled_visible" 0.0;
					inherit: "default" 0.0;
					color: 128 128 128 128;
					fixed: 1 1;
					visible: 1;
					aspect: 1.0 1.0;
				}
			}
			part {
				name: "elm.text";
				type: TEXTBLOCK;
				mouse_events: 0;
				scale: 1;
				description {
					state: "default" 0.0;
					visible: 0;
					fixed: 0 1;
					rel1 { relative: 1.0 0.5; offset: 1 1; to_x: "elm.swallow.content"; }
					rel2 { relative: 1.0 0.5; offset: -2 -2; }
					color: 255 255 255 255;
					align: 0.0 0.5;
					text {
						style: "check_label_textblock_style";
						min: 0 0;
					}
				}
				description {
					state: "visible" 0.0;
					inherit: "default" 0.0;
					text.min: 1 1;
					visible: 1;
				}
				description {
					state: "disabled" 0.0;
					inherit: "default" 0.0;
					color: 0 0 0 128;
					color3: 0 0 0 0;
				}
				description {
					state: "disabled_visible" 0.0;
					inherit: "default" 0.0;
					color: 0 0 0 128;
					color3: 0 0 0 0;
					visible: 1;
					text.min: 1 1;
				}
			}
			part {
				name: "events";
				type: RECT;
				ignore_flags: ON_HOLD;
				description {
					state: "default" 0.0;
					rel1 { to: "back_bg"; }
					rel2 { to: "back_bg"; }
					color: 0 0 0 0;
				}
			}
			part {
				name: "disabler";
				type: RECT;
				description {
					state: "default" 0.0;
					color: 0 0 0 0;
					visible: 0;
				}
				description {
					state: "disabled" 0.0;
				inherit: "default" 0.0;
				visible: 1;
				}
			}
		}
		programs {
			program {
				name: "click";
				signal: "mouse,up,1";
				source: "events";
				action: SIGNAL_EMIT "elm,action,check,toggle" "";
			}
			program {
				name: "check_on";
				signal: "elm,state,check,on";
				source: "elm";
				action: STATE_SET "visible" 0.0;
				target: "check";
			}
			program {
				name: "check_off";
				signal: "elm,state,check,off";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "check";
			}
			program {
				name: "text_show";
				signal: "elm,state,text,visible";
				source: "elm";
				action: STATE_SET "visible" 0.0;
				target: "elm.text";
			}
			program {
				name: "text_hide";
				signal: "elm,state,text,hidden";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "elm.text";
			}
			program {
				name: "icon_show";
				signal: "elm,state,icon,visible";
				source: "elm";
				action: STATE_SET "visible" 0.0;
				target: "elm.swallow.content";
			}
			program {
				name: "icon_hide";
				signal: "elm,state,icon,hidden";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "elm.swallow.content";
			}
			program {
				name: "disable";
				signal: "elm,state,disabled";
				source: "elm";
				action: STATE_SET "disabled" 0.0;
				target: "disabler";
				after: "disable_text";
			}
			program {
				name: "disable_text";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "visible"))
						set_state(PART:"elm.text", "disabled_visible", 0.0);
					else
						set_state(PART:"elm.text", "disabled", 0.0);

					get_state(PART:"elm.swallow.content", st, 30, vl);
					if (!strcmp(st, "visible"))
						set_state(PART:"elm.swallow.content", "disabled_visible", 0.0);
					else
						set_state(PART:"elm.swallow.content", "disabled", 0.0);

					get_state(PART:"check", st, 30, vl);
					if (!strcmp(st, "visible"))
						set_state(PART:"check", "disabled_visible", 0.0);
					else
						set_state(PART:"check", "disabled", 0.0);
				}
			}
			program {
				name: "enable";
				signal: "elm,state,enabled";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "disabler";
				after: "enable_text";
			}
			program {
				name: "enable_text";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "disabled_visible"))
						set_state(PART:"elm.text", "visible", 0.0);
					else
						set_state(PART:"elm.text", "default", 0.0);

					get_state(PART:"elm.swallow.content", st, 30, vl);
					if (!strcmp(st, "visible"))
						set_state(PART:"elm.swallow.content", "visible", 0.0);
					else
						set_state(PART:"elm.swallow.content", "default", 0.0);

					get_state(PART:"check", st, 30, vl);
					if (!strcmp(st, "visible"))
						set_state(PART:"check", "visible", 0.0);
					else
						set_state(PART:"check", "default", 0.0);
				}
			}
		}
	}

////////////////////////////////////////////////////////////////////////////////////////
//
// check onoff style
//
///////////////////////////////////////////////////////////////////////////////////////
	group {
		name: "elm/check/base/onoff";

		images {
			image: "01_on_off_button.png" COMP;
			image: "01_on_off_button_on.png" COMP;
			image: "01_check_bg.png" COMP;
			image: "01_check_select_icon.png" COMP;
		}

		parts {
			part {
				name: "back_bg";
				mouse_events: 0;
				type: RECT;
				scale: 1;
				description {
					state: "default" 0.0;
					rel1 { relative: 0.0 0.0; offset: 1 1; }
					rel2 { relative: 0.0 1.0; offset: 1 -2; }
					align: 0 0.5;
					min: 93 92;
					fixed: 1 1;
					aspect: 1.0 1.0;
					aspect_preference: VERTICAL;
					color: 0 0 0 0;
				}
			}
			part {
				name: "check";
				mouse_events: 0;
				scale: 1;
				description {
					state: "default" 0.0;
					rel1 { relative: 0 0; offset: 1 1; to: "back_bg"; }
					rel2 { relative: 1 1; offset: 1 -2; to: "back_bg"; }
					align: 0.5 0.5;
					min: 50 50;
					max: 50 50;
					aspect: 1.0 1.0;
					aspect_preference: VERTICAL;
					image.normal: "01_on_off_button.png";
				}
				description {
					state: "visible" 0.0;
					inherit: "default" 0.0;
					image.normal: "01_on_off_button_on.png";
					visible: 1;
				}
				description {
					state: "disabled" 0.0;
					inherit: "default" 0.0;
					visible: 0;
					color: 128 128 128 128;
				}
				description {
					state: "disabled_visible" 0.0;
					inherit: "default" 0.0;
					color: 128 128 128 128;
					visible: 1;
				}
			}
			part {
				name: "elm.swallow.content";
				type: SWALLOW;
				description {
					state: "default" 0.0;
					fixed: 1 0;
					visible: 0;
					color: 255 255 255 255;
					align: 0.0 0.5;
					rel1 { relative: 1.0 0.0; offset: 1 1; to_x: "check"; }
					rel2 { relative: 1.0 1.0; offset: 2 -2; to_x: "check"; }
				}
				description {
					state: "visible" 0.0;
					inherit: "default" 0.0;
					fixed: 1 1;
					visible: 1;
					aspect: 1.0 1.0;
					aspect_preference: VERTICAL;
				}
				description {
					state: "disabled" 0.0;
					inherit: "default" 0.0;
					color: 128 128 128 128;
				}
				description {
					state: "disabled_visible" 0.0;
					inherit: "default" 0.0;
					color: 128 128 128 128;
					fixed: 1 1;
					visible: 1;
					aspect: 1.0 1.0;
				}
			}
			part {
				name: "elm.text";
				type: TEXTBLOCK;
				mouse_events: 0;
				scale: 1;
				description {
					state: "default" 0.0;
					visible: 0;
					fixed: 0 1;
					rel1 { relative: 1.0 0.5; offset: 1 1; to_x: "elm.swallow.content"; }
					rel2 { relative: 1.0 0.5; offset: -2 -2; }
					color: 255 255 255 255;
					align: 0.0 0.5;
					text {
						style: "check_label_textblock_style";
						min: 0 0;
					}
				}
				description {
					state: "visible" 0.0;
					inherit: "default" 0.0;
					text.min: 1 1;
					visible: 1;
				}
				description {
					state: "disabled" 0.0;
					inherit: "default" 0.0;
					color: 0 0 0 128;
					color3: 0 0 0 0;
				}
				description {
					state: "disabled_visible" 0.0;
					inherit: "default" 0.0;
					color: 0 0 0 128;
					color3: 0 0 0 0;
					visible: 1;
					text.min: 1 1;
				}
			}
			part {
				name: "events";
				type: RECT;
				ignore_flags: ON_HOLD;
				description {
					state: "default" 0.0;
					rel1 { to: "back_bg"; }
					rel2 { to: "back_bg"; }
					color: 0 0 0 0;
				}
			}
			part {
				name: "disabler";
				type: RECT;
				description {
					state: "default" 0.0;
					color: 0 0 0 0;
					visible: 0;
				}
				description {
					state: "disabled" 0.0;
				inherit: "default" 0.0;
				visible: 1;
				}
			}
		}
		programs {
			program {
				name: "click";
				signal: "mouse,up,1";
				source: "events";
				action: SIGNAL_EMIT "elm,action,check,toggle" "";
			}
			program {
				name: "check_on";
				signal: "elm,state,check,on";
				source: "elm";
				action: STATE_SET "visible" 0.0;
				target: "check";
			}
			program {
				name: "check_off";
				signal: "elm,state,check,off";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "check";
			}
			program {
				name: "text_show";
				signal: "elm,state,text,visible";
				source: "elm";
				action: STATE_SET "visible" 0.0;
				target: "elm.text";
			}
			program {
				name: "text_hide";
				signal: "elm,state,text,hidden";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "elm.text";
			}
			program {
				name: "icon_show";
				signal: "elm,state,icon,visible";
				source: "elm";
				action: STATE_SET "visible" 0.0;
				target: "elm.swallow.content";
			}
			program {
				name: "icon_hide";
				signal: "elm,state,icon,hidden";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "elm.swallow.content";
			}
			program {
				name: "disable";
				signal: "elm,state,disabled";
				source: "elm";
				action: STATE_SET "disabled" 0.0;
				target: "disabler";
				after: "disable_text";
			}
			program {
				name: "disable_text";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "visible"))
						set_state(PART:"elm.text", "disabled_visible", 0.0);
					else
						set_state(PART:"elm.text", "disabled", 0.0);

					get_state(PART:"elm.swallow.content", st, 30, vl);
					if (!strcmp(st, "visible"))
						set_state(PART:"elm.swallow.content", "disabled_visible", 0.0);
					else
						set_state(PART:"elm.swallow.content", "disabled", 0.0);

					get_state(PART:"check", st, 30, vl);
					if (!strcmp(st, "visible"))
						set_state(PART:"check", "disabled_visible", 0.0);
					else
						set_state(PART:"check", "disabled", 0.0);
				}
			}
			program {
				name: "enable";
				signal: "elm,state,enabled";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "disabler";
				after: "enable_text";
			}
			program {
				name: "enable_text";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "disabled_visible"))
						set_state(PART:"elm.text", "visible", 0.0);
					else
						set_state(PART:"elm.text", "default", 0.0);

					get_state(PART:"elm.swallow.content", st, 30, vl);
					if (!strcmp(st, "visible"))
						set_state(PART:"elm.swallow.content", "visible", 0.0);
					else
						set_state(PART:"elm.swallow.content", "default", 0.0);

					get_state(PART:"check", st, 30, vl);
					if (!strcmp(st, "visible"))
						set_state(PART:"check", "visible", 0.0);
					else
						set_state(PART:"check", "default", 0.0);
				}
			}
		}
	}

////////////////////////////////////////////////////////////////////////////////////////
//
// check onoff with small touch area style
//
///////////////////////////////////////////////////////////////////////////////////////
	group {
		name: "elm/check/base/onoff-small-touch";

		images {
			image: "01_on_off_button.png" COMP;
			image: "01_on_off_button_on.png" COMP;
			image: "01_check_bg.png" COMP;
			image: "01_check_select_icon.png" COMP;
		}

		parts {
			part {
				name: "back_bg";
				mouse_events: 0;
				type: RECT;
				scale: 1;
				description {
					state: "default" 0.0;
					rel1 { relative: 0.0 0.0; offset: 1 1; }
					rel2 { relative: 0.0 1.0; offset: 1 -2; }
					align: 0 0.5;
					min: 50 50;
					fixed: 1 1;
					aspect: 1.0 1.0;
					aspect_preference: VERTICAL;
					color: 0 0 0 0;
				}
			}
			part {
				name: "check";
				mouse_events: 0;
				scale: 1;
				description {
					state: "default" 0.0;
					rel1 { relative: 0 0; offset: 1 1; to: "back_bg"; }
					rel2 { relative: 1 1; offset: 1 -2; to: "back_bg"; }
					align: 0.5 0.5;
					min: 50 50;
					max: 50 50;
					aspect: 1.0 1.0;
					aspect_preference: VERTICAL;
					image.normal: "01_on_off_button.png";
				}
				description {
					state: "visible" 0.0;
					inherit: "default" 0.0;
					image.normal: "01_on_off_button_on.png";
					visible: 1;
				}
				description {
					state: "disabled" 0.0;
					inherit: "default" 0.0;
					visible: 0;
					color: 128 128 128 128;
				}
				description {
					state: "disabled_visible" 0.0;
					inherit: "default" 0.0;
					color: 128 128 128 128;
					visible: 1;
				}
			}
			part {
				name: "elm.swallow.content";
				type: SWALLOW;
				description {
					state: "default" 0.0;
					fixed: 1 0;
					visible: 0;
					color: 255 255 255 255;
					align: 0.0 0.5;
					rel1 { relative: 1.0 0.0; offset: 1 1; to_x: "check"; }
					rel2 { relative: 1.0 1.0; offset: 2 -2; to_x: "check"; }
				}
				description {
					state: "visible" 0.0;
					inherit: "default" 0.0;
					fixed: 1 1;
					visible: 1;
					aspect: 1.0 1.0;
					aspect_preference: VERTICAL;
				}
				description {
					state: "disabled" 0.0;
					inherit: "default" 0.0;
					color: 128 128 128 128;
				}
				description {
					state: "disabled_visible" 0.0;
					inherit: "default" 0.0;
					color: 128 128 128 128;
					fixed: 1 1;
					visible: 1;
					aspect: 1.0 1.0;
				}
			}
			part {
				name: "elm.text";
				type: TEXTBLOCK;
				mouse_events: 0;
				scale: 1;
				description {
					state: "default" 0.0;
					visible: 0;
					fixed: 0 1;
					rel1 { relative: 1.0 0.5; offset: 1 1; to_x: "elm.swallow.content"; }
					rel2 { relative: 1.0 0.5; offset: -2 -2; }
					color: 255 255 255 255;
					align: 0.0 0.5;
					text {
						style: "check_label_textblock_style";
						min: 0 0;
					}
				}
				description {
					state: "visible" 0.0;
					inherit: "default" 0.0;
					text.min: 1 1;
					visible: 1;
				}
				description {
					state: "disabled" 0.0;
					inherit: "default" 0.0;
					color: 0 0 0 128;
					color3: 0 0 0 0;
				}
				description {
					state: "disabled_visible" 0.0;
					inherit: "default" 0.0;
					color: 0 0 0 128;
					color3: 0 0 0 0;
					visible: 1;
					text.min: 1 1;
				}
			}
			part {
				name: "events";
				type: RECT;
				ignore_flags: ON_HOLD;
				description {
					state: "default" 0.0;
					rel1 { to: "back_bg"; }
					rel2 { to: "back_bg"; }
					color: 0 0 0 0;
				}
			}
			part {
				name: "disabler";
				type: RECT;
				description {
					state: "default" 0.0;
					color: 0 0 0 0;
					visible: 0;
				}
				description {
					state: "disabled" 0.0;
				inherit: "default" 0.0;
				visible: 1;
				}
			}
		}
		programs {
			program {
				name: "click";
				signal: "mouse,up,1";
				source: "events";
				action: SIGNAL_EMIT "elm,action,check,toggle" "";
			}
			program {
				name: "check_on";
				signal: "elm,state,check,on";
				source: "elm";
				action: STATE_SET "visible" 0.0;
				target: "check";
			}
			program {
				name: "check_off";
				signal: "elm,state,check,off";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "check";
			}
			program {
				name: "text_show";
				signal: "elm,state,text,visible";
				source: "elm";
				action: STATE_SET "visible" 0.0;
				target: "elm.text";
			}
			program {
				name: "text_hide";
				signal: "elm,state,text,hidden";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "elm.text";
			}
			program {
				name: "icon_show";
				signal: "elm,state,icon,visible";
				source: "elm";
				action: STATE_SET "visible" 0.0;
				target: "elm.swallow.content";
			}
			program {
				name: "icon_hide";
				signal: "elm,state,icon,hidden";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "elm.swallow.content";
			}
			program {
				name: "disable";
				signal: "elm,state,disabled";
				source: "elm";
				action: STATE_SET "disabled" 0.0;
				target: "disabler";
				after: "disable_text";
			}
			program {
				name: "disable_text";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "visible"))
						set_state(PART:"elm.text", "disabled_visible", 0.0);
					else
						set_state(PART:"elm.text", "disabled", 0.0);

					get_state(PART:"elm.swallow.content", st, 30, vl);
					if (!strcmp(st, "visible"))
						set_state(PART:"elm.swallow.content", "disabled_visible", 0.0);
					else
						set_state(PART:"elm.swallow.content", "disabled", 0.0);

					get_state(PART:"check", st, 30, vl);
					if (!strcmp(st, "visible"))
						set_state(PART:"check", "disabled_visible", 0.0);
					else
						set_state(PART:"check", "disabled", 0.0);
				}
			}
			program {
				name: "enable";
				signal: "elm,state,enabled";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "disabler";
				after: "enable_text";
			}
			program {
				name: "enable_text";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "disabled_visible"))
						set_state(PART:"elm.text", "visible", 0.0);
					else
						set_state(PART:"elm.text", "default", 0.0);

					get_state(PART:"elm.swallow.content", st, 30, vl);
					if (!strcmp(st, "visible"))
						set_state(PART:"elm.swallow.content", "visible", 0.0);
					else
						set_state(PART:"elm.swallow.content", "default", 0.0);

					get_state(PART:"check", st, 30, vl);
					if (!strcmp(st, "visible"))
						set_state(PART:"check", "visible", 0.0);
					else
						set_state(PART:"check", "default", 0.0);
				}
			}
		}
	}


////////////////////////////////////////////////////////////////////////////////////////
//
// check onoff-divided style
//
///////////////////////////////////////////////////////////////////////////////////////
	group {
		name: "elm/check/base/onoff-divided";

		images {
			image: "01_button_on_lighting.png" COMP;
			image: "01_on_off_button.png" COMP;
			image: "01_on_off_button_on.png" COMP;
		}

		parts {
			part {
				name: "back_bg";
				mouse_events: 0;
				scale: 1;
				description {
					state: "default" 0.0;
					rel1 { relative: 0.0 0.0; offset: 1 1; }
					rel2 { relative: 0.0 1.0; offset: 1 -2; }
					align: 0 0.5;
					min: 93 92;
					fixed: 1 1;
					aspect: 1.0 1.0;
					aspect_preference: VERTICAL;
					image {
						normal: "01_button_on_lighting.png";
						border: 0 0 0 0;
						middle: 1;
					}
					fill.smooth : 0;
				}
			}
			part {
				name: "check";
				mouse_events: 0;
				scale: 1;
				description {
					state: "default" 0.0;
					rel1 { relative: 0 0; offset: 1 1; to: "back_bg"; }
					rel2 { relative: 1 1; offset: 1 -2; to: "back_bg"; }
					align: 0.5 0.5;
					min: 50 50;
					max: 50 50;
					aspect: 1.0 1.0;
					aspect_preference: VERTICAL;
					image.normal: "01_on_off_button.png";
				}
				description { state: "visible" 0.0;
					inherit: "default" 0.0;
					image.normal: "01_on_off_button_on.png";
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					visible: 0;
					color: 128 128 128 128;
				}
				description { state: "disabled_visible" 0.0;
					inherit: "default" 0.0;
					color: 128 128 128 128;
					visible: 1;
				}
			}
			part {
				name: "elm.swallow.content";
				type: SWALLOW;
				description {
					state: "default" 0.0;
					fixed: 1 0;
					visible: 0;
					color: 255 255 255 255;
					align: 0.0 0.5;
					rel1 { relative: 1.0 0.0; offset: 1 1; to_x: "check"; }
					rel2 { relative: 1.0 1.0; offset: 2 -2; to_x: "check"; }
				}
				description {
					state: "visible" 0.0;
					inherit: "default" 0.0;
					fixed: 1 1;
					visible: 1;
					aspect: 1.0 1.0;
					aspect_preference: VERTICAL;
				}
				description {
					state: "disabled" 0.0;
					inherit: "default" 0.0;
					color: 128 128 128 128;
				}
				description {
					state: "disabled_visible" 0.0;
					inherit: "default" 0.0;
					color: 128 128 128 128;
					fixed: 1 1;
					visible: 1;
					aspect: 1.0 1.0;
				}
			}
			part {
				name: "elm.text";
				type: TEXTBLOCK;
				mouse_events: 0;
				scale: 1;
				description {
					state: "default" 0.0;
					visible: 0;
					fixed: 0 1;
					rel1 { relative: 1.0 0.5; offset: 1 1; to_x: "elm.swallow.content"; }
					rel2 { relative: 1.0 0.5; offset: -2 -2; }
					color: 255 255 255 255;
					align: 0.0 0.5;
					text {
						style: "check_label_textblock_style";
						min: 0 0;
					}
				}
				description {
					state: "visible" 0.0;
					inherit: "default" 0.0;
					text.min: 1 1;
					visible: 1;
				}
				description {
					state: "disabled" 0.0;
					inherit: "default" 0.0;
					color: 0 0 0 128;
					color3: 0 0 0 0;
				}
				description {
					state: "disabled_visible" 0.0;
					inherit: "default" 0.0;
					color: 0 0 0 128;
					color3: 0 0 0 0;
					visible: 1;
					text.min: 1 1;
				}
			}
			part {
				name: "events";
				type: RECT;
				ignore_flags: ON_HOLD;
				description {
					state: "default" 0.0;
					rel1 { to: "back_bg"; }
					rel2 { to: "back_bg"; }
					color: 0 0 0 0;
				}
			}
			part {
				name: "disabler";
				type: RECT;
				description {
					state: "default" 0.0;
					color: 0 0 0 0;
					visible: 0;
				}
				description {
					state: "disabled" 0.0;
				inherit: "default" 0.0;
				visible: 1;
				}
			}
		}
		programs {
			program {
				name: "click";
				signal: "mouse,up,1";
				source: "events";
				action: SIGNAL_EMIT "elm,action,check,toggle" "";
			}
			program {
				name: "check_on";
				signal: "elm,state,check,on";
				source: "elm";
				action: STATE_SET "visible" 0.0;
				target: "check";
			}
			program {
				name: "check_off";
				signal: "elm,state,check,off";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "check";
			}
			program {
				name: "text_show";
				signal: "elm,state,text,visible";
				source: "elm";
				action: STATE_SET "visible" 0.0;
				target: "elm.text";
			}
			program {
				name: "text_hide";
				signal: "elm,state,text,hidden";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "elm.text";
			}
			program {
				name: "icon_show";
				signal: "elm,state,icon,visible";
				source: "elm";
				action: STATE_SET "visible" 0.0;
				target: "elm.swallow.content";
			}
			program {
				name: "icon_hide";
				signal: "elm,state,icon,hidden";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "elm.swallow.content";
			}
			program {
				name: "disable";
				signal: "elm,state,disabled";
				source: "elm";
				action: STATE_SET "disabled" 0.0;
				target: "disabler";
				after: "disable_text";
			}
			program {
				name: "disable_text";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "visible"))
						set_state(PART:"elm.text", "disabled_visible", 0.0);
					else
						set_state(PART:"elm.text", "disabled", 0.0);

					get_state(PART:"elm.swallow.content", st, 30, vl);
					if (!strcmp(st, "visible"))
						set_state(PART:"elm.swallow.content", "disabled_visible", 0.0);
					else
						set_state(PART:"elm.swallow.content", "disabled", 0.0);

					get_state(PART:"check", st, 30, vl);
					if (!strcmp(st, "visible"))
						set_state(PART:"check", "disabled_visible", 0.0);
					else
						set_state(PART:"check", "disabled", 0.0);
				}
			}
			program {
				name: "enable";
				signal: "elm,state,enabled";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "disabler";
				after: "enable_text";
			}
			program {
				name: "enable_text";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "disabled_visible"))
						set_state(PART:"elm.text", "visible", 0.0);
					else
						set_state(PART:"elm.text", "default", 0.0);

					get_state(PART:"elm.swallow.content", st, 30, vl);
					if (!strcmp(st, "visible"))
						set_state(PART:"elm.swallow.content", "visible", 0.0);
					else
						set_state(PART:"elm.swallow.content", "default", 0.0);

					get_state(PART:"check", st, 30, vl);
					if (!strcmp(st, "visible"))
						set_state(PART:"check", "visible", 0.0);
					else
						set_state(PART:"check", "default", 0.0);
				}
			}
		}
	}

////////////////////////////////////////////////////////////////////////////////////////
//
// check favorite style
//
///////////////////////////////////////////////////////////////////////////////////////
/*
	group {
		name: "elm/check/base/favorite";

		images {
			image: "01_rate_icon_default.png" COMP;
			image: "01_rate_small_fill.png" COMP;
		}

		parts {
			part {
				name: "back_bg";
				mouse_events: 0;
				type: RECT;
				scale: 1;
				description {
					state: "default" 0.0;
					rel1 { relative: 0.0 0.0; offset: 1 1; }
					rel2 { relative: 0.0 1.0; offset: 1 -2; }
					align: 0 0.5;
					min: 93 92;
					fixed: 1 1;
					aspect: 1.0 1.0;
					aspect_preference: VERTICAL;
					color: 0 0 0 0;
				}
			}
			part {
				name: "check";
				mouse_events: 0;
				scale: 1;
				description {
					state: "default" 0.0;
					rel1 { relative: 0 0; offset: 1 1; to: "back_bg"; }
					rel2 { relative: 1 1; offset: 1 -2; to: "back_bg"; }
					align: 0.5 0.5;
					min: 50 50;
					max: 50 50;
					aspect: 1.0 1.0;
					aspect_preference: VERTICAL;
					image.normal: "01_rate_icon_default.png";
				}
				description {
					state: "visible" 0.0;
					inherit: "default" 0.0;
					image.normal: "01_rate_small_fill.png";
					visible: 1;
				}
				description {
					state: "disabled" 0.0;
					inherit: "default" 0.0;
					visible: 0;
					color: 128 128 128 128;
				}
				description {
					state: "disabled_visible" 0.0;
					inherit: "default" 0.0;
					color: 128 128 128 128;
					visible: 1;
				}
			}
			part {
				name: "elm.swallow.content";
				type: SWALLOW;
				description {
					state: "default" 0.0;
					fixed: 1 0;
					visible: 0;
					color: 255 255 255 255;
					align: 0.0 0.5;
					rel1 { relative: 1.0 0.0; offset: 1 1; to_x: "check"; }
					rel2 { relative: 1.0 1.0; offset: 2 -2; to_x: "check"; }
				}
				description {
					state: "visible" 0.0;
					inherit: "default" 0.0;
					fixed: 1 1;
					visible: 1;
					aspect: 1.0 1.0;
					aspect_preference: VERTICAL;
				}
				description {
					state: "disabled" 0.0;
					inherit: "default" 0.0;
					color: 128 128 128 128;
				}
				description {
					state: "disabled_visible" 0.0;
					inherit: "default" 0.0;
					color: 128 128 128 128;
					fixed: 1 1;
					visible: 1;
					aspect: 1.0 1.0;
				}
			}
			part {
				name: "elm.text";
				type: TEXTBLOCK;
				mouse_events: 0;
				scale: 1;
				description {
					state: "default" 0.0;
					visible: 0;
					fixed: 0 1;
					rel1 { relative: 1.0 0.5; offset: 1 1; to_x: "elm.swallow.content"; }
					rel2 { relative: 1.0 0.5; offset: -2 -2; }
					color: 255 255 255 255;
					align: 0.0 0.5;
					text {
						style: "check_label_textblock_style";
						min: 0 0;
					}
				}
				description {
					state: "visible" 0.0;
					inherit: "default" 0.0;
					text.min: 1 1;
					visible: 1;
				}
				description {
					state: "disabled" 0.0;
					inherit: "default" 0.0;
					color: 0 0 0 128;
					color3: 0 0 0 0;
				}
				description {
					state: "disabled_visible" 0.0;
					inherit: "default" 0.0;
					color: 0 0 0 128;
					color3: 0 0 0 0;
					visible: 1;
					text.min: 1 1;
				}
			}
			part {
				name: "events";
				type: RECT;
				ignore_flags: ON_HOLD;
				description {
					state: "default" 0.0;
					rel1 { to: "back_bg"; }
					rel2 { to: "back_bg"; }
					color: 0 0 0 0;
				}
			}
			part {
				name: "disabler";
				type: RECT;
				description {
					state: "default" 0.0;
					color: 0 0 0 0;
					visible: 0;
				}
				description {
					state: "disabled" 0.0;
				inherit: "default" 0.0;
				visible: 1;
				}
			}
		}
		programs {
			program {
				name: "click";
				signal: "mouse,up,1";
				source: "events";
				action: SIGNAL_EMIT "elm,action,check,toggle" "";
			}
			program {
				name: "check_on";
				signal: "elm,state,check,on";
				source: "elm";
				action: STATE_SET "visible" 0.0;
				target: "check";
			}
			program {
				name: "check_off";
				signal: "elm,state,check,off";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "check";
			}
			program {
				name: "text_show";
				signal: "elm,state,text,visible";
				source: "elm";
				action: STATE_SET "visible" 0.0;
				target: "elm.text";
			}
			program {
				name: "text_hide";
				signal: "elm,state,text,hidden";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "elm.text";
			}
			program {
				name: "icon_show";
				signal: "elm,state,icon,visible";
				source: "elm";
				action: STATE_SET "visible" 0.0;
				target: "elm.swallow.content";
			}
			program {
				name: "icon_hide";
				signal: "elm,state,icon,hidden";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "elm.swallow.content";
			}
			program {
				name: "disable";
				signal: "elm,state,disabled";
				source: "elm";
				action: STATE_SET "disabled" 0.0;
				target: "disabler";
				after: "disable_text";
			}
			program {
				name: "disable_text";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "visible"))
						set_state(PART:"elm.text", "disabled_visible", 0.0);
					else
						set_state(PART:"elm.text", "disabled", 0.0);

					get_state(PART:"elm.swallow.content", st, 30, vl);
					if (!strcmp(st, "visible"))
						set_state(PART:"elm.swallow.content", "disabled_visible", 0.0);
					else
						set_state(PART:"elm.swallow.content", "disabled", 0.0);

					get_state(PART:"check", st, 30, vl);
					if (!strcmp(st, "visible"))
						set_state(PART:"check", "disabled_visible", 0.0);
					else
						set_state(PART:"check", "disabled", 0.0);
				}
			}
			program {
				name: "enable";
				signal: "elm,state,enabled";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "disabler";
				after: "enable_text";
			}
			program {
				name: "enable_text";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "disabled_visible"))
						set_state(PART:"elm.text", "visible", 0.0);
					else
						set_state(PART:"elm.text", "default", 0.0);

					get_state(PART:"elm.swallow.content", st, 30, vl);
					if (!strcmp(st, "visible"))
						set_state(PART:"elm.swallow.content", "visible", 0.0);
					else
						set_state(PART:"elm.swallow.content", "default", 0.0);

					get_state(PART:"check", st, 30, vl);
					if (!strcmp(st, "visible"))
						set_state(PART:"check", "visible", 0.0);
					else
						set_state(PART:"check", "default", 0.0);
				}
			}
		}
	}
*/
////////////////////////////////////////////////////////////////////////////////////////
//
// check favorite-divided style
//
///////////////////////////////////////////////////////////////////////////////////////
	group {
		name: "elm/check/base/favorite-divided";

		images {
			image: "01_button_on_lighting.png" COMP;
			image: "01_rate_icon_default.png" COMP;
			image: "01_rate_small_fill.png" COMP;
		}

		parts {
			part {
				name: "back_bg";
				mouse_events: 0;
				scale: 1;
				description {
					state: "default" 0.0;
					rel1 { relative: 0.0 0.0; offset: 1 1; }
					rel2 { relative: 0.0 1.0; offset: 1 -2; }
					align: 0 0.5;
					min: 93 92;
					fixed: 1 1;
					aspect: 1.0 1.0;
					aspect_preference: VERTICAL;
					image {
						normal: "01_button_on_lighting.png";
						border: 0 0 0 0;
						middle: 1;
					}
					fill.smooth : 0;
				}
			}
			part {
				name: "check";
				mouse_events: 0;
				scale: 1;
				description {
					state: "default" 0.0;
					rel1 { relative: 0 0; offset: 1 1; to: "back_bg"; }
					rel2 { relative: 1 1; offset: 1 -2; to: "back_bg"; }
					align: 0.5 0.5;
					min: 50 50;
					max: 50 50;
					aspect: 1.0 1.0;
					aspect_preference: VERTICAL;
					image.normal: "01_rate_icon_default.png";
				}
				description { state: "visible" 0.0;
					inherit: "default" 0.0;
					image.normal: "01_rate_small_fill.png";
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					visible: 0;
					color: 128 128 128 128;
				}
				description { state: "disabled_visible" 0.0;
					inherit: "default" 0.0;
					color: 128 128 128 128;
					visible: 1;
				}
			}
			part {
				name: "elm.swallow.content";
				type: SWALLOW;
				description {
					state: "default" 0.0;
					fixed: 1 0;
					visible: 0;
					color: 255 255 255 255;
					align: 0.0 0.5;
					rel1 { relative: 1.0 0.0; offset: 1 1; to_x: "check"; }
					rel2 { relative: 1.0 1.0; offset: 2 -2; to_x: "check"; }
				}
				description {
					state: "visible" 0.0;
					inherit: "default" 0.0;
					fixed: 1 1;
					visible: 1;
					aspect: 1.0 1.0;
					aspect_preference: VERTICAL;
				}
				description {
					state: "disabled" 0.0;
					inherit: "default" 0.0;
					color: 128 128 128 128;
				}
				description {
					state: "disabled_visible" 0.0;
					inherit: "default" 0.0;
					color: 128 128 128 128;
					fixed: 1 1;
					visible: 1;
					aspect: 1.0 1.0;
				}
			}
			part {
				name: "elm.text";
				type: TEXTBLOCK;
				mouse_events: 0;
				scale: 1;
				description {
					state: "default" 0.0;
					visible: 0;
					fixed: 0 1;
					rel1 { relative: 1.0 0.5; offset: 1 1; to_x: "elm.swallow.content"; }
					rel2 { relative: 1.0 0.5; offset: -2 -2; }
					color: 255 255 255 255;
					align: 0.0 0.5;
					text {
						style: "check_label_textblock_style";
						min: 0 0;
					}
				}
				description {
					state: "visible" 0.0;
					inherit: "default" 0.0;
					text.min: 1 1;
					visible: 1;
				}
				description {
					state: "disabled" 0.0;
					inherit: "default" 0.0;
					color: 0 0 0 128;
					color3: 0 0 0 0;
				}
				description {
					state: "disabled_visible" 0.0;
					inherit: "default" 0.0;
					color: 0 0 0 128;
					color3: 0 0 0 0;
					visible: 1;
					text.min: 1 1;
				}
			}
			part {
				name: "events";
				type: RECT;
				ignore_flags: ON_HOLD;
				description {
					state: "default" 0.0;
					rel1 { to: "back_bg"; }
					rel2 { to: "back_bg"; }
					color: 0 0 0 0;
				}
			}
			part {
				name: "disabler";
				type: RECT;
				description {
					state: "default" 0.0;
					color: 0 0 0 0;
					visible: 0;
				}
				description {
					state: "disabled" 0.0;
				inherit: "default" 0.0;
				visible: 1;
				}
			}
		}
		programs {
			program {
				name: "click";
				signal: "mouse,up,1";
				source: "events";
				action: SIGNAL_EMIT "elm,action,check,toggle" "";
			}
			program {
				name: "check_on";
				signal: "elm,state,check,on";
				source: "elm";
				action: STATE_SET "visible" 0.0;
				target: "check";
			}
			program {
				name: "check_off";
				signal: "elm,state,check,off";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "check";
			}
			program {
				name: "text_show";
				signal: "elm,state,text,visible";
				source: "elm";
				action: STATE_SET "visible" 0.0;
				target: "elm.text";
			}
			program {
				name: "text_hide";
				signal: "elm,state,text,hidden";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "elm.text";
			}
			program {
				name: "icon_show";
				signal: "elm,state,icon,visible";
				source: "elm";
				action: STATE_SET "visible" 0.0;
				target: "elm.swallow.content";
			}
			program {
				name: "icon_hide";
				signal: "elm,state,icon,hidden";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "elm.swallow.content";
			}
			program {
				name: "disable";
				signal: "elm,state,disabled";
				source: "elm";
				action: STATE_SET "disabled" 0.0;
				target: "disabler";
				after: "disable_text";
			}
			program {
				name: "disable_text";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "visible"))
						set_state(PART:"elm.text", "disabled_visible", 0.0);
					else
						set_state(PART:"elm.text", "disabled", 0.0);

					get_state(PART:"elm.swallow.content", st, 30, vl);
					if (!strcmp(st, "visible"))
						set_state(PART:"elm.swallow.content", "disabled_visible", 0.0);
					else
						set_state(PART:"elm.swallow.content", "disabled", 0.0);

					get_state(PART:"check", st, 30, vl);
					if (!strcmp(st, "visible"))
						set_state(PART:"check", "disabled_visible", 0.0);
					else
						set_state(PART:"check", "disabled", 0.0);
				}
			}
			program {
				name: "enable";
				signal: "elm,state,enabled";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "disabler";
				after: "enable_text";
			}
			program {
				name: "enable_text";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "disabled_visible"))
						set_state(PART:"elm.text", "visible", 0.0);
					else
						set_state(PART:"elm.text", "default", 0.0);

					get_state(PART:"elm.swallow.content", st, 30, vl);
					if (!strcmp(st, "visible"))
						set_state(PART:"elm.swallow.content", "visible", 0.0);
					else
						set_state(PART:"elm.swallow.content", "default", 0.0);

					get_state(PART:"check", st, 30, vl);
					if (!strcmp(st, "visible"))
						set_state(PART:"check", "visible", 0.0);
					else
						set_state(PART:"check", "default", 0.0);
				}
			}
		}
	}
	group{
		name:"elm/fileindexer/base";
		parts{
			part{
				name: "base";
				type: RECT;
				scale: 1;

				description{
					state: "default" 0.0;
					rel1{
						relative: 0.0 0.0;
					}
					rel2{
						relative: 1.0 1.0;
					}
					align: 0.0 0.0;
					color: 0 0 0 0;
				}
			}
		}
	}
///////////////////////////////////////////////////////////////////////////////
	group { name: "elm/cabinet/base/default";
		parts {
			part {
				name: "elm.rect";
				type: RECT;
				repeat_events: 1;
				description {
					state: "default" 0.0;
					color: 0 0 0 0;
				}
			}
		}
	}

	group { name: "elm/cabinet/item/base/default";
		images {
			image: "cross_mark_black.png" COMP;
			image: "cross_mark_black_pressed.png" COMP;
		}
		parts {
			part { name: "shadow";
				type: RECT;
				description {
					state: "default" 0.0;
					color: 120 120 120 100;
					rel1.offset: 0 -3;
				}
			}
			part { name: "elm.bg";
				type: RECT;
				mouse_events: 1;
				ignore_flags: ON_HOLD;
				description {
					state: "default" 0.0;
					color: 243 238 219 255;
				}
			}

			part { name: "elm.pad.l";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description {
					state: "default" 0.0;
					min: 20 0;
					fixed: 1 0;
					rel2.relative: 0.0 1.0;
					align: 0.0 0.5;
					visible: 0;
				}
			}

			part { name: "elm.label";
				type: TEXT;
				mouse_events: 0;
				scale: 1;
				description {
					state: "default" 0.0;
					rel1 {
						relative: 1.0 0.0;
						to_x: "elm.pad.l";
					}
					rel2 {
						relative: 0.0 1.0;
						to_x: "elm.info_label";
					}

					text {
						font: "SLP:style=Bold";
						size: 32;
						align: 0.0 0.5;
						min: 0 1;
					}
					color: 0 0 0 255;
				}
			}

			part { name: "elm.info_label";
				type: TEXT;
				mouse_events: 0;
				scale: 1;
				description {
					state: "default" 0.0;
					rel1.to_x: "elm.pad.c";
					rel2 {
						relative: 0.0 1.0;
						to_x: "elm.pad.c";
					}

					text {
						font: "SLP:style=Bold";
						size: 26;
						align: 1.0 0.5;
						min: 1 1;
					}
					color: 209 74 0 255;
					align: 1.0 0.0;
				}
				description {
					state: "disabled" 0.0;
					inherit: "default" 0.0;
					visible: 0;
				}
			}

			part { name: "elm.pad.c";
				type: RECT;
				mouse_events: 0;
				scale: 1;
				description {
					state: "default" 0.0;
					min: 15 0;
					fixed: 1 0;
					rel1.to_x: "elm.img.btn";
					rel2.to_x: "elm.img.btn";
					rel2.relative: 0.0 1.0;
					align: 1.0 0.5;
					visible: 0;
				}
			}

			part { name: "elm.img.btn";
				scale: 1;
            			ignore_flags: ON_HOLD;
				description {
					state: "default" 0.0;
					min: 65 0;
					fixed: 1 0;
					rel1.relative: 1.0 0.0;
					align: 1.0 0.5;
					image.normal: "cross_mark_black.png";
				}
				description { state: "pressed" 0.0;
					inherit: "default" 0.0;
					image.normal: "cross_mark_black_pressed.png";
				}
				description {
					state: "disabled" 0.0;
					inherit: "default" 0.0;
					visible: 0;
				}
			}

			part { name: "btn_over";
				type: RECT;
				repeat_events: 1;
				description {
					state: "default" 0.0;
					rel1.to: "elm.img.btn";
					rel2.to: "elm.img.btn";
					color: 0 0 0 0;
				}
				description {
					state: "disabled" 0.0;
					inherit: "default" 0.0;
					visible: 0;
				}
			}

			part { name: "elm.border.bottom";
				type: RECT;
				scale: 1;
				description {
					state: "default" 0.0;
					rel1 {
						relative: 0.0 1.0;
						offset: 0 -1;
					}
					align: 0.0 0.5;
					color: 188 184 168 255;
				}
			}

			part { name: "elm.border.middle";
				type: RECT;
				scale: 1;
				description {
					state: "default" 0.0;
					rel1.to: "elm.img.btn";
					rel2 {
						relative: 0.0 1.0;
						to: "elm.img.btn";
						offset: 0 -1;
					}
					align: 0.0 0.5;
					color: 188 184 168 255;
				}
				description {
					state: "disabled" 0.0;
					inherit: "default" 0.0;
					visible: 0;
				}
			}
		}
		programs {
			program {
				name: "btn_clicked";
				signal: "mouse,clicked,1";
				source: "elm.img.btn";
               			action: SIGNAL_EMIT "elm,action,del" "";
			}
			program {
				name: "btn_pressed";
	    			signal: "mouse,down,1";
	    			source: "btn_over";
				action: STATE_SET "pressed" 0.0;
				target: "elm.img.btn";
			}
			program {
				name: "btn_released";
	    			signal: "mouse,up,1";
	    			source: "btn_over";
				action: STATE_SET "default" 0.0;
				target: "elm.img.btn";
			}

			program {
				name: "item_clicked";
				signal: "mouse,clicked,1";
				source: "elm.bg";
               			action: SIGNAL_EMIT "elm,action,clicked" "";
			}

			program {
				name: "btn_disable";
				signal: "btn_disable";
				source: "elm";
				action: STATE_SET "disabled" 0.0;
				target: "elm.img.btn";
				target: "elm.border.middle";
				target: "btn_over";
			}

			program {
				name: "btn_enable";
				signal: "btn_enable";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "elm.img.btn";
				target: "elm.border.middle";
				target: "btn_over";
			}

			program {
				name: "info_lbl_hide";
				signal: "info_disable";
				source: "elm";
				action: STATE_SET "disabled" 0.0;
				target: "elm.info_label";
			}

			program {
				name: "info_lbl_show";
				signal: "info_enable";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "elm.info_label";
			}
		}
	}

}

