/*
 * Copyright (c) 2010 Samsung Electronics Co., Ltd All Rights Reserved 
 *
 * PROPRIETARY/CONFIDENTIAL
 *
 * This software is the confidential and proprietary information of SAMSUNG
 * ELECTRONICS ("Confidential Information"). You agree and acknowledge that this
 * software is owned by Samsung and you shall not disclose such Confidential
 * Information and shall use it only in accordance with the terms of the license
 * agreement you entered into with SAMSUNG ELECTRONICS. SAMSUNG make no
 * representations or warranties about the suitability of the software, either
 * express or implied, including but not limited to the implied warranties of
 * merchantability, fitness for a particular purpose, or non-infringement.
 * SAMSUNG shall not be liable for any damages suffered by licensee arising out
 * of or releated to this software.
 *
 */

#define DAYSELECTOR_TOTAL_WIDTH (DAYSELECTOR_CHECK_WIDTH_INC*7)
group {
   name: "elm/dayselector/base/default";
   alias: "elm/dayselector/base/sun_first";
       min: ((DAYSELECTOR_CHECK_WIDTH_INC*7)+6) DAYSELECTOR_CHECK_HEIGHT_INC;
       parts {
          part {
             name: "bg";
             type: RECT;
             mouse_events: 0;
             scale: 1;
             description {
                rel1 { relative: 0.0 0.0; offset: 4 0; }
                rel2 { relative: 1.0 1.0; offset: -4 0; }
                color: DAYSELECTOR_BACKGROUND_COLOR_INC;
              }
          }
      part {
         name: "sun";
         type: SWALLOW;
         mouse_events: 1;
         scale: 1;
         description {
            rel2 { relative: ((DAYSELECTOR_CHECK_WIDTH_INC*1)/DAYSELECTOR_TOTAL_WIDTH) 1;}
         }
      }
      part {
         name: "mon";
         type: SWALLOW;
         mouse_events: 1;
         scale: 1;
         description {
            rel1 { to: "sun";  relative: 1 0; offset: 1 0; }
            rel2 { relative: ((DAYSELECTOR_CHECK_WIDTH_INC*2)/DAYSELECTOR_TOTAL_WIDTH) 1;}
         }
      }
      part {
         name: "tue";
         type: SWALLOW;
         mouse_events: 1;
         scale: 1;
         description {
            rel1 { to: "mon"; relative: 1 0; offset: 1 0; }
            rel2 { relative: ((DAYSELECTOR_CHECK_WIDTH_INC*3)/DAYSELECTOR_TOTAL_WIDTH) 1;}
         }
      }
      part {
         name: "wed";
         type: SWALLOW;
         mouse_events: 1;
         scale: 1;
         description {
            rel1 { to: "tue"; relative: 1 0; offset: 1 0; }
            rel2 { relative: ((DAYSELECTOR_CHECK_WIDTH_INC*4)/DAYSELECTOR_TOTAL_WIDTH) 1;}
         }
      }
      part {
         name: "thu";
         type: SWALLOW;
         mouse_events: 1;
         scale: 1;
         description {
            rel1 { to: "wed"; relative: 1 0; offset: 1 0; }
            rel2 { relative: ((DAYSELECTOR_CHECK_WIDTH_INC*5)/DAYSELECTOR_TOTAL_WIDTH) 1;}
         }
      }
      part {
         name: "fri";
         type: SWALLOW;
         mouse_events: 1;
         scale: 1;
         description {
            rel1 { to: "thu"; relative: 1 0; offset: 1 0; }
            rel2 { relative: ((DAYSELECTOR_CHECK_WIDTH_INC*6)/DAYSELECTOR_TOTAL_WIDTH) 1;}
         }
      }
      part {
         name: "sat";
         type: SWALLOW;
         mouse_events: 1;
         scale: 1;
         description {
            rel1 { to: "fri"; relative: 1 0; offset: 1 0; }
         }
      }
   }
}
group {
   name: "elm/dayselector/base/mon_first";
   min: (DAYSELECTOR_CHECK_WIDTH_INC*7) DAYSELECTOR_CHECK_HEIGHT_INC;
       parts {
         part {
            name: "bg";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            description {
               rel1 { relative: 0.0 0.0; offset: 4 0; }
               rel2 { relative: 1.0 1.0; offset: -4 0; }
               color: DAYSELECTOR_BACKGROUND_COLOR_INC;
            }
        }
      part {
         name: "mon";
         type: SWALLOW;
         mouse_events: 1;
         scale: 1;
         description {
            rel2 { relative: ((DAYSELECTOR_CHECK_WIDTH_INC*1)/DAYSELECTOR_TOTAL_WIDTH) 1;}
         }
      }
      part {
         name: "tue";
         type: SWALLOW;
         mouse_events: 1;
         scale: 1;
         description {
            rel1 { to: "mon";  relative: 1 0; offset: 1 0; }
            rel2 { relative: ((DAYSELECTOR_CHECK_WIDTH_INC*2)/DAYSELECTOR_TOTAL_WIDTH) 1;}
         }
      }
      part {
         name: "wed";
         type: SWALLOW;
         mouse_events: 1;
         scale: 1;
         description {
            rel1 { to: "tue"; relative: 1 0; offset: 1 0; }
            rel2 { relative: ((DAYSELECTOR_CHECK_WIDTH_INC*3)/DAYSELECTOR_TOTAL_WIDTH) 1;}
         }
      }
      part {
         name: "thu";
         type: SWALLOW;
         mouse_events: 1;
         scale: 1;
         description {
            rel1 { to: "wed"; relative: 1 0; offset: 1 0; }
            rel2 { relative: ((DAYSELECTOR_CHECK_WIDTH_INC*4)/DAYSELECTOR_TOTAL_WIDTH) 1;}
         }
      }
      part {
         name: "fri";
         type: SWALLOW;
         mouse_events: 1;
         scale: 1;
         description {
            rel1 { to: "thu"; relative: 1 0; offset: 1 0; }
            rel2 { relative: ((DAYSELECTOR_CHECK_WIDTH_INC*5)/DAYSELECTOR_TOTAL_WIDTH) 1;}
         }
      }
      part {
         name: "sat";
         type: SWALLOW;
         mouse_events: 1;
         scale: 1;
         description {
            rel1 { to: "fri"; relative: 1 0; offset: 1 0; }
            rel2 { relative: ((DAYSELECTOR_CHECK_WIDTH_INC*6)/DAYSELECTOR_TOTAL_WIDTH) 1;}
         }
      }
      part {
         name: "sun";
         type: SWALLOW;
         mouse_events: 1;
         scale: 1;
         description {
            rel1 { to: "sat"; relative: 1 0; offset: 1 0; }
         }
      }
   }
}
group {
   name: "elm/check/base/dayselector/sun_first_sun";
   alias: "elm/check/base/dayselector/default_sun";
   images {
      image: "00_alarm_repeat_button_normal_01.png" COMP;
      image: "00_alarm_repeat_button_press_01.png" COMP;
   }
   script {
      public check_is_on = 0;
      public text_show = 1;
      public checkon() {
         set_state(PART:"check", "visible", 0.0);
         if(get_int(text_show) == 1)
           set_state(PART:"elm.text", "checked", 0.0);
         else if(get_int(text_show) == 0)
            set_state(PART:"elm.text", "hide", 0.0);
         set_int(check_is_on, 1);
      }
      public checkoff() {
         set_state(PART:"check", "default", 0.0);
         if(get_int(text_show) == 1)
           set_state(PART:"elm.text", "default", 0.0);
         else if(get_int(text_show) == 0)
            set_state(PART:"elm.text", "hide", 0.0);
         set_int(check_is_on, 0);
      }
      public show_check_text() {
         if(get_int(check_is_on) == 1)
            set_state(PART:"elm.text", "checked", 0.0);
         else if(get_int(check_is_on) == 0)
            set_state(PART:"elm.text", "default", 0.0);
         set_int(text_show, 1);
      }
      public hide_check_text() {
         set_state(PART:"elm.text", "hide", 0.0);
         set_int(text_show, 0);
      }
   }
   parts {
      part {
         name: "bg";
         mouse_events: 0;
         scale: 1;
         description {
            state: "default" 0.0;
            align: 0.5 0.5;
            image {
               normal: "00_alarm_repeat_button_normal_01.png";
               border: 4 0 4 4;
               border_scale: 1;
            }
         }
      }
      part {
         name: "check";
         mouse_events: 0;
         scale: 1;
         description {
            state: "default" 0.0;
            rel1 {to: "bg";}
            rel2 {to: "bg";}
            visible: 0;
            image {
               normal: "00_alarm_repeat_button_press_01.png";
               border: 4 0 4 4;
               border_scale: 1;
            }
         }
         description {
            state: "visible" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
      }
      part {
         name: "elm.swallow.content";
         type: SWALLOW;
         description {
            state: "default" 0.0;
            fixed: 1 0;
            visible: 0;
            align: 0.0 0.5;
            rel1.to_x: "bg";
            rel1.relative: 1.0 0.0;
            rel2.to_x: "bg";
         }
         description {
            state: "visible" 0.0;
            inherit: "default" 0.0;
            fixed: 1 1;
            visible: 1;
            aspect: 1.0 1.0;
            aspect_preference: VERTICAL;
         }
      }
      part {
         name: "elm.text";
         type: TEXT;
         mouse_events: 0;
         scale: 1;
         effect: SHADOW;
         description {
            state: "default" 0.0;
            visible: 1;
            rel1 {to: "bg";}
            rel2 {to: "bg";}
            color: DAYSELECTOR_SUNDAY_COLOR_INC;
            align: 0.5 0.5;
            text {
               font: "SLP:style=Medium";
               size: DAYSELECTOR_DAY_FONT_SIZE_INC;
               min: 1 1;
               align: 0.5 0.5;
            }
         }
         description {
            state: "hide" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
         description {
            state: "checked" 0.0;
            inherit: "default" 0.0;
            color: DAYSELECTOR_DAY_PRESSED_COLOR_INC;
         }
      }
      part {
         name: "events";
         type: RECT;
         ignore_flags: ON_HOLD;
         description {
            state: "default" 0.0;
            rel1 {to: "bg";}
            rel2 {to: "bg";}
            color: 0 0 0 0;
         }
      }
   }
   programs {
      program {
         name: "click";
         signal: "mouse,up,1";
         source: "events";
         action: SIGNAL_EMIT "elm,action,check,toggle" "";
      }
      program {
         name: "check_on";
         signal: "elm,state,check,on";
         source: "elm";
         script {
            checkon();
         }
      }
      program {
         name: "check_off";
         signal: "elm,state,check,off";
         source: "elm";
         script {
            checkoff();
         }
      }
      program {
         name: "text_show";
         signal: "elm,state,text,visible";
         source: "elm";
         script {
            show_check_text();
         }
       }
      program {
         name: "text_hide";
         signal: "elm,state,text,hidden";
         source: "elm";
         script {
            hide_check_text();
         }
      }
   }
}
group {
   name: "elm/check/base/dayselector/mon_first_mon";
   images {
      image: "00_alarm_repeat_button_normal_01.png" COMP;
      image: "00_alarm_repeat_button_press_01.png" COMP;
   }
   script {
      public check_is_on = 0;
      public text_show = 1;
      public checkon() {
         set_state(PART:"check", "visible", 0.0);
         if(get_int(text_show) == 1)
           set_state(PART:"elm.text", "checked", 0.0);
         else if(get_int(text_show) == 0)
            set_state(PART:"elm.text", "hide", 0.0);
         set_int(check_is_on, 1);
      }
      public checkoff() {
         set_state(PART:"check", "default", 0.0);
         if(get_int(text_show) == 1)
           set_state(PART:"elm.text", "default", 0.0);
         else if(get_int(text_show) == 0)
            set_state(PART:"elm.text", "hide", 0.0);
         set_int(check_is_on, 0);
      }
      public show_check_text() {
         if(get_int(check_is_on) == 1)
            set_state(PART:"elm.text", "checked", 0.0);
         else if(get_int(check_is_on) == 0)
            set_state(PART:"elm.text", "default", 0.0);
         set_int(text_show, 1);
      }
      public hide_check_text() {
         set_state(PART:"elm.text", "hide", 0.0);
         set_int(text_show, 0);
      }
   }
   parts {
      part {
         name: "bg";
         mouse_events: 0;
         scale: 1;
         description {
            state: "default" 0.0;
            align: 0.5 0.5;
            image {
               normal: "00_alarm_repeat_button_normal_01.png";
               border: 4 0 4 4;
               border_scale: 1;
            }
         }
      }
      part {
         name: "check";
         mouse_events: 0;
         scale: 1;
         description {
            state: "default" 0.0;
            rel1 {to: "bg";}
            rel2 {to: "bg";}
            visible: 0;
            image {
               normal: "00_alarm_repeat_button_press_01.png";
               border: 4 0 4 4;
               border_scale: 1;
            }
         }
         description {
            state: "visible" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
      }
      part {
         name: "elm.swallow.content";
         type: SWALLOW;
         description {
            state: "default" 0.0;
            fixed: 1 0;
            visible: 0;
            align: 0.0 0.5;
            rel1.to_x: "bg";
            rel1.relative: 1.0 0.0;
            rel2.to_x: "bg";
         }
         description {
            state: "visible" 0.0;
            inherit: "default" 0.0;
            fixed: 1 1;
            visible: 1;
            aspect: 1.0 1.0;
            aspect_preference: VERTICAL;
         }
      }
      part {
         name: "elm.text";
         type: TEXT;
         mouse_events: 0;
         scale: 1;
         effect: SHADOW;
         description {
            state: "default" 0.0;
            visible: 1;
            rel1 {to: "bg";}
            rel2 {to: "bg";}
            color: DAYSELECTOR_WEEKDAY_COLOR_INC;
            align: 0.5 0.5;
            text {
               font: "SLP:style=Medium";
               size: DAYSELECTOR_DAY_FONT_SIZE_INC;
               min: 1 1;
               align: 0.5 0.5;
            }
         }
         description {
            state: "hide" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
         description {
            state: "checked" 0.0;
            inherit: "default" 0.0;
            color: DAYSELECTOR_DAY_PRESSED_COLOR_INC;
         }
      }
      part {
         name: "events";
         type: RECT;
         ignore_flags: ON_HOLD;
         description {
            state: "default" 0.0;
            rel1 {to: "bg";}
            rel2 {to: "bg";}
            color: 0 0 0 0;
         }
      }
   }
   programs {
      program {
         name: "click";
         signal: "mouse,up,1";
         source: "events";
         action: SIGNAL_EMIT "elm,action,check,toggle" "";
      }
      program {
         name: "check_on";
         signal: "elm,state,check,on";
         source: "elm";
         script {
            checkon();
         }
      }
      program {
         name: "check_off";
         signal: "elm,state,check,off";
         source: "elm";
         script {
            checkoff();
         }
      }
      program {
         name: "text_show";
         signal: "elm,state,text,visible";
         source: "elm";
         script {
            show_check_text();
         }
       }
      program {
         name: "text_hide";
         signal: "elm,state,text,hidden";
         source: "elm";
         script {
            hide_check_text();
         }
      }
   }
}
group {
   name: "elm/check/base/dayselector/sun_first_mon";
   alias: "elm/check/base/dayselector/sun_first_tue";
   alias: "elm/check/base/dayselector/sun_first_wed";
   alias: "elm/check/base/dayselector/sun_first_thu";
   alias: "elm/check/base/dayselector/sun_first_fri";
   alias: "elm/check/base/dayselector/default_mon";
   alias: "elm/check/base/dayselector/default_tue";
   alias: "elm/check/base/dayselector/default_wed";
   alias: "elm/check/base/dayselector/default_thu";
   alias: "elm/check/base/dayselector/default_fri";
   alias: "elm/check/base/dayselector/mon_first_tue";
   alias: "elm/check/base/dayselector/mon_first_wed";
   alias: "elm/check/base/dayselector/mon_first_thu";
   alias: "elm/check/base/dayselector/mon_first_fri";
   images {
      image: "00_alarm_repeat_button_normal_02.png" COMP;
      image: "00_alarm_repeat_button_press_02.png" COMP;
   }
   script {
      public check_is_on = 0;
      public text_show = 1;
      public checkon() {
         set_state(PART:"check", "visible", 0.0);
         if(get_int(text_show) == 1)
           set_state(PART:"elm.text", "checked", 0.0);
         else if(get_int(text_show) == 0)
            set_state(PART:"elm.text", "hide", 0.0);
         set_int(check_is_on, 1);
      }
      public checkoff() {
         set_state(PART:"check", "default", 0.0);
         if(get_int(text_show) == 1)
           set_state(PART:"elm.text", "default", 0.0);
         else if(get_int(text_show) == 0)
            set_state(PART:"elm.text", "hide", 0.0);
         set_int(check_is_on, 0);
      }
      public show_check_text() {
         if(get_int(check_is_on) == 1)
            set_state(PART:"elm.text", "checked", 0.0);
         else if(get_int(check_is_on) == 0)
            set_state(PART:"elm.text", "default", 0.0);
         set_int(text_show, 1);
      }
      public hide_check_text() {
         set_state(PART:"elm.text", "hide", 0.0);
         set_int(text_show, 0);
      }
   }
   parts {
      part {
         name: "bg";
         mouse_events: 0;
         scale: 1;
         description {
            state: "default" 0.0;
            align: 0.5 0.5;
            image {
               normal: "00_alarm_repeat_button_normal_02.png";
               border: 0 0 4 4;
               border_scale: 1;
            }
         }
      }
      part {
         name: "check";
         mouse_events: 0;
         scale: 1;
         description {
            state: "default" 0.0;
            rel1 {to: "bg";}
            rel2 {to: "bg";}
            visible: 0;
            image {
               normal: "00_alarm_repeat_button_press_02.png";
               border: 0 0 4 4;
               border_scale: 1;
            }
         }
         description {
            state: "visible" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
      }
      part {
         name: "elm.swallow.content";
         type: SWALLOW;
         description {
            state: "default" 0.0;
            fixed: 1 0;
            visible: 0;
            align: 0.0 0.5;
            rel1.to_x: "bg";
            rel1.relative: 1.0 0.0;
            rel2.to_x: "bg";
         }
         description {
            state: "visible" 0.0;
            inherit: "default" 0.0;
            fixed: 1 1;
            visible: 1;
            aspect: 1.0 1.0;
            aspect_preference: VERTICAL;
         }
      }
      part {
         name: "elm.text";
         type: TEXT;
         mouse_events: 0;
         scale: 1;
         effect: SHADOW;
         description {
            state: "default" 0.0;
            visible: 1;
            rel1 {to: "bg";}
            rel2 {to: "bg";}
            color: DAYSELECTOR_WEEKDAY_COLOR_INC;
            align: 0.5 0.5;
            text {
               font: "SLP:style=Medium";
               size: DAYSELECTOR_DAY_FONT_SIZE_INC;
               min: 1 1;
               align: 0.5 0.5;
            }
         }
         description {
            state: "hide" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
         description {
            state: "checked" 0.0;
            inherit: "default" 0.0;
            color: DAYSELECTOR_DAY_PRESSED_COLOR_INC;
         }
      }
      part {
         name: "events";
         type: RECT;
         ignore_flags: ON_HOLD;
         description {
            state: "default" 0.0;
            rel1 {to: "bg";}
            rel2 {to: "bg";}
            color: 0 0 0 0;
         }
      }
   }
   programs {
      program {
         name: "click";
         signal: "mouse,up,1";
         source: "events";
         action: SIGNAL_EMIT "elm,action,check,toggle" "";
      }
      program {
         name: "check_on";
         signal: "elm,state,check,on";
         source: "elm";
         script {
            checkon();
         }
      }
      program {
         name: "check_off";
         signal: "elm,state,check,off";
         source: "elm";
         script {
            checkoff();
         }
      }
      program {
         name: "text_show";
         signal: "elm,state,text,visible";
         source: "elm";
         script {
            show_check_text();
         }
       }
      program {
         name: "text_hide";
         signal: "elm,state,text,hidden";
         source: "elm";
         script {
            hide_check_text();
         }
      }
   }
}

group {
   name: "elm/check/base/dayselector/mon_first_sat";
   images {
      image: "00_alarm_repeat_button_normal_02.png" COMP;
      image: "00_alarm_repeat_button_press_02.png" COMP;
   }
   script {
      public check_is_on = 0;
      public text_show = 1;
      public checkon() {
         set_state(PART:"check", "visible", 0.0);
         if(get_int(text_show) == 1)
           set_state(PART:"elm.text", "checked", 0.0);
         else if(get_int(text_show) == 0)
            set_state(PART:"elm.text", "hide", 0.0);
         set_int(check_is_on, 1);
      }
      public checkoff() {
         set_state(PART:"check", "default", 0.0);
         if(get_int(text_show) == 1)
           set_state(PART:"elm.text", "default", 0.0);
         else if(get_int(text_show) == 0)
            set_state(PART:"elm.text", "hide", 0.0);
         set_int(check_is_on, 0);
      }
      public show_check_text() {
         if(get_int(check_is_on) == 1)
            set_state(PART:"elm.text", "checked", 0.0);
         else if(get_int(check_is_on) == 0)
            set_state(PART:"elm.text", "default", 0.0);
         set_int(text_show, 1);
      }
      public hide_check_text() {
         set_state(PART:"elm.text", "hide", 0.0);
         set_int(text_show, 0);
      }
   }
   parts {
      part {
         name: "bg";
         mouse_events: 0;
         scale: 1;
         description {
            state: "default" 0.0;
            align: 0.5 0.5;
            image {
               normal: "00_alarm_repeat_button_normal_02.png";
               border: 0 0 4 4;
               border_scale: 1;
            }
         }
      }
      part {
         name: "check";
         mouse_events: 0;
         scale: 1;
         description {
            state: "default" 0.0;
            rel1 {to: "bg";}
            rel2 {to: "bg";}
            visible: 0;
            image {
               normal: "00_alarm_repeat_button_press_02.png";
               border: 0 0 4 4;
               border_scale: 1;
            }
         }
         description {
            state: "visible" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
      }
      part {
         name: "elm.swallow.content";
         type: SWALLOW;
         description {
            state: "default" 0.0;
            fixed: 1 0;
            visible: 0;
            align: 0.0 0.5;
            rel1.to_x: "bg";
            rel1.relative: 1.0 0.0;
            rel2.to_x: "bg";
         }
         description {
            state: "visible" 0.0;
            inherit: "default" 0.0;
            fixed: 1 1;
            visible: 1;
            aspect: 1.0 1.0;
            aspect_preference: VERTICAL;
         }
      }
      part {
         name: "elm.text";
         type: TEXT;
         mouse_events: 0;
         scale: 1;
         effect: SHADOW;
         description {
            state: "default" 0.0;
            visible: 1;
            rel1 {to: "bg";}
            rel2 {to: "bg";}
            color: DAYSELECTOR_SATURDAY_COLOR_INC;
            align: 0.5 0.5;
            text {
               font: "SLP:style=Medium";
               size: DAYSELECTOR_DAY_FONT_SIZE_INC;
               min: 1 1;
               align: 0.5 0.5;
            }
         }
         description {
            state: "hide" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
         description {
            state: "checked" 0.0;
            inherit: "default" 0.0;
            color: DAYSELECTOR_DAY_PRESSED_COLOR_INC;
         }
      }
      part {
         name: "events";
         type: RECT;
         ignore_flags: ON_HOLD;
         description {
            state: "default" 0.0;
            rel1 {to: "bg";}
            rel2 {to: "bg";}
            color: 0 0 0 0;
         }
      }
   }
   programs {
      program {
         name: "click";
         signal: "mouse,up,1";
         source: "events";
         action: SIGNAL_EMIT "elm,action,check,toggle" "";
      }
      program {
         name: "check_on";
         signal: "elm,state,check,on";
         source: "elm";
         script {
            checkon();
         }
      }
      program {
         name: "check_off";
         signal: "elm,state,check,off";
         source: "elm";
         script {
            checkoff();
         }
      }
      program {
         name: "text_show";
         signal: "elm,state,text,visible";
         source: "elm";
         script {
            show_check_text();
         }
       }
      program {
         name: "text_hide";
         signal: "elm,state,text,hidden";
         source: "elm";
         script {
            hide_check_text();
         }
      }
   }
}

group {
   name: "elm/check/base/dayselector/sun_first_sat";
   alias: "elm/check/base/dayselector/default_sat";
   images {
      image: "00_alarm_repeat_button_normal_03.png" COMP;
      image: "00_alarm_repeat_button_press_03.png" COMP;
   }
   script {
      public check_is_on = 0;
      public text_show = 1;
      public checkon() {
         set_state(PART:"check", "visible", 0.0);
         if(get_int(text_show) == 1)
           set_state(PART:"elm.text", "checked", 0.0);
         else if(get_int(text_show) == 0)
            set_state(PART:"elm.text", "hide", 0.0);
         set_int(check_is_on, 1);
      }
      public checkoff() {
         set_state(PART:"check", "default", 0.0);
         if(get_int(text_show) == 1)
           set_state(PART:"elm.text", "default", 0.0);
         else if(get_int(text_show) == 0)
            set_state(PART:"elm.text", "hide", 0.0);
         set_int(check_is_on, 0);
      }
      public show_check_text() {
         if(get_int(check_is_on) == 1)
            set_state(PART:"elm.text", "checked", 0.0);
         else if(get_int(check_is_on) == 0)
            set_state(PART:"elm.text", "default", 0.0);
         set_int(text_show, 1);
      }
      public hide_check_text() {
         set_state(PART:"elm.text", "hide", 0.0);
         set_int(text_show, 0);
      }
   }
   parts {
      part {
         name: "bg";
         mouse_events: 0;
         scale: 1;
         description {
            state: "default" 0.0;
            align: 0.5 0.5;
            image {
               normal: "00_alarm_repeat_button_normal_03.png";
               border: 0 4 4 4;
               border_scale: 1;
            }
         }
      }
      part {
         name: "check";
         mouse_events: 0;
         scale: 1;
         description {
            state: "default" 0.0;
            rel1 {to: "bg";}
            rel2 {to: "bg";}
            visible: 0;
            image {
               normal: "00_alarm_repeat_button_press_03.png";
               border: 0 4 4 4;
               border_scale: 1;
            }
         }
         description {
            state: "visible" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
      }
      part {
         name: "elm.swallow.content";
         type: SWALLOW;
         description {
            state: "default" 0.0;
            fixed: 1 0;
            visible: 0;
            align: 0.0 0.5;
            rel1.to_x: "bg";
            rel1.relative: 1.0 0.0;
            rel2.to_x: "bg";
         }
         description {
            state: "visible" 0.0;
            inherit: "default" 0.0;
            fixed: 1 1;
            visible: 1;
            aspect: 1.0 1.0;
            aspect_preference: VERTICAL;
         }
      }
      part {
         name: "elm.text";
         type: TEXT;
         mouse_events: 0;
         scale: 1;
         effect: SHADOW;
         description {
            state: "default" 0.0;
            visible: 1;
            rel1 {to: "bg";}
            rel2 {to: "bg";}
            color: DAYSELECTOR_SATURDAY_COLOR_INC;
            align: 0.5 0.5;
            text {
               font: "SLP:style=Medium";
               size: DAYSELECTOR_DAY_FONT_SIZE_INC;
               min: 1 1;
               align: 0.5 0.5;
            }
         }
         description {
            state: "hide" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
         description {
            state: "checked" 0.0;
            inherit: "default" 0.0;
            color: DAYSELECTOR_DAY_PRESSED_COLOR_INC;
         }
      }
      part {
         name: "events";
         type: RECT;
         ignore_flags: ON_HOLD;
         description {
            state: "default" 0.0;
            rel1 {to: "bg";}
            rel2 {to: "bg";}
            color: 0 0 0 0;
         }
      }
   }
   programs {
      program {
         name: "click";
         signal: "mouse,up,1";
         source: "events";
         action: SIGNAL_EMIT "elm,action,check,toggle" "";
      }
      program {
         name: "check_on";
         signal: "elm,state,check,on";
         source: "elm";
         script {
            checkon();
         }
      }
      program {
         name: "check_off";
         signal: "elm,state,check,off";
         source: "elm";
         script {
            checkoff();
         }
      }
      program {
         name: "text_show";
         signal: "elm,state,text,visible";
         source: "elm";
         script {
            show_check_text();
         }
       }
      program {
         name: "text_hide";
         signal: "elm,state,text,hidden";
         source: "elm";
         script {
            hide_check_text();
         }
      }
   }
}

group {
   name: "elm/check/base/dayselector/mon_first_sun";
   images {
      image: "00_alarm_repeat_button_normal_03.png" COMP;
      image: "00_alarm_repeat_button_press_03.png" COMP;
   }
   script {
      public check_is_on = 0;
      public text_show = 1;
      public checkon() {
         set_state(PART:"check", "visible", 0.0);
         if(get_int(text_show) == 1)
           set_state(PART:"elm.text", "checked", 0.0);
         else if(get_int(text_show) == 0)
            set_state(PART:"elm.text", "hide", 0.0);
         set_int(check_is_on, 1);
      }
      public checkoff() {
         set_state(PART:"check", "default", 0.0);
         if(get_int(text_show) == 1)
           set_state(PART:"elm.text", "default", 0.0);
         else if(get_int(text_show) == 0)
            set_state(PART:"elm.text", "hide", 0.0);
         set_int(check_is_on, 0);
      }
      public show_check_text() {
         if(get_int(check_is_on) == 1)
            set_state(PART:"elm.text", "checked", 0.0);
         else if(get_int(check_is_on) == 0)
            set_state(PART:"elm.text", "default", 0.0);
         set_int(text_show, 1);
      }
      public hide_check_text() {
         set_state(PART:"elm.text", "hide", 0.0);
         set_int(text_show, 0);
      }
   }
   parts {
      part {
         name: "bg";
         mouse_events: 0;
         scale: 1;
         description {
            state: "default" 0.0;
            align: 0.5 0.5;
            image {
               normal: "00_alarm_repeat_button_normal_03.png";
               border: 0 4 4 4;
               border_scale: 1;
            }
         }
      }
      part {
         name: "check";
         mouse_events: 0;
         scale: 1;
         description {
            state: "default" 0.0;
            rel1 {to: "bg";}
            rel2 {to: "bg";}
            visible: 0;
            image {
               normal: "00_alarm_repeat_button_press_03.png";
               border: 0 4 4 4;
               border_scale: 1;
            }
         }
         description {
            state: "visible" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
      }
      part {
         name: "elm.swallow.content";
         type: SWALLOW;
         description {
            state: "default" 0.0;
            fixed: 1 0;
            visible: 0;
            align: 0.0 0.5;
            rel1.to_x: "bg";
            rel1.relative: 1.0 0.0;
            rel2.to_x: "bg";
         }
         description {
            state: "visible" 0.0;
            inherit: "default" 0.0;
            fixed: 1 1;
            visible: 1;
            aspect: 1.0 1.0;
            aspect_preference: VERTICAL;
         }
      }
      part {
         name: "elm.text";
         type: TEXT;
         mouse_events: 0;
         scale: 1;
         effect: SHADOW;
         description {
            state: "default" 0.0;
            visible: 1;
            rel1 {to: "bg";}
            rel2 {to: "bg";}
            color: DAYSELECTOR_SUNDAY_COLOR_INC;
            align: 0.5 0.5;
            text {
               font: "SLP:style=Medium";
               size: DAYSELECTOR_DAY_FONT_SIZE_INC;
               min: 1 1;
               align: 0.5 0.5;
            }
         }
         description {
            state: "hide" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
         description {
            state: "checked" 0.0;
            inherit: "default" 0.0;
            color: DAYSELECTOR_DAY_PRESSED_COLOR_INC;
         }
      }
      part {
         name: "events";
         type: RECT;
         ignore_flags: ON_HOLD;
         description {
            state: "default" 0.0;
            rel1 {to: "bg";}
            rel2 {to: "bg";}
            color: 0 0 0 0;
         }
      }
   }
   programs {
      program {
         name: "click";
         signal: "mouse,up,1";
         source: "events";
         action: SIGNAL_EMIT "elm,action,check,toggle" "";
      }
      program {
         name: "check_on";
         signal: "elm,state,check,on";
         source: "elm";
         script {
            checkon();
         }
      }
      program {
         name: "check_off";
         signal: "elm,state,check,off";
         source: "elm";
         script {
            checkoff();
         }
      }
      program {
         name: "text_show";
         signal: "elm,state,text,visible";
         source: "elm";
         script {
            show_check_text();
         }
       }
      program {
         name: "text_hide";
         signal: "elm,state,text,hidden";
         source: "elm";
         script {
            hide_check_text();
         }
      }
   }
}
