/*
 *  nbeat-theme
 *
 * Copyright (c) 2000 - 2011 Samsung Electronics Co., Ltd. All rights reserved.
 *
 * Contact: Seokjae Jeong <seok.j.jeong@samsung.com>, Myoungwoon Roy Kim <Myoungwoon.kim@samsung.com>, Jeonghyun Yun <jh0506.yun@samsung.com>, Jaehwan Kim <jae.hwan.kim@samsung.com>, Chuneon Park <chuneon.park@samsung.com>, Juyung Seo <juyung.seo@samsung.com>, Woohyun Jung <wh0705.jung@samsung.com>, Myungjae Lee <mjae.lee@samsung.com>, Hyoyoung Chang <hyoyoung.chang@samsung.com>, IlKook Yun <ilkook.yun@samsung.com>, CinWoo Kim <cinoo.kim@samsung.com> JiYeon Park <jy0703.park@samsung.com>
 * 
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the
 * Free Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 * 
 * This library is distributed in the hope that it will be useful, but WITHOUT ANY
 * WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public
 * License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this library; if not, write to the Free Software Foundation, Inc., 51
 * Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
 *
 */
   /*************************************************/
   /* elm_layout -> fundanmental template style       */
   /*************************************************/
   group { name: "elm/layout/application/default";
      parts {
         part { name: "elm.swallow.content";
            type: SWALLOW;
            description {
               state: "default" 0.0;
            }
         }
      }
   }

   /*************************************************/
   /* elm_layout -> integrated style       */
   /*************************************************/
   group { name: "elm/standard/window/integration";
      parts {
         /* for event blocking */
         part { name: "base_event";
            type: RECT;
            repeat_events: 0;
            description { state: "default" 0.0;
               visible: 1;
               color: 0 0 0 0;
            }
            description { state: "block_events" 0.0;
               inherit: "default" 0.0;
            }
            description { state: "repeat_events" 0.0;
               inherit: "default" 0.0;
               visible: 0;
            }
         }
         part { name: "base";
            type: RECT;
            mouse_events: 1;
            repeat_events: 1;
            description { state: "default" 0.0;
               color: LAYOUT_BG_COLOR_INC;
            }
            description { state: "white_bg" 0.0;
               color: 255 255 255 255;
            }
            description { state: "black_bg" 0.0;
               color: 0 0 0 255;
            }
            description { state: "beige_bg" 0.0;
               color: 246 245 237 255;
            }
            description { state: "group_list_bg" 0.0;
               color: LAYOUT_GROUP_LIST_BG_COLOR_INC;
            }
            description { state: "transparent_bg" 0.0;
               color: 0 0 0 0;
            }
            description { state: "edit_mode" 0.0;
               color: LAYOUT_EDIT_MODE_BG_COLOR_INC;
            }
         }
         part { name: "elm.swallow.content";
            type: SWALLOW;
            description {
               state: "default" 0.0;
               rel1 { relative: 0.0 0.0; }
               rel2 { relative: 1.0 1.0; }
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
            }
            description { state: "show_with_navi_bar" 0.0;
               inherit: "default" 0.0;
               rel1 { relative: 0.0 1.0; to_y: "elm.swallow.navi_bar"; }
            }
            description { state: "show" 1.0;
               inherit: "default" 0.0;
               rel2 { relative: 1.0 0.0; to_y: "elm.swallow.controlbar"; }
            }
            description { state: "show_with_navi_bar" 1.0;
               inherit: "default" 0.0;
               rel1 { relative: 0.0 1.0; to_y: "elm.swallow.navi_bar"; }
               rel2 { relative: 1.0 0.0; to_y: "elm.swallow.controlbar"; }
            }
         }
         part { name: "elm.swallow.navi_bar";
            type: SWALLOW;
            scale: 1;
            description {
               state: "default" 0.0;
               visible: 0;
               min: 0 NAVI_BAR_H;
               fixed: 0 1;
               rel1 { relative: 0.0 0.0; }
               rel2 { relative: 1.0 0.0; }
               align: 0.5 0;
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part { name: "elm.swallow.controlbar";
            type: SWALLOW;
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               min: 0 CONTROLBAR_LARGE_H;
               fixed: 0 1;
               rel1 { relative: 0.0 1.0; }
               rel2 { relative: 1.0 1.0; }
               align: 0.5 1.0;
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
      }
      programs {
         program { name: "block_events";
            signal: "elm,base_event,block_events";
            source: "elm";
            action: STATE_SET "block_events" 0.0;
            target: "base_event";
         }
         program { name: "repeat_events";
            signal: "elm,base_event,repeat_events";
            source: "elm";
            action: STATE_SET "repeat_events" 0.0;
            target: "base_event";
         }
         program { name: "show_default_bg";
            signal: "elm,bg,show,default";
            source: "elm";
            script {
               set_state(PART:"base", "default", 0.0);
            }
         }
         program { name: "show_black_bg";
            signal: "elm,bg,show,black";
            source: "elm";
            script {
               set_state(PART:"base", "black_bg", 0.0);
            }
         }
         program { name: "show_white_bg";
            signal: "elm,bg,show,white";
            source: "elm";
            script {
               set_state(PART:"base", "white_bg", 0.0);
            }
         }
         program { name: "show_beige_bg";
            signal: "elm,bg,show,beige";
            source: "elm";
            script {
               set_state(PART:"base", "beige_bg", 0.0);
            }
         }
         program { name: "show_group_list_bg";
            signal: "elm,bg,show,group_list";
            source: "elm";
            script {
               set_state(PART:"base", "group_list_bg", 0.0);
            }
         }
         program { name: "show_transparent_bg";
            signal: "elm,bg,show,transparent";
            source: "elm";
            script {
               set_state(PART:"base", "transparent_bg", 0.0);
            }
         }
         program { name: "show_edit_mode_bg";
            signal: "elm,bg,show,edit_mode";
            source: "elm";
            script {
               set_state(PART:"base", "edit_mode", 0.0);
            }
         }
         program { name: "show_navi_bar";
            signal: "elm,state,show,navi_bar";
            source: "elm";
            script {
               set_state(PART:"elm.swallow.navi_bar", "show", 0.0);
               run_program(PROGRAM:"check_location");
            }
         }
         program { name: "hide_navi_bar";
            signal: "elm,state,hide,navi_bar";
            source: "elm";
            script {
               set_state(PART:"elm.swallow.navi_bar", "default", 0.0);
               run_program(PROGRAM:"check_location");
            }
         }
         program { name: "show_content";
            signal: "elm,state,show,content";
            source: "elm";
            script {
               set_state(PART:"elm.swallow.content", "show", 0.0);
               run_program(PROGRAM:"check_location");
            }
         }
         program { name: "hide_content";
            signal: "elm,state,hide,content";
            source: "elm";
            script {
               set_state(PART:"elm.swallow.content", "hide", 0.0);
               run_program(PROGRAM:"check_location");
            }
         }
         program { name: "show_controlbar";
            signal: "elm,state,show,controlbar";
            source: "elm";
            script {
               set_state(PART:"elm.swallow.controlbar", "show", 0.0);
               run_program(PROGRAM:"check_location");
            }
         }
         program { name: "hide_controlbar";
            signal: "elm,state,hide,controlbar";
            source: "elm";
            script {
               set_state(PART:"elm.swallow.controlbar", "default", 0.0);
               run_program(PROGRAM:"check_location");
            }
         }
         program { name: "check_location";
            script {
               new st[30];
               new Float:vl;
               new navi_bar = 0, content = 0, controlbar = 0;

               get_state(PART:"elm.swallow.navi_bar", st, 30, vl)
               if (!strncmp(st, "show", 4))  navi_bar = 1;
               get_state(PART:"elm.swallow.content", st, 30, vl)
               if (!strncmp(st, "show", 4))  content = 1;
               get_state(PART:"elm.swallow.controlbar", st, 30, vl)
               if (!strncmp(st, "show", 4))  controlbar = 1;

               // set navi bar
               if (navi_bar == 1) {
                  set_state(PART:"elm.swallow.navi_bar", "show", 0.0)
               }

               // set content
               if (content == 1) {
                  if (navi_bar == 1) {
                     set_state(PART:"elm.swallow.content", "show_with_navi_bar", 0.0)
                  } else {
                     set_state(PART:"elm.swallow.content", "show", 0.0)
                  }
                  get_state(PART:"elm.swallow.content", st, 30, vl)

                  if (controlbar == 1) {
                     set_state(PART:"elm.swallow.content", st, 1.0)
                  }
               }
            }
         }
      }
   }

   /*************************************************/
   /* elm_layout -> searchbar style                 */
   /*************************************************/
   group { name: "elm/layout/application/searchbar";
      alias: "elm/layout/searchbar/default";
      parts {
         part { name: "bg";
            mouse_events: 0;
            type: RECT;
            description { state: "default" 0.0;
               visible: 1;
               color: 0 0 0 0;
            }
         }
         part { name: "searchbar";
            type: EXTERNAL;
            source: "elm/searchbar";
            mouse_events: 1;
            scale: 1;
	         description { state: "default" 0.0;
               min: 0 SEARCHBAR_H;
               fixed: 0 1;
               align: 0.0 1.0;
	            rel1.to: "bg";
	            rel2 {
                  relative: 1.0 0.0;
                  to: "bg";
               }
               params {
                  //string: "label" "my test";
                  bool: "cancel_button_animation" "1";
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               align: 0.0 0.0;
            }
         }
         part { name: "elm.swallow.content";
            type: SWALLOW;
            mouse_events: 1;
            scale: 1;
            description { state: "default" 0.0;
               align: 0.0 0.0;
               rel1 {
                  relative: 0.0 1.0;
                  to: "searchbar";
               }
               rel2.to: "bg";
            }
         }
      } //end parts
      programs {
         program { name: "show_searchbar";
            signal: "elm,state,show,searchbar";
            source: "elm";
            action: STATE_SET "visible" 0.0;
            target: "searchbar";
         }
         program { name: "show_searchbar_with_animation";
            signal: "elm,state,show,searchbar,animation";
            source: "elm";
            action: STATE_SET "visible" 0.0;
            transition: DECELERATE 0.3;
            target: "searchbar";
         }
         program { name: "hide_searchbar";
            signal: "elm,state,hide,searchbar";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "searchbar";
         }
         program { name: "hide_searchbar_with_animation";
            signal: "elm,state,hide,searchbar,animation";
            source: "elm";
            action: STATE_SET "default" 0.0;
            transition: ACCELERATE 0.3;
            target: "searchbar";
         }
      } // end programs
   } //end group
