/*
 *  nBeat-theme
 *
 * Copyright (c) 2000 - 2010 Samsung Electronics Co., Ltd.
 *
 * Contact: Seokjae Jeong <seok.j.jeong@samsung.com>, Myoungwoon Roy Kim <Myoungwoon.kim@samsung.com>, Jeonghyun Yun <jh0506.yun@samsung.com>, Jaehwan Kim <jae.hwan.kim@samsung.com>, 
 * 		Chuneon Park <chuneon.park@samsung.com>, Juyung Seo <juyung.seo@samsung.com>, Woohyun Jung <wh0705.jung@samsung.com>, Myungjae Lee <mjae.lee@samsung.com>, Hyoyoung Chang <hyoyoung.chang@samsung.com>, 
 *		Hyunsil Park <hyunsil.park@samsung.com>, Sohyun Kim <anna1014.kim@samsung.com>, Seunggyun Kim <sgyun.kim@samsung.com>
 * 
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the
 * Free Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 * 
 * This library is distributed in the hope that it will be useful, but WITHOUT ANY
 * WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public
 * License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this library; if not, write to the Free Software Foundation, Inc., 51
 * Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
 *
 */

/*         
 * vim:ts=3
*/        

   group { name: "elm/genlist/item/slide2/default";
      alias: "elm/genlist/item_odd/slide2/default";

      data.item: "stacking" "above";
      data.item: "selectraise" "on";
      data.item: "labels" "elm.slide_base.text";
      data.item: "icons" "";
      data.item: "sweep_labels" "elm.base.text";
      data.item: "sweep_icons" "elm.base.swallow.button1 elm.base.swallow.button2";
      data.item: "treesize" "20";
      data.item: "allow_slide" "1";

      images {
         image: "00_sweep_list_bg.png" COMP;
      }

      parts {
         // Base parts when slide right.
         part { name: "base";
            clip_to: "disclip";
            scale: 1;
            description { state: "default" 0.0;
               min: 0 88;
               image.normal: "00_sweep_list_bg.png";
            }
         }
         part { name: "bottom_line";
            type: RECT;
            clip_to: "disclip";
            mouse_events: 0;
            description { state: "default" 0.0;
               min: 0 1;
               fixed: 0 1;
               visible: 1;
               color: 212 212 212 255;
               rel1 {
                  relative: 0.0 1.0;
                  offset: 0 -1;
                  to: "base";
               }
               rel2.to: "base";
            }
         }
         part { name: "base.padding.left";
            type: RECT;
            clip_to: "disclip";
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               min: 15 0;
               fixed: 1 0;
               visible: 0;
               rel1.to: "base";
               rel2 {
                  relative: 0 1;
                  to: "base";
               }
            }
         }
         part { name: "base.padding.right";
            type: RECT;
            clip_to: "disclip";
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               min: 15 0;
               fixed: 1 0;
               visible: 0;
               rel1 {
                  relative: 1 0;
                  to: "base";
               }
               rel2.to: "base";
            }
         }
         part { name: "base.padding.bottom";
            type: RECT;
            clip_to: "disclip";
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               min: 0 10;
               fixed: 0 1;
               visible: 0;
               align: 0.5 1;
               rel1 {
                  relative: 0 1;
                  to: "base";
               }
               rel2 {
                  relative: 1 1;
                  to: "base";
               }
            }
         }
         part { name: "elm.base.text";
            type: TEXT;
            clip_to: "disclip";
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               min: 0 36;
               fixed: 0 1;
               align: 0.5 0;
               rel1 {
                  relative: 1 0;
                  to_x: "base.padding.left";
                  to_y: "base";
               }
               rel2 {
                  relative: 0 0;
                  to_x: "base.padding.right";
                  to_y: "base";
               }
               color: 255 255 255 255;
               text {
                  font: "SLP:style=Roman";
                  size: 22;
                  min: 0 1;
                  align: 0.5 0.5;
               }
            }
         }
         part { name: "base.padding.center";
            type: RECT;
            clip_to: "disclip";
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               min: 10 0;
               fixed: 1 0;
               visible: 0;
               align: 0.5 0.5;
               rel1 {
                  relative: 0.5 0;
                  to: "base";
               }
               rel2 {
                  relative: 0.5 1;
                  to: "base";
               }
            }
         }
         part { name: "elm.base.swallow.button1";
            type: SWALLOW;
            clip_to: "disclip";
            description { state: "default" 0.0;
               rel1 {
                  relative: 1 1;
                  to_x: "base.padding.left";
                  to_y: "elm.base.text";
               }
               rel2 {
                  relative: 0 0;
                  to_x: "base.padding.center";
                  to_y: "base.padding.bottom";
               }
            }
         }
         part { name: "elm.base.swallow.button2";
            type: SWALLOW;
            clip_to: "disclip";
            description { state: "default" 0.0;
               rel1 {
                  relative: 1 1;
                  to_x: "base.padding.center";
                  to_y: "elm.base.text";
               }
               rel2 {
                  relative: 0 0;
                  to_x: "base.padding.right";
                  to_y: "base.padding.bottom";
               }
            }
         }

         // Transparent part between base parts and slidable parts.
         part { name: "elm.between.layer";
            type: RECT;
            clip_to: "disclip";
            mouse_events: 1;
            description { state: "default" 0.0;
               rel1.to: "base";
               rel2.to: "base";
               color: 0 0 0 0;
            }
            description { state: "repeat_events" 0.0;
               inherit: "default" 0.0;
               visible: 0;
            }
         }

         // Slidable parts.
         part { name: "slide_base";
            type: RECT;
            clip_to: "disclip";
            scale: 1;
            description { state: "default" 0.0;
               color: 246 245 237 255;
               rel1.to: "base";
               rel2.to: "base";
            }
            description { state: "hide" 0.0;
               inherit: "default" 0.0;
               rel1 { relative: 0.025 0.0; }
               rel2 { relative: 1.025 1.0; }
            }
            description { state: "hide" 0.1; 
               inherit: "default" 0.0;
               rel1 { relative: 0.13 0.0; }
               rel2 { relative: 1.13 1.0; }
            }
            description { state: "hide" 0.2;
               inherit: "default" 0.0;
               rel1 { relative: 0.5 0.0; }
               rel2 { relative: 1.5 1.0; }
            }
            description { state: "hide" 0.3;
               inherit: "default" 0.0;
               rel1 { relative: 1.0 0.0; }
               rel2 { relative: 2.0 1.0; }
            }
         }
         part { name: "slide_base.bg_image";
            clip_to: "disclip";
            type: RECT;
            description { state: "default" 0.0;
               visible: 0;
               rel1.to: "slide_base";
               rel2.to: "slide_base";
               color: GENLIST_PART_BG_SELECTED_COLOR_INC;
            }
            description { state: "selected" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part { name: "slide_bottom_line";
            type: RECT;
            clip_to: "disclip";
            mouse_events: 0;
            description { state: "default" 0.0;
               min: 0 1;
               fixed: 0 1;
               visible: 1;
               color: 212 212 212 255;
               rel1 {
                  relative: 0.0 1.0;
                  offset: 0 -1;
                  to: "slide_base";
               }
               rel2.to: "slide_base";
            }
         }
         part { name: "slide_base.padding.left";
            type: RECT;
            clip_to: "disclip";
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               min: 15 0;
               fixed: 1 0;
               visible: 0;
               rel1.to: "slide_base";
               rel2 {
                  relative: 0 1;
                  to: "slide_base";
               }
            }
         }
         part { name: "slide_base.padding.right";
            type: RECT;
            clip_to: "disclip";
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               min: 15 0;
               fixed: 1 0;
               visible: 0;
               rel1 {
                  relative: 1 0;
                  to: "slide_base";
               }
               rel2.to: "slide_base";
            }
         }
         part { name: "elm.slide_base.text";
            type: TEXT;
            clip_to: "disclip";
            mouse_events: 0;
            description { state: "default" 0.0;
               align: 0 0.5;
               rel1 {
                  relative: 1 0;
                  to_x: "slide_base.padding.left";
                  to_y: "slide_base";
               }
               rel2 {
                  relative: 0 1;
                  to_x: "slide_base.padding.right";
                  to_y: "slide_base";
               }
               color: 0 0 0 255;
               text {
                  font: "SLP:style=Roman";
                  size: 32;
                  min: 0 1;
                  align: 0 0.5;
               }
            }
            description { state: "selected" 0.0;
               inherit: "default" 0.0;
               color: 225 225 225 255;
            }
         }
         part { name: "disclip";
            type: RECT;
            description { state: "default" 0.0;
               rel1.to: "base";
               rel2.to: "base";
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 64;
            }
         }
      }

      programs {
         // Basic programs 
         program { name: "go_active";
            signal: "elm,state,selected";
            source: "elm";
            action: STATE_SET "selected" 0.0;
            target: "elm.slide_base.text";
            target: "slide_base.bg_image";
         }
         program { name: "go_passive";
            signal: "elm,state,unselected";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "elm.slide_base.text";
            target: "slide_base.bg_image";
            transition: LINEAR 0.1;
         }
         program { name: "go_disabled";
            signal: "elm,state,disabled";
            source: "elm";
            action: STATE_SET "disabled" 0.0;
            target: "disclip";
         }
         program { name: "go_enabled";
            signal: "elm,state,enabled";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "disclip";
         }

         // Slide right
         program { name: "go_slide_right";
            signal: "elm,state,slide,right";
            source: "elm";
            action: STATE_SET "hide" 0.0;
            target: "slide_base";
            after: "slide_right_step1";
         }
         program { name: "slide_right_step1";
            action: STATE_SET "hide" 0.1;
            target: "slide_base";
            transition: LINEAR 0.3;
            after: "slide_right_step2";
         }
         program { name: "slide_right_step2";
            action: STATE_SET "hide" 0.2;
            target: "slide_base";
            transition: LINEAR 0.3;
            after: "slide_right_step3";
         }
         program { name: "slide_right_step3";
            action: STATE_SET "hide" 0.3;
            target: "slide_base";
            transition: LINEAR 0.3;
            after: "slide_right_step4";
         }
         program { name: "slide_right_step4";
            action: STATE_SET "repeat_events" 0.0;
            target: "elm.between.layer";
         }

         // Slide left
         program { name: "go_slide_left";
            signal: "elm,state,slide,left";
            source: "elm";
            action: STATE_SET "hide" 0.3;
            target: "slide_base";
            after: "slide_left_step1";
         }
         program { name: "slide_left_step1";
            action: STATE_SET "default" 0.0;
            target: "elm.between.layer";
            after: "slide_left_step2";
         }
         program { name: "slide_left_step2";
            action: STATE_SET "hide" 0.2;
            target: "slide_base";
            transition: LINEAR 0.3;
            after: "slide_left_step3";
         }
         program { name: "slide_left_step3";
            action: STATE_SET "hide" 0.1;
            target: "slide_base";
            transition: LINEAR 0.3;
            after: "slide_left_step4";
         }
         program { name: "slide_left_step4";
            action: STATE_SET "hide" 0.0;
            target: "slide_base";
            transition: LINEAR 0.3;
            after: "slide_left_step5";
         }
         program { name: "slide_left_step5";
            action: STATE_SET "default" 0.0;
            target: "slide_base";
            transition: LINEAR 0.3;
            after: "slide_left_finish";
         }
         program { name: "slide_left_finish";
            action: SIGNAL_EMIT "elm,action,sweep,left,finish" "elm";
         }
      }
   }

