/*
 *  nBeat-theme
 *
 * Copyright (c) 2000 - 2010 Samsung Electronics Co., Ltd.
 *
 * Contact: Seokjae Jeong <seok.j.jeong@samsung.com>, Myoungwoon Roy Kim <Myoungwoon.kim@samsung.com>, Jeonghyun Yun <jh0506.yun@samsung.com>, Jaehwan Kim <jae.hwan.kim@samsung.com>, 
 * 		Chuneon Park <chuneon.park@samsung.com>, Juyung Seo <juyung.seo@samsung.com>, Woohyun Jung <wh0705.jung@samsung.com>, Myungjae Lee <mjae.lee@samsung.com>, Hyoyoung Chang <hyoyoung.chang@samsung.com>, 
 *		Hyunsil Park <hyunsil.park@samsung.com>, Sohyun Kim <anna1014.kim@samsung.com>, Seunggyun Kim <sgyun.kim@samsung.com>
 * 
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the
 * Free Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 * 
 * This library is distributed in the hope that it will be useful, but WITHOUT ANY
 * WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public
 * License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this library; if not, write to the Free Software Foundation, Inc., 51
 * Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
 *
 */

/*         
 * vim:ts=3
*/        

#define GENLIST_EXPANDABLE_TREE_GROUP(GE_STYLE_NAME, GE_COLOR) \
   group { name: "elm/genlist/tree/"GE_STYLE_NAME"/default"; \
      alias: "elm/genlist/tree_odd/"GE_STYLE_NAME"/default"; \
      data.item: "stacking" "above"; \
      data.item: "selectraise" "on"; \
      data.item: "labels" "elm.text"; \
      data.item: "icons" "elm.swallow.icon elm.swallow.end"; \
      data.item: "treesize" "20"; \
      images { \
         image: "00_button_expand_closed.png" COMP; \
         image: "00_button_expand_closed_press.png" COMP; \
         image: "00_button_expand_opened.png" COMP; \
         image: "00_button_expand_opened_press.png" COMP; \
      } \
      parts { \
         GENLIST_EXPANDABLE_PART_PERSPECTIVE_POINT() \
         GENLIST_EXPANDABLE_PART_BASE( 70, GE_COLOR ) \
         BEAT_GENLIST_PART_BOTTOM_EFFECT_LINE \
         BEAT_GENLIST_PART_PADDING_LEFT( 10 ) \
         BEAT_GENLIST_PART_PADDING_RIGHT( 10 ) \
         BEAT_GENLIST_PART_EXPANDABLE_SWALLOW_PADDING  \
         part { name: "touch_arrow"; \
            type: RECT; \
            clip_to: "disclip"; \
            ignore_flags: ON_HOLD; \
            scale: 1; \
            description { state: "default" 0.0; \
               min: 70 80; \
               fixed: 1 1; \
               align: 0.5 0.5; \
               rel1 { \
                  relative: 0.5 0.5; \
                  to: "arrow"; \
               } \
               rel2 { \
                  relative: 0.5 0.5; \
                  to: "arrow"; \
               } \
               color: 0 0 0 0; \
            } \
         } \
         part { name: "arrow"; \
            clip_to: "disclip"; \
            ignore_flags: ON_HOLD; \
            mouse_events: 0; \
            scale: 1; \
            description { state: "default" 0.0; \
               min: 40 40; \
               max: 40 40; \
               fixed: 1 1; \
               align: 1.0 0.5; \
               aspect: 1.0 1.0; \
               rel1.to_x: "elm.padding.right"; \
               rel2 { \
                  relative: 0.0 1.0; \
                  offset: 0 0; \
                  to_x: "elm.padding.right"; \
               } \
               image.normal: "00_button_expand_closed.png"; \
            } \
            description { state: "default" 1.0; \
               inherit: "default" 0.0; \
               image.normal: "00_button_expand_closed_press.png"; \
            } \
            description { state: "active" 0.0; \
               inherit: "default" 0.0; \
               image.normal: "00_button_expand_opened.png"; \
            } \
            description { state: "active" 1.0; \
               inherit: "default" 0.0; \
               image.normal: "00_button_expand_opened_press.png"; \
            } \
            BEAT_GENLIST_PART_MAP_START(-90.0, 0.0, 0.0) \
            BEAT_GENLIST_PART_MAP_FINISH(0.0, 0.0, 0.0) \
         } \
         part { name: "elm.padding.arrow.left"; \
            type: RECT; \
            scale: 1; \
            description { state: "default" 0.0; \
               min: 5 0; \
               fixed: 1 0; \
               visible: 0; \
               align: 1.0 0.5; \
               rel1.to: "arrow"; \
               rel2 { \
                  relative: 0.0 1.0; \
                  to: "arrow"; \
               } \
            } \
         } \
         part { name: "elm.text"; \
            clip_to: "disclip"; \
            type: TEXT; \
            mouse_events: 0; \
            scale: 1; \
            description { state: "default" 0.0; \
               align: 0.5 0.5; \
               rel1 { \
                  relative: 1.0 0.0; \
                  to_x: "elm.swallow.pad"; \
               } \
               rel2 { \
                  relative: 0.0 1.0; \
                  to_x: "elm.padding.arrow.left"; \
               } \
               color: GENLIST_PART_TEXT_COLOR_INC; \
               text { \
                  font: "SLP:style=Roman"; \
                  size: 28; \
                  min: 0 1; \
                  align: 0.0 0.5; \
               } \
            } \
            description { state: "selected" 0.0; \
               inherit: "default" 0.0; \
               color: 225 225 225 255; \
            } \
            BEAT_GENLIST_PART_MAP_START(-90.0, 0.0, 0.0) \
            BEAT_GENLIST_PART_MAP_FINISH(0.0, 0.0, 0.0) \
         } \
         BEAT_GENLIST_PART_DISCLIP \
      } \
      programs { \
         program { \
            name: "go_active"; \
            signal: "elm,state,selected"; \
            source: "elm"; \
            action: STATE_SET "selected" 0.0; \
            target: "base"; \
            target: "elm.text"; \
         } \
         program { \
            name: "go_passive"; \
            signal: "elm,state,unselected"; \
            source: "elm"; \
            action: STATE_SET "default" 0.0; \
            target: "base"; \
            target: "elm.text"; \
            transition: LINEAR 0.1; \
         } \
         program { \
            name: "go_disabled"; \
            signal: "elm,state,disabled"; \
            source: "elm"; \
            action: STATE_SET "disabled" 0.0; \
            target: "disclip"; \
         } \
         program { \
            name: "go_enabled"; \
            signal: "elm,state,enabled"; \
            source: "elm"; \
            action: STATE_SET "default" 0.0; \
            target: "disclip"; \
         } \
         program { \
            name: "expand"; \
            signal: "mouse,up,1"; \
            source: "touch_arrow"; \
            action: SIGNAL_EMIT "elm,action,expand,toggle" "elm"; \
         } \
         program { \
            name: "arrow_down"; \
            signal: "mouse,down,1"; \
            source: "touch_arrow"; \
            script { \
               new st[31]; \
               new Float:vl; \
               get_state(PART:"arrow", st, 30, vl); \
               if (vl == 0.0) \
                  set_state(PART:"arrow", st, 1.0); \
               else \
                  set_state(PART:"arrow", st, 0.0); \
            } \
         } \
         program { name: "arrow_out"; \
            signal: "mouse,out"; \
            source: "touch_arrow"; \
            script { \
               new st[31]; \
               new Float:vl; \
               get_state(PART:"arrow", st, 30, vl); \
               set_state(PART:"arrow", st, 0.0); \
            } \
         } \
         program { \
            name: "go_expanded"; \
            signal: "elm,state,expanded"; \
            source: "elm"; \
            action: STATE_SET "active" 0.0; \
            target: "arrow"; \
         } \
         program { \
            name: "go_contracted"; \
            signal: "elm,state,contracted"; \
            source: "elm"; \
            action: STATE_SET "default" 0.0; \
            target: "arrow"; \
         } \
         program { \
            BEAT_GENLIST_PROGRAM_MAP_ROTATE_START() \
            target: "base"; \
            target: "elm.text"; \
            target: "arrow"; \
            target: "elm.swallow.pad"; \
            target: "bottom_line"; \
         } \
         program { \
            BEAT_GENLIST_PROGRAM_MAP_ROTATE_FINISH( 0.4 ) \
            target: "base"; \
            target: "elm.text"; \
            target: "arrow"; \
            target: "elm.swallow.pad"; \
            target: "bottom_line"; \
         } \
         program { \
            BEAT_GENLIST_PROGRAM_MAP_END() \
            target: "base"; \
            target: "elm.text"; \
            target: "arrow"; \
            target: "elm.swallow.pad"; \
            target: "bottom_line"; \
         } \
         program { \
            BEAT_GENLIST_PROGRAM_MAP_ROTATE_START2() \
            target: "base"; \
            target: "elm.text"; \
            target: "arrow"; \
            target: "elm.swallow.pad"; \
            target: "bottom_line"; \
         } \
         program { \
            BEAT_GENLIST_PROGRAM_MAP_ROTATE_FINISH2( 0.4 ) \
            target: "base"; \
            target: "elm.text"; \
            target: "arrow"; \
            target: "elm.swallow.pad"; \
            target: "bottom_line"; \
         } \
         program { \
            BEAT_GENLIST_PROGRAM_MAP_END2() \
            target: "base"; \
            target: "elm.text"; \
            target: "arrow"; \
            target: "elm.swallow.pad"; \
            target: "bottom_line"; \
         } \
         program { \
            name: "show"; \
            signal: "elm,state,show"; \
            action: STATE_SET "default" 0.0; \
            target: "base"; \
            target: "elm.text"; \
            target: "arrow"; \
            target: "elm.swallow.pad"; \
            target: "bottom_line"; \
         } \
         program { \
            name: "hide"; \
            signal: "elm,state,hide"; \
            action: STATE_SET "hide" 0.0; \
            target: "base"; \
            target: "elm.text"; \
            target: "arrow"; \
            target: "elm.swallow.pad"; \
            target: "bottom_line"; \
         } \
      } \
   } 

#define GENLIST_EXPANDABLE_ITEM_GROUP(GE_STYLE_NAME, GE_COLOR) \
   group { name: "elm/genlist/item/"GE_STYLE_NAME"/default"; \
      alias: "elm/genlist/item_odd/"GE_STYLE_NAME"/default"; \
      data.item: "stacking" "above"; \
      data.item: "selectraise" "on"; \
      data.item: "labels" "elm.text"; \
      data.item: "icons" "elm.swallow.icon elm.swallow.end"; \
      data.item: "treesize" "20"; \
      images { \
         image: "00_list_bar_press_1x80.png" COMP; \
         image: "00_list_expandable_bg.png" COMP; \
      } \
      parts { \
         GENLIST_EXPANDABLE_PART_PERSPECTIVE_POINT() \
         GENLIST_EXPANDABLE_PART_BASE( 70, GE_COLOR ) \
         BEAT_GENLIST_PART_BOTTOM_EFFECT_LINE \
         BEAT_GENLIST_PART_PADDING_LEFT( 10 ) \
         BEAT_GENLIST_PART_PADDING_RIGHT( 10 ) \
         BEAT_GENLIST_PART_EXPANDABLE_SWALLOW_PADDING  \
         part { name: "elm.swallow.end"; \
            type: SWALLOW; \
            scale: 1; \
            description { state: "default" 0.0; \
               fixed: 1 0; \
               align: 1.0 0.5; \
               rel1.to_x: "elm.padding.right"; \
               rel2 { \
                  relative: 0.0  1.0; \
                  to_x: "elm.padding.right"; \
               } \
            } \
         } \
        part { name: "elm.text"; \
            clip_to: "disclip"; \
            type: TEXT; \
            mouse_events: 0; \
            scale: 1; \
            description { state: "default" 0.0; \
               rel1 { \
                  relative: 1.0  0.0; \
                  offset: 0 0; \
                  to_x: "elm.swallow.pad"; \
               } \
               rel2 { \
                  to_x: "elm.padding.right"; \
                  relative: 0.0  1.0; \
                  offset:   0   0; \
               } \
               color: GENLIST_PART_TEXT_COLOR_INC; \
               text { \
                  font: "SLP:style=Roman"; \
                  size: 28; \
                  min: 0 1; \
                  align: 0.0 0.5; \
               } \
            } \
            description { state: "selected" 0.0; \
               inherit: "default" 0.0; \
               color: 225 225 225 255; \
            } \
            BEAT_GENLIST_PART_MAP_START(-90.0, 0.0, 0.0) \
            BEAT_GENLIST_PART_MAP_FINISH(0.0, 0.0, 0.0) \
         } \
         BEAT_GENLIST_PART_DISCLIP \
      } \
      programs { \
         program { name: "go_active"; \
            signal: "elm,state,selected"; \
            source: "elm"; \
            action: STATE_SET "selected" 0.0; \
            target: "base"; \
            target: "elm.text"; \
         } \
         program { name: "go_passive"; \
            signal: "elm,state,unselected"; \
            source: "elm"; \
            action: STATE_SET "default" 0.0; \
            target: "base"; \
            target: "elm.text"; \
            transition: LINEAR 0.1; \
         } \
         program { name: "go_disabled"; \
            signal: "elm,state,disabled"; \
            source: "elm"; \
            action: STATE_SET "disabled" 0.0; \
            target: "disclip"; \
         } \
         program { name: "go_enabled"; \
            signal: "elm,state,enabled"; \
            source: "elm"; \
            action: STATE_SET "default" 0.0; \
            target: "disclip"; \
         } \
         program { \
            BEAT_GENLIST_PROGRAM_MAP_ROTATE_START() \
            target: "base"; \
            target: "elm.text"; \
            target: "elm.swallow.pad"; \
            target: "elm.swallow.end"; \
            target: "bottom_line"; \
         } \
         program { \
            BEAT_GENLIST_PROGRAM_MAP_ROTATE_FINISH( 0.4 ) \
            target: "base"; \
            target: "elm.text"; \
            target: "elm.swallow.end"; \
            target: "elm.swallow.pad"; \
            target: "bottom_line"; \
         } \
         program { \
            BEAT_GENLIST_PROGRAM_MAP_END() \
            target: "base"; \
            target: "elm.text"; \
            target: "elm.swallow.end"; \
            target: "elm.swallow.pad"; \
            target: "bottom_line"; \
         } \
         program { \
            BEAT_GENLIST_PROGRAM_MAP_ROTATE_START2() \
            target: "base"; \
            target: "elm.text"; \
            target: "elm.swallow.end"; \
            target: "elm.swallow.pad"; \
            target: "bottom_line"; \
         } \
         program { \
            BEAT_GENLIST_PROGRAM_MAP_ROTATE_FINISH2( 0.4 ) \
            target: "base"; \
            target: "elm.text"; \
            target: "elm.swallow.end"; \
            target: "elm.swallow.pad"; \
            target: "bottom_line"; \
         } \
         program { \
            BEAT_GENLIST_PROGRAM_MAP_END2() \
            target: "base"; \
            target: "elm.text"; \
            target: "elm.swallow.end"; \
            target: "elm.swallow.pad"; \
            target: "bottom_line"; \
         } \
         program { \
            name: "show"; \
            signal: "elm,state,show"; \
            action: STATE_SET "default" 0.0; \
            target: "base"; \
            target: "elm.text"; \
            target: "elm.swallow.end"; \
            target: "elm.swallow.pad"; \
            target: "bottom_line"; \
         } \
         program { \
            name: "hide"; \
            signal: "elm,state,hide"; \
            action: STATE_SET "hide" 0.0; \
            target: "base"; \
            target: "elm.text"; \
            target: "elm.swallow.end"; \
            target: "elm.swallow.pad"; \
            target: "bottom_line"; \
         } \
      } \
   }

GENLIST_EXPANDABLE_TREE_GROUP("expandable", GENLIST_EXPANDABLE_PART_BG_COLOR_INC)
GENLIST_EXPANDABLE_TREE_GROUP("expandable2", GENLIST_EXPANDABLE2_PART_BG_COLOR_INC)

GENLIST_EXPANDABLE_ITEM_GROUP("expandable", GENLIST_EXPANDABLE_PART_BG_COLOR_INC)
GENLIST_EXPANDABLE_ITEM_GROUP("expandable2", GENLIST_EXPANDABLE2_PART_BG_COLOR_INC)
GENLIST_EXPANDABLE_ITEM_GROUP("expandable3", GENLIST_EXPANDABLE3_PART_BG_COLOR_INC)
