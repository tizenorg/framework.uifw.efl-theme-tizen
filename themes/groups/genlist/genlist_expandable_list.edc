/*
 *  nBeat-theme
 *
 * Copyright (c) 2000 - 2010 Samsung Electronics Co., Ltd.
 *
 * Contact: Seokjae Jeong <seok.j.jeong@samsung.com>, Myoungwoon Roy Kim <Myoungwoon.kim@samsung.com>, Jeonghyun Yun <jh0506.yun@samsung.com>, Jaehwan Kim <jae.hwan.kim@samsung.com>, 
 * 		Chuneon Park <chuneon.park@samsung.com>, Juyung Seo <juyung.seo@samsung.com>, Woohyun Jung <wh0705.jung@samsung.com>, Myungjae Lee <mjae.lee@samsung.com>, Hyoyoung Chang <hyoyoung.chang@samsung.com>, 
 *		Hyunsil Park <hyunsil.park@samsung.com>, Sohyun Kim <anna1014.kim@samsung.com>, Seunggyun Kim <sgyun.kim@samsung.com>
 * 
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the
 * Free Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 * 
 * This library is distributed in the hope that it will be useful, but WITHOUT ANY
 * WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public
 * License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this library; if not, write to the Free Software Foundation, Inc., 51
 * Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
 *
 */

/*         
 * vim:ts=3
*/        

   group { name: "elm/genlist/tree/expandable/default";
      alias: "elm/genlist/tree_odd/expandable/default";

      data.item: "stacking" "above";
      data.item: "selectraise" "on";
      data.item: "labels" "elm.text";
      data.item: "icons" "elm.swallow.icon elm.swallow.end";
      data.item: "treesize" "20";

      images {
         image: "00_list_bar_press_1x80.png" COMP;
         image: "00_button_expand_closed.png" COMP;
         image: "00_button_expand_closed_press.png" COMP;
         image: "00_button_expand_opened.png" COMP;
         image: "00_button_expand_opened_press.png" COMP;
      }

      parts {
         BEAT_GENLIST_PART_MAP_PERSPECTIVE_POINT()
         BEAT_GENLIST_PART_MAP_BASE( 80 )
         BEAT_GENLIST_PART_BG_IMAGE
         BEAT_GENLIST_PART_BOTTOM_LINE
         BEAT_GENLIST_PART_PADDING_LEFT( 15 )
         BEAT_GENLIST_PART_PADDING_RIGHT( 15 )
         BEAT_GENLIST_PART_EXPANDABLE_SWALLOW_PADDING 

         part { name: "touch_arrow";
            type: RECT;
            clip_to: "disclip";
            ignore_flags: ON_HOLD;
            scale: 1;
            description { state: "default" 0.0;
               min: 70 80;
               fixed: 1 1;
               align: 0.5 0.5;
               rel1 {
                  relative: 0.5 0.5;
                  to: "arrow";
               }
               rel2 {
                  relative: 0.5 0.5;
                  to: "arrow";
               }
               color: 0 0 0 0;
            }
         }
         part { name: "arrow";
            clip_to: "disclip";
            ignore_flags: ON_HOLD;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               min: 40 40;
               max: 40 40;
               fixed: 1 1;
               align: 1.0 0.5;
               aspect: 1.0 1.0; // needed?
               rel1.to_x: "elm.padding.right";
               rel2 {
                  relative: 0.0 1.0;
                  offset: 0 0;
                  to_x: "elm.padding.right";
               }
               image.normal: "00_button_expand_closed.png";
            }
            description { state: "default" 1.0;
               inherit: "default" 0.0;
               image.normal: "00_button_expand_closed_press.png";
            }
            description { state: "active" 0.0;
               inherit: "default" 0.0;
               image.normal: "00_button_expand_opened.png";
            }
            description { state: "active" 1.0;
               inherit: "default" 0.0;
               image.normal: "00_button_expand_opened_press.png";
            }
            BEAT_GENLIST_PART_MAP_START(-90.0, 0.0, 0.0)
            BEAT_GENLIST_PART_MAP_FINISH(0.0, 0.0, 0.0)
         }
         part { name: "elm.padding.arrow.left";
            type: RECT;
            scale: 1;
            description { state: "default" 0.0;
               min: 5 0;
               fixed: 1 0;
               visible: 0;
               align: 1.0 0.5;
               rel1.to: "arrow";
               rel2 {
                  relative: 0.0 1.0;
                  to: "arrow";
               }
            }
         }
         part { name: "elm.text";
            clip_to: "disclip";
            type: TEXT;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               align: 0.5 0.5;
               rel1 {
                  relative: 1.0 0.0;
                  to_x: "elm.swallow.pad";
               }
               rel2 {
                  relative: 0.0 1.0;
                  to_x: "elm.padding.arrow.left";
               }
               color: GENLIST_PART_TEXT_COLOR_INC;
               text {
                  font: "SLP:style=Roman";
                  size: 32;
                  min: 0 1;
                  align: 0.0 0.5;
               }
            }
            description { state: "selected" 0.0;
               inherit: "default" 0.0;
               color: 225 225 225 255;
            }
            BEAT_GENLIST_PART_MAP_START(-90.0, 0.0, 0.0)
            BEAT_GENLIST_PART_MAP_FINISH(0.0, 0.0, 0.0)
         }
         BEAT_GENLIST_PART_DISCLIP
      }
      programs {
         // signal: elm,state,%s,active
         //   a "check" item named %s went active
         // signal: elm,state,%s,passive
         //   a "check" item named %s went passive
         // default is passive
         program {
            name: "go_active";
            signal: "elm,state,selected";
            source: "elm";
            action: STATE_SET "selected" 0.0;
            target: "bg_image";
            target: "elm.text";
         }
         program {
            name: "go_passive";
            signal: "elm,state,unselected";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "bg_image";
            target: "elm.text";
            transition: LINEAR 0.1;
         }
         program {
            name: "go_disabled";
            signal: "elm,state,disabled";
            source: "elm";
            action: STATE_SET "disabled" 0.0;
            target: "disclip";
         }
         program {
            name: "go_enabled";
            signal: "elm,state,enabled";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "disclip";
         }
         program {
            name: "expand";
            signal: "mouse,up,1";
            source: "touch_arrow";
            action: SIGNAL_EMIT "elm,action,expand,toggle" "elm";
         }
         program {
            name: "arrow_down";
            signal: "mouse,down,1";
            source: "touch_arrow";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"arrow", st, 30, vl)
               if (vl == 0.0)
                  set_state(PART:"arrow", st, 1.0);
               else
                  set_state(PART:"arrow", st, 0.0);
            }
         }
         program { name: "arrow_out";
            signal: "mouse,out";
            source: "touch_arrow";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"arrow", st, 30, vl)
               set_state(PART:"arrow", st, 0.0);
            }
         }
         program {
            name: "go_expanded";
            signal: "elm,state,expanded";
            source: "elm";
            action: STATE_SET "active" 0.0;
            target: "arrow";
         }
         program {
            name: "go_contracted";
            signal: "elm,state,contracted";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "arrow";
         }
         program {
            BEAT_GENLIST_PROGRAM_MAP_ROTATE_START()
            target: "base";
            target: "elm.text";
            target: "arrow";
            target: "elm.swallow.pad";            
         }
         program {
            BEAT_GENLIST_PROGRAM_MAP_ROTATE_FINISH( 0.4 )
            target: "base";
            target: "elm.text";
            target: "arrow";
            target: "elm.swallow.pad";
         }
      }
   }

   group { name: "elm/genlist/item/expandable/default";
      alias: "elm/genlist/item_odd/expandable/default";

      data.item: "stacking" "above";
      data.item: "selectraise" "on";
      data.item: "labels" "elm.text";
      data.item: "icons" "elm.swallow.end";
      data.item: "treesize" "20";
      images {
         image: "00_list_bar_press_1x80.png" COMP;
         image: "00_list_expandable_bg.png" COMP;
      }
      parts {
         BEAT_GENLIST_PART_MAP_PERSPECTIVE_POINT()
         BEAT_GENLIST_PART_MAP_BASE( 80 )
         BEAT_GENLIST_PART_BG_IMAGE
         BEAT_GENLIST_PART_BOTTOM_LINE
         BEAT_GENLIST_PART_PADDING_LEFT( 15 )
         BEAT_GENLIST_PART_PADDING_RIGHT( 15 )
         BEAT_GENLIST_PART_EXPANDABLE_SWALLOW_PADDING 

         part { name: "elm.swallow.end";
            type: SWALLOW;
            scale: 1;
            description { state: "default" 0.0;
               fixed: 1 0;
               align: 1.0 0.5;
               rel1.to_x: "elm.padding.right";
               rel2 {
                  relative: 0.0  1.0;
                  to_x: "elm.padding.right";
               }
            }
         }
        part { name: "elm.text";
            clip_to: "disclip";
            type: TEXT;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               rel1 {
                  relative: 1.0  0.0;
                  offset: 0 0;
                  to_x: "elm.swallow.pad";
               }
               rel2 {
                  to_x: "elm.padding.right";
                  relative: 0.0  1.0;
                  offset:   0   0;
               }
               color: GENLIST_PART_TEXT_COLOR_INC;
               text {
                  font: "SLP:style=Roman";
                  size: 32;
                  min: 0 1;
                  align: 0.0 0.5;
               }
            }
            description { state: "selected" 0.0;
               inherit: "default" 0.0;
               color: 225 225 225 255;
            }
            BEAT_GENLIST_PART_MAP_START(-90.0, 0.0, 0.0)
            BEAT_GENLIST_PART_MAP_FINISH(0.0, 0.0, 0.0)
         }
         BEAT_GENLIST_PART_DISCLIP
      }
      programs {
         // signal: elm,state,%s,active
         //   a "check" item named %s went active
         // signal: elm,state,%s,passive
         //   a "check" item named %s went passive
         // default is passive
         program { name: "go_active";
            signal: "elm,state,selected";
            source: "elm";
            action: STATE_SET "selected" 0.0;
            target: "bg_image";
            target: "elm.text";
         }
         program { name: "go_passive";
            signal: "elm,state,unselected";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "bg_image";
            target: "elm.text";
            transition: LINEAR 0.1;
         }
         program { name: "go_disabled";
            signal: "elm,state,disabled";
            source: "elm";
            action: STATE_SET "disabled" 0.0;
            target: "disclip";
         }
         program { name: "go_enabled";
            signal: "elm,state,enabled";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "disclip";
         }
         program {
            BEAT_GENLIST_PROGRAM_MAP_ROTATE_START()
            target: "base";
            target: "elm.text";
            target: "elm.swallow.pad";            
         }
         program {
            BEAT_GENLIST_PROGRAM_MAP_ROTATE_FINISH( 0. )
            target: "base";
            target: "elm.text";
            target: "elm.swallow.pad";            
         }
      }
   }

   group { name: "elm/genlist/tree/expandable2/default";
      alias: "elm/genlist/tree_odd/expandable2/default";

      data.item: "stacking" "above";
      data.item: "selectraise" "on";
      data.item: "labels" "elm.text";
      data.item: "icons" "elm.swallow.icon elm.swallow.end";
      data.item: "treesize" "20";

      images {
         image: "00_list_bar_press_1x80.png" COMP;
         image: "00_button_expand_2_closed.png" COMP;
         image: "00_button_expand_2_closed_press.png" COMP;
         image: "00_button_expand_2_opened.png" COMP;
         image: "00_button_expand_2_opened_press.png" COMP;
      }

      parts {
         BEAT_GENLIST_PART_MAP_PERSPECTIVE_POINT()
         GENLIST_EXPANDABLE2_PART_MAP_BASE( 80 )
         GENLIST_EXPANDABLE_PART_BG_IMAGE_INC
         BEAT_GENLIST_PART_BOTTOM_LINE
         BEAT_GENLIST_PART_PADDING_LEFT( 15 )
         BEAT_GENLIST_PART_PADDING_RIGHT( 15 )
         BEAT_GENLIST_PART_EXPANDABLE_SWALLOW_PADDING 

         part { name: "touch_arrow";
            type: RECT;
            clip_to: "disclip";
            ignore_flags: ON_HOLD;
            scale: 1;
            description { state: "default" 0.0;
               min: 70 80;
               fixed: 1 1;
               align: 0.5 0.5;
               rel1 {
                  relative: 0.5 0.5;
                  to: "arrow";
               }
               rel2 {
                  relative: 0.5 0.5;
                  to: "arrow";
               }
               color: 0 0 0 0;
            }
            BEAT_GENLIST_PART_MAP_START(-90.0, 0.0, 0.0)
            BEAT_GENLIST_PART_MAP_FINISH(0.0, 0.0, 0.0)            
         }
         part { name: "arrow";
            clip_to: "disclip";
            ignore_flags: ON_HOLD;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               min: 40 40;
               max: 40 40;
               fixed: 1 1;
               align: 1.0 0.5;
               aspect: 1.0 1.0; // needed?
               rel1.to_x: "elm.padding.right";
               rel2 {
                  relative: 0.0 1.0;
                  offset: 0 0;
                  to_x: "elm.padding.right";
               }
               image.normal: "00_button_expand_2_closed.png";
            }
            description { state: "default" 1.0;
               inherit: "default" 0.0;
               image.normal: "00_button_expand_2_closed_press.png";
            }
            description { state: "active" 0.0;
               inherit: "default" 0.0;
               image.normal: "00_button_expand_2_opened.png";
            }
            description { state: "active" 1.0;
               inherit: "default" 0.0;
               image.normal: "00_button_expand_2_opened_press.png";
            }
            BEAT_GENLIST_PART_MAP_START(-90.0, 0.0, 0.0)
            BEAT_GENLIST_PART_MAP_FINISH(0.0, 0.0, 0.0)
         }
         part { name: "elm.padding.arrow.left";
            type: RECT;
            scale: 1;
            description { state: "default" 0.0;
               min: 5 0;
               fixed: 1 0;
               visible: 0;
               align: 1.0 0.5;
               rel1.to: "arrow";
               rel2 {
                  relative: 0.0 1.0;
                  to: "arrow";
               }
            }
         }
         part { name: "elm.text";
            clip_to: "disclip";
            type: TEXT;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               align: 0.5 0.5;
               rel1 {
                  relative: 1.0 0.0;
                  to_x: "elm.swallow.pad";
               }
               rel2 {
                  relative: 0.0 1.0;
                  to_x: "elm.padding.arrow.left";
               }
               color: GENLIST_PART_TEXT_COLOR_INC;
               text {
                  font: "SLP:style=Roman";
                  size: 32;
                  min: 0 1;
                  align: 0.0 0.5;
               }
            }
            description { state: "selected" 0.0;
               inherit: "default" 0.0;
               color: 225 225 225 255;
            }
            BEAT_GENLIST_PART_MAP_START(-90.0, 0.0, 0.0)
            BEAT_GENLIST_PART_MAP_FINISH(0.0, 0.0, 0.0)
         }
         BEAT_GENLIST_PART_DISCLIP
      }
      programs {
         // signal: elm,state,%s,active
         //   a "check" item named %s went active
         // signal: elm,state,%s,passive
         //   a "check" item named %s went passive
         // default is passive
         program {
            name: "go_active";
            signal: "elm,state,selected";
            source: "elm";
            action: STATE_SET "selected" 0.0;
            target: "bg_image";
            target: "elm.text";
         }
         program {
            name: "go_passive";
            signal: "elm,state,unselected";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "bg_image";
            target: "elm.text";
            transition: LINEAR 0.1;
         }
         program {
            name: "go_disabled";
            signal: "elm,state,disabled";
            source: "elm";
            action: STATE_SET "disabled" 0.0;
            target: "disclip";
         }
         program {
            name: "go_enabled";
            signal: "elm,state,enabled";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "disclip";
         }
         program {
            name: "expand";
            signal: "mouse,up,1";
            source: "touch_arrow";
            action: SIGNAL_EMIT "elm,action,expand,toggle" "elm";
         }
         program {
            name: "arrow_down";
            signal: "mouse,down,1";
            source: "touch_arrow";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"arrow", st, 30, vl)
               if (vl == 0.0)
                  set_state(PART:"arrow", st, 1.0);
               else
                  set_state(PART:"arrow", st, 0.0);
            }
         }
         program { name: "arrow_out";
            signal: "mouse,out";
            source: "touch_arrow";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"arrow", st, 30, vl)
               set_state(PART:"arrow", st, 0.0);
            }
         }
         program {
            name: "go_expanded";
            signal: "elm,state,expanded";
            source: "elm";
            action: STATE_SET "active" 0.0;
            target: "arrow";
         }
         program {
            name: "go_contracted";
            signal: "elm,state,contracted";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "arrow";
         }
         program {
            BEAT_GENLIST_PROGRAM_MAP_ROTATE_START()
            target: "base";
            target: "elm.text";
            target: "arrow";
            target: "bg_image";       
            target: "elm.swallow.pad";            
         }
         program {
            BEAT_GENLIST_PROGRAM_MAP_ROTATE_FINISH( 0.4 )
            target: "base";
            target: "elm.text";
            target: "arrow";
            target: "bg_image";         
            target: "elm.swallow.pad";            
         }
      }
   }

   group { name: "elm/genlist/item/expandable2/default";
      alias: "elm/genlist/item_odd/expandable2/default";

      data.item: "stacking" "above";
      data.item: "selectraise" "on";
      data.item: "labels" "elm.text";
      data.item: "icons" "elm.swallow.end";
      data.item: "treesize" "20";
      images {
         image: "00_list_bar_press_1x80.png" COMP;
         image: "00_list_expandable_bg.png" COMP;
      }
      parts {
         BEAT_GENLIST_PART_MAP_PERSPECTIVE_POINT()
         BEAT_GENLIST_PART_MAP_BASE( 80 )
         GENLIST_EXPANDABLE_PART_BG_IMAGE_INC
         BEAT_GENLIST_PART_BOTTOM_LINE
         BEAT_GENLIST_PART_PADDING_LEFT( 15 )
         BEAT_GENLIST_PART_PADDING_RIGHT( 15 )
         BEAT_GENLIST_PART_EXPANDABLE_SWALLOW_PADDING 

         part { name: "elm.swallow.end";
            type: SWALLOW;
            scale: 1;
            description { state: "default" 0.0;
               fixed: 1 0;
               align: 1.0 0.5;
               rel1.to_x: "elm.padding.right";
               rel2 {
                  relative: 0.0  1.0;
                  to_x: "elm.padding.right";
               }
            }
            BEAT_GENLIST_PART_MAP_START(-90.0, 0.0, 0.0)
            BEAT_GENLIST_PART_MAP_FINISH(0.0, 0.0, 0.0)
         }
        part { name: "elm.text";
            clip_to: "disclip";
            type: TEXT;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               rel1 {
                  relative: 1.0  0.0;
                  offset: 0 0;
                  to_x: "elm.swallow.pad";
               }
               rel2 {
                  to_x: "elm.padding.right";
                  relative: 0.0  1.0;
                  offset:   0   0;
               }
               color: GENLIST_PART_TEXT_COLOR_INC;
               text {
                  font: "SLP:style=Roman";
                  size: 32;
                  min: 0 1;
                  align: 0.0 0.5;
               }
            }
            description { state: "selected" 0.0;
               inherit: "default" 0.0;
               color: 225 225 225 255;
            }
            BEAT_GENLIST_PART_MAP_START(-90.0, 0.0, 0.0)
            BEAT_GENLIST_PART_MAP_FINISH(0.0, 0.0, 0.0)
         }
         BEAT_GENLIST_PART_DISCLIP
      }
      programs {
         // signal: elm,state,%s,active
         //   a "check" item named %s went active
         // signal: elm,state,%s,passive
         //   a "check" item named %s went passive
         // default is passive
         program { name: "go_active";
            signal: "elm,state,selected";
            source: "elm";
            action: STATE_SET "selected" 0.0;
            target: "bg_image";
            target: "elm.text";
         }
         program { name: "go_passive";
            signal: "elm,state,unselected";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "bg_image";
            target: "elm.text";
            transition: LINEAR 0.1;
         }
         program { name: "go_disabled";
            signal: "elm,state,disabled";
            source: "elm";
            action: STATE_SET "disabled" 0.0;
            target: "disclip";
         }
         program { name: "go_enabled";
            signal: "elm,state,enabled";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "disclip";
         }
         program {
            BEAT_GENLIST_PROGRAM_MAP_ROTATE_START()
            target: "base";
            target: "elm.text";
            target: "elm.swallow.end";
            target: "elm.swallow.pad";        
            target: "bg_image";            
         }
         program {
            BEAT_GENLIST_PROGRAM_MAP_ROTATE_FINISH( 0.4 )
            target: "base";
            target: "elm.text";
            target: "elm.swallow.end";
            target: "elm.swallow.pad";            
            target: "bg_image";            
         }         
      }
   }

   group { name: "elm/genlist/tree/expandable2_noshadow/default";
      alias: "elm/genlist/tree_odd/expandable2_noshadow/default";

      data.item: "stacking" "above";
      data.item: "selectraise" "on";
      data.item: "labels" "elm.text";
      data.item: "icons" "elm.swallow.icon elm.swallow.end";
      data.item: "treesize" "20";

      images {
         image: "00_list_bar_press_1x80.png" COMP;
         image: "00_button_expand_2_closed.png" COMP;
         image: "00_button_expand_2_closed_press.png" COMP;
         image: "00_button_expand_2_opened.png" COMP;
         image: "00_button_expand_2_opened_press.png" COMP;
      }

      parts {
         BEAT_GENLIST_PART_MAP_PERSPECTIVE_POINT()
         BEAT_GENLIST_PART_EXPANDABLE2_NOSHADOW_BASE( 80 )
         BEAT_GENLIST_PART_BG_IMAGE
         BEAT_GENLIST_PART_BOTTOM_LINE
         BEAT_GENLIST_PART_PADDING_LEFT( 15 )
         BEAT_GENLIST_PART_PADDING_RIGHT( 15 )
         BEAT_GENLIST_PART_EXPANDABLE_SWALLOW_PADDING 

         part { name: "touch_arrow";
            type: RECT;
            clip_to: "disclip";
            ignore_flags: ON_HOLD;
            scale: 1;
            description { state: "default" 0.0;
               min: 70 80;
               fixed: 1 1;
               align: 0.5 0.5;
               rel1 {
                  relative: 0.5 0.5;
                  to: "arrow";
               }
               rel2 {
                  relative: 0.5 0.5;
                  to: "arrow";
               }
               color: 0 0 0 0;
            }
            BEAT_GENLIST_PART_MAP_START(-90.0, 0.0, 0.0)
            BEAT_GENLIST_PART_MAP_FINISH(0.0, 0.0, 0.0)            
         }
         part { name: "arrow";
            clip_to: "disclip";
            ignore_flags: ON_HOLD;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               min: 40 40;
               max: 40 40;
               fixed: 1 1;
               align: 1.0 0.5;
               aspect: 1.0 1.0; // needed?
               rel1.to_x: "elm.padding.right";
               rel2 {
                  relative: 0.0 1.0;
                  offset: 0 0;
                  to_x: "elm.padding.right";
               }
               image.normal: "00_button_expand_2_closed.png";
            }
            description { state: "default" 1.0;
               inherit: "default" 0.0;
               image.normal: "00_button_expand_2_closed_press.png";
            }
            description { state: "active" 0.0;
               inherit: "default" 0.0;
               image.normal: "00_button_expand_2_opened.png";
            }
            description { state: "active" 1.0;
               inherit: "default" 0.0;
               image.normal: "00_button_expand_2_opened_press.png";
            }
            BEAT_GENLIST_PART_MAP_START(-90.0, 0.0, 0.0)
            BEAT_GENLIST_PART_MAP_FINISH(0.0, 0.0, 0.0)
         }
         part { name: "elm.padding.arrow.left";
            type: RECT;
            scale: 1;
            description { state: "default" 0.0;
               min: 5 0;
               fixed: 1 0;
               visible: 0;
               align: 1.0 0.5;
               rel1.to: "arrow";
               rel2 {
                  relative: 0.0 1.0;
                  to: "arrow";
               }
            }
            BEAT_GENLIST_PART_MAP_START(-90.0, 0.0, 0.0)
            BEAT_GENLIST_PART_MAP_FINISH(0.0, 0.0, 0.0)
         }
         part { name: "elm.text";
            clip_to: "disclip";
            type: TEXT;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               align: 0.5 0.5;
               rel1 {
                  relative: 1.0 0.0;
                  to_x: "elm.swallow.pad";
               }
               rel2 {
                  relative: 0.0 1.0;
                  to_x: "elm.padding.arrow.left";
               }
               color: GENLIST_PART_TEXT_COLOR_INC;
               text {
                  font: "SLP:style=Roman";
                  size: 32;
                  min: 0 1;
                  align: 0.0 0.5;
               }
            }
            description { state: "selected" 0.0;
               inherit: "default" 0.0;
               color: 225 225 225 255;
            }
            BEAT_GENLIST_PART_MAP_START(-90.0, 0.0, 0.0)
            BEAT_GENLIST_PART_MAP_FINISH(0.0, 0.0, 0.0)
         }
         BEAT_GENLIST_PART_DISCLIP
      }
      programs {
         // signal: elm,state,%s,active
         //   a "check" item named %s went active
         // signal: elm,state,%s,passive
         //   a "check" item named %s went passive
         // default is passive
         program {
            name: "go_active";
            signal: "elm,state,selected";
            source: "elm";
            action: STATE_SET "selected" 0.0;
            target: "bg_image";
            target: "elm.text";
         }
         program {
            name: "go_passive";
            signal: "elm,state,unselected";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "bg_image";
            target: "elm.text";
            transition: LINEAR 0.1;
         }
         program {
            name: "go_disabled";
            signal: "elm,state,disabled";
            source: "elm";
            action: STATE_SET "disabled" 0.0;
            target: "disclip";
         }
         program {
            name: "go_enabled";
            signal: "elm,state,enabled";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "disclip";
         }
         program {
            name: "expand";
            signal: "mouse,up,1";
            source: "touch_arrow";
            action: SIGNAL_EMIT "elm,action,expand,toggle" "elm";
         }
         program {
            name: "arrow_down";
            signal: "mouse,down,1";
            source: "touch_arrow";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"arrow", st, 30, vl)
               if (vl == 0.0)
                  set_state(PART:"arrow", st, 1.0);
               else
                  set_state(PART:"arrow", st, 0.0);
            }
         }
         program { name: "arrow_out";
            signal: "mouse,out";
            source: "touch_arrow";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"arrow", st, 30, vl)
               set_state(PART:"arrow", st, 0.0);
            }
         }
         program {
            name: "go_expanded";
            signal: "elm,state,expanded";
            source: "elm";
            action: STATE_SET "active" 0.0;
            target: "arrow";
         }
         program {
            name: "go_contracted";
            signal: "elm,state,contracted";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "arrow";
         }
         program {
            BEAT_GENLIST_PROGRAM_MAP_ROTATE_START()
            target: "base";
            target: "elm.text";
            target: "touch_arrow";
            target: "arrow";            
            target: "elm.padding.arrow.left";
            target: "bg_image";
            target: "elm.swallow.pad";            
         }
         program {
            BEAT_GENLIST_PROGRAM_MAP_ROTATE_FINISH( 0.4 )
            target: "base";
            target: "elm.text";
            target: "touch_arrow";
            target: "arrow";
            target: "elm.padding.arrow.left";
            target: "elm.swallow.pad";            
            target: "bg_image";            
         }         
      }
   }

   group { name: "elm/genlist/item/expandable2_noshadow/default";
      alias: "elm/genlist/item_odd/expandable2_noshadow/default";

      data.item: "stacking" "above";
      data.item: "selectraise" "on";
      data.item: "labels" "elm.text";
      data.item: "icons" "elm.swallow.end";
      data.item: "treesize" "20";
      images {
         image: "00_list_bar_press_1x80.png" COMP;
      }
      parts {
         BEAT_GENLIST_PART_MAP_PERSPECTIVE_POINT()
         BEAT_GENLIST_PART_EXPANDABLE2_NOSHADOW_BASE( 80 )
         BEAT_GENLIST_PART_BG_IMAGE
         BEAT_GENLIST_PART_BOTTOM_LINE
         BEAT_GENLIST_PART_PADDING_LEFT( 15 )
         BEAT_GENLIST_PART_PADDING_RIGHT( 15 )
         BEAT_GENLIST_PART_EXPANDABLE_SWALLOW_PADDING 

         part { name: "elm.swallow.end";
            type: SWALLOW;
            scale: 1;
            description { state: "default" 0.0;
               fixed: 1 0;
               align: 1.0 0.5;
               rel1.to_x: "elm.padding.right";
               rel2 {
                  relative: 0.0  1.0;
                  to_x: "elm.padding.right";
               }
            }
            BEAT_GENLIST_PART_MAP_START(-90.0, 0.0, 0.0)
            BEAT_GENLIST_PART_MAP_FINISH(0.0, 0.0, 0.0)
         }
        part { name: "elm.text";
            clip_to: "disclip";
            type: TEXT;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               rel1 {
                  relative: 1.0  0.0;
                  offset: 0 0;
                  to_x: "elm.swallow.pad";
               }
               rel2 {
                  to_x: "elm.padding.right";
                  relative: 0.0  1.0;
                  offset:   0   0;
               }
               color: GENLIST_PART_TEXT_COLOR_INC;
               text {
                  font: "SLP:style=Roman";
                  size: 32;
                  min: 0 1;
                  align: 0.0 0.5;
               }
            }
            description { state: "selected" 0.0;
               inherit: "default" 0.0;
               color: 225 225 225 255;
            }
            BEAT_GENLIST_PART_MAP_START(-90.0, 0.0, 0.0)
            BEAT_GENLIST_PART_MAP_FINISH(0.0, 0.0, 0.0)
         }
         BEAT_GENLIST_PART_DISCLIP
      }
      programs {
         // signal: elm,state,%s,active
         //   a "check" item named %s went active
         // signal: elm,state,%s,passive
         //   a "check" item named %s went passive
         // default is passive
         program { name: "go_active";
            signal: "elm,state,selected";
            source: "elm";
            action: STATE_SET "selected" 0.0;
            target: "bg_image";
            target: "elm.text";
         }
         program { name: "go_passive";
            signal: "elm,state,unselected";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "bg_image";
            target: "elm.text";
            transition: LINEAR 0.1;
         }
         program { name: "go_disabled";
            signal: "elm,state,disabled";
            source: "elm";
            action: STATE_SET "disabled" 0.0;
            target: "disclip";
         }
         program { name: "go_enabled";
            signal: "elm,state,enabled";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "disclip";
         }
         program {
            BEAT_GENLIST_PROGRAM_MAP_ROTATE_START()
            target: "elm.text";
            target: "elm.swallow.end";
            target: "elm.swallow.pad";             
            target: "base";            
            target: "bg_image";            
         }
         program {
            BEAT_GENLIST_PROGRAM_MAP_ROTATE_FINISH( 0.4 )
            target: "elm.text";
            target: "elm.swallow.end";
            target: "elm.swallow.pad";                  
            target: "base";    
            target: "bg_image";
         }         
      }
   }

   group { name: "elm/genlist/item/expandable3/default";
      alias: "elm/genlist/item_odd/expandable3/default";

      data.item: "stacking" "above";
      data.item: "selectraise" "on";
      data.item: "labels" "elm.text";
      data.item: "icons" "elm.swallow.end";
      data.item: "treesize" "20";
      images {
         image: "00_list_bar_press_1x80.png" COMP;
         image: "00_list_expandable_2_bg.png" COMP;
      }
      parts {
         BEAT_GENLIST_PART_MAP_PERSPECTIVE_POINT()
         GENLIST_EXPANDABLE3_PART_MAP_BASE( 80 )
         GENLIST_EXPANDABLE3_PART_BG_IMAGE_INC
         BEAT_GENLIST_PART_BOTTOM_LINE
         BEAT_GENLIST_PART_PADDING_LEFT( 15 )
         BEAT_GENLIST_PART_PADDING_RIGHT( 15 )
         BEAT_GENLIST_PART_EXPANDABLE_SWALLOW_PADDING 

         part { name: "elm.swallow.end";
            type: SWALLOW;
            scale: 1;
            description { state: "default" 0.0;
               fixed: 1 0;
               align: 1.0 0.5;
               rel1.to_x: "elm.padding.right";
               rel2 {
                  relative: 0.0  1.0;
                  to_x: "elm.padding.right";
               }
            }
            BEAT_GENLIST_PART_MAP_START(-90.0, 0.0, 0.0)
            BEAT_GENLIST_PART_MAP_FINISH(0.0, 0.0, 0.0)
         }
        part { name: "elm.text";
            clip_to: "disclip";
            type: TEXT;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               rel1 {
                  relative: 1.0  0.0;
                  offset: 0 0;
                  to_x: "elm.swallow.pad";
               }
               rel2 {
                  to_x: "elm.padding.right";
                  relative: 0.0  1.0;
                  offset:   0   0;
               }
               color: GENLIST_PART_TEXT_COLOR_INC;
               text {
                  font: "SLP:style=Roman";
                  size: 32;
                  min: 0 1;
                  align: 0.0 0.5;
               }
            }
            description { state: "selected" 0.0;
               inherit: "default" 0.0;
               color: 225 225 225 255;
            }
            BEAT_GENLIST_PART_MAP_START(-90.0, 0.0, 0.0)
            BEAT_GENLIST_PART_MAP_FINISH(0.0, 0.0, 0.0)
         }
         BEAT_GENLIST_PART_DISCLIP
      }
      programs {
         // signal: elm,state,%s,active
         //   a "check" item named %s went active
         // signal: elm,state,%s,passive
         //   a "check" item named %s went passive
         // default is passive
         program { name: "go_active";
            signal: "elm,state,selected";
            source: "elm";
            action: STATE_SET "selected" 0.0;
            target: "bg_image";
            target: "elm.text";
         }
         program { name: "go_passive";
            signal: "elm,state,unselected";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "bg_image";
            target: "elm.text";
            transition: LINEAR 0.1;
         }
         program { name: "go_disabled";
            signal: "elm,state,disabled";
            source: "elm";
            action: STATE_SET "disabled" 0.0;
            target: "disclip";
         }
         program { name: "go_enabled";
            signal: "elm,state,enabled";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "disclip";
         }
         program {
            BEAT_GENLIST_PROGRAM_MAP_ROTATE_START()
            target: "base";
            target: "elm.text";
            target: "elm.swallow.end";
            target: "elm.swallow.pad";                 
            target: "bg_image";            
         }
         program {
            BEAT_GENLIST_PROGRAM_MAP_ROTATE_FINISH( 0.4 )
            target: "base";
            target: "elm.text";
            target: "elm.swallow.end";
            target: "elm.swallow.pad";                 
            target: "bg_image";            
         }         
      }
   }

   group { name: "elm/genlist/item/expandable3_noshadow/default";
      alias: "elm/genlist/item_odd/expandable3_noshadow/default";

      data.item: "stacking" "above";
      data.item: "selectraise" "on";
      data.item: "labels" "elm.text";
      data.item: "icons" "elm.swallow.end";
      data.item: "treesize" "20";
      images {
         image: "00_list_expandable_2_noshadow_bg.png" COMP;
         image: "00_list_bar_press_1x80.png" COMP;
      }
      parts {
         BEAT_GENLIST_PART_MAP_PERSPECTIVE_POINT()
         GENLIST_EXPANDABLE3_PART_MAP_BASE( 80 )
         GENLIST_EXPANDABLE3_NOSHADOW_PART_BG_IMAGE_INC
         BEAT_GENLIST_PART_BOTTOM_LINE
         BEAT_GENLIST_PART_PADDING_LEFT( 15 )
         BEAT_GENLIST_PART_PADDING_RIGHT( 15 )
         BEAT_GENLIST_PART_EXPANDABLE_SWALLOW_PADDING 

         part { name: "elm.swallow.end";
            type: SWALLOW;
            scale: 1;
            description { state: "default" 0.0;
               fixed: 1 0;
               align: 1.0 0.5;
               rel1.to_x: "elm.padding.right";
               rel2 {
                  relative: 0.0  1.0;
                  to_x: "elm.padding.right";
               }
            }
            BEAT_GENLIST_PART_MAP_START(-90.0, 0.0, 0.0)
            BEAT_GENLIST_PART_MAP_FINISH(0.0, 0.0, 0.0)
         }
         part { name: "elm.text";
            clip_to: "disclip";
            type: TEXT;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               rel1 {
                  relative: 1.0  0.0;
                  offset: 0 0;
                  to_x: "elm.swallow.pad";
               }
               rel2 {
                  to_x: "elm.padding.right";
                  relative: 0.0  1.0;
                  offset:   0   0;
               }
               color: GENLIST_PART_TEXT_COLOR_INC;
               text {
                  font: "SLP:style=Roman";
                  size: 32;
                  min: 0 1;
                  align: 0.0 0.5;
               }
            }
            description { state: "selected" 0.0;
               inherit: "default" 0.0;
               color: 225 225 225 255;
            }
            BEAT_GENLIST_PART_MAP_START(-90.0, 0.0, 0.0)
            BEAT_GENLIST_PART_MAP_FINISH(0.0, 0.0, 0.0)
         }
         BEAT_GENLIST_PART_DISCLIP
      }
      programs {
         // signal: elm,state,%s,active
         //   a "check" item named %s went active
         // signal: elm,state,%s,passive
         //   a "check" item named %s went passive
         // default is passive
         program { name: "go_active";
            signal: "elm,state,selected";
            source: "elm";
            action: STATE_SET "selected" 0.0;
            target: "bg_image";
            target: "elm.text";
         }
         program { name: "go_passive";
            signal: "elm,state,unselected";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "bg_image";
            target: "elm.text";
            transition: LINEAR 0.1;
         }
         program { name: "go_disabled";
            signal: "elm,state,disabled";
            source: "elm";
            action: STATE_SET "disabled" 0.0;
            target: "disclip";
         }
         program { name: "go_enabled";
            signal: "elm,state,enabled";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "disclip";
         }
         program {
            BEAT_GENLIST_PROGRAM_MAP_ROTATE_START()
            target: "base";
            target: "elm.text";
            target: "elm.swallow.end";
            target: "elm.swallow.pad";                 
            target: "bg_image";
         }
         program {
            BEAT_GENLIST_PROGRAM_MAP_ROTATE_FINISH( 0.4 )
            target: "base";
            target: "elm.text";
            target: "elm.swallow.end";
            target: "elm.swallow.pad";                 
            target: "bg_image";
         }         
      }
   }

   group { name: "elm/genlist/tree/default/default";

      alias: "elm/genlist/tree_odd/default/default";

      data.item: "stacking" "above";
      data.item: "selectraise" "on";
      data.item: "labels" "elm.text";
      data.item: "icons" "elm.swallow.icon elm.swallow.end";
      data.item: "treesize" "20";
      images {
         image: "00_list_bar_press_1x80.png" COMP;
         image: "00_button_expand_closed.png" COMP;
         image: "00_button_expand_closed_press.png" COMP;
         image: "00_button_expand_opened.png" COMP;
         image: "00_button_expand_opened_press.png" COMP;
      }
      parts {
         BEAT_GENLIST_PART_MAP_PERSPECTIVE_POINT()
         BEAT_GENLIST_PART_MAP_BASE( 80 )
         BEAT_GENLIST_PART_BG_IMAGE
         BEAT_GENLIST_PART_BOTTOM_LINE
         BEAT_GENLIST_PART_PADDING_LEFT( 15 )
         BEAT_GENLIST_PART_PADDING_RIGHT( 15 )
         part { name: "touch_arrow";
            type: RECT;
            clip_to: "disclip";
            ignore_flags: ON_HOLD;
            scale: 1;
            description { state: "default" 0.0;
               min: 70 80;
               fixed: 1 1;
               align: 0.5 0.5;
               rel1 {
                  relative: 0.5 0.5;
                  to: "arrow";
               }
               rel2 {
                  relative: 0.5 0.5;
                  to: "arrow";
               }
               color: 0 0 0 0;
            }
            BEAT_GENLIST_PART_MAP_START(-90.0, 0.0, 0.0)
            BEAT_GENLIST_PART_MAP_FINISH(0.0, 0.0, 0.0)
         }
         part { name: "arrow";
            clip_to: "disclip";
            ignore_flags: ON_HOLD;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               min: 40 40;
               max: 40 40;
               fixed: 1 1;
               align: 1.0 0.5;
               aspect: 1.0 1.0; // needed?
               rel1.to_x: "elm.padding.right";
               rel2 {
                  relative: 0.0 1.0;
                  offset: 0 0;
                  to_x: "elm.padding.right";
               }
               image.normal: "00_button_expand_closed.png";
            }
            description { state: "default" 1.0;
               inherit: "default" 0.0;
               image.normal: "00_button_expand_closed_press.png";
            }
            description { state: "active" 0.0;
               inherit: "default" 0.0;
               image.normal: "00_button_expand_opened.png";
            }
            description { state: "active" 1.0;
               inherit: "default" 0.0;
               image.normal: "00_button_expand_opened_press.png";
            }
            BEAT_GENLIST_PART_MAP_START(-90.0, 0.0, 0.0)
            BEAT_GENLIST_PART_MAP_FINISH(0.0, 0.0, 0.0)
         }
         part { name: "elm.padding.arrow.left";
            type: RECT;
            scale: 1;
            description { state: "default" 0.0;
               min: 5 0;
               fixed: 1 0;
               visible: 0;
               align: 1.0 0.5;
               rel1.to: "arrow";
               rel2 {
                  relative: 0.0 1.0;
                  to: "arrow";
               }
            }
            BEAT_GENLIST_PART_MAP_START(-90.0, 0.0, 0.0)
            BEAT_GENLIST_PART_MAP_FINISH(0.0, 0.0, 0.0)
         }
         part { name: "elm.text";
            clip_to: "disclip";
            type: TEXT;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               align: 0.5 0.5;
               rel1 {
                  relative: 1.0 0.0;
                  to_x: "elm.padding.left";
               }
               rel2 {
                  relative: 0.0 1.0;
                  to_x: "elm.padding.arrow.left";
               }
               color: GENLIST_PART_TEXT_COLOR_INC;
               text {
                  font: "SLP:style=Roman";
                  size: 32;
                  min: 0 1;
                  align: 0.0 0.5;
               }
            }
            BEAT_GENLIST_PART_MAP_START(-90.0, 0.0, 0.0)
            BEAT_GENLIST_PART_MAP_FINISH(0.0, 0.0, 0.0)
         }
         BEAT_GENLIST_PART_DISCLIP
      }
      programs {
         // signal: elm,state,%s,active
         //   a "check" item named %s went active
         // signal: elm,state,%s,passive
         //   a "check" item named %s went passive
         // default is passive
         program {
            name: "go_active";
            signal: "elm,state,selected";
            source: "elm";
            action: STATE_SET "selected" 0.0;
            target: "bg_image";
            target: "elm.text";
         }
         program {
            name: "go_passive";
            signal: "elm,state,unselected";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "bg_image";
            target: "elm.text";
            transition: LINEAR 0.1;
         }
         program {
            name: "go_disabled";
            signal: "elm,state,disabled";
            source: "elm";
            action: STATE_SET "disabled" 0.0;
            target: "disclip";
         }
         program {
            name: "go_enabled";
            signal: "elm,state,enabled";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "disclip";
         }
         program {
            name: "expand";
            signal: "mouse,up,1";
            source: "touch_arrow";
            action: SIGNAL_EMIT "elm,action,expand,toggle" "elm";
         }
         program {
            name: "arrow_down";
            signal: "mouse,down,1";
            source: "touch_arrow";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"arrow", st, 30, vl)
               if (vl == 0.0)
                  set_state(PART:"arrow", st, 1.0);
               else
                  set_state(PART:"arrow", st, 0.0);
            }
         }
         program { name: "arrow_out";
            signal: "mouse,out";
            source: "touch_arrow";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"arrow", st, 30, vl)
               set_state(PART:"arrow", st, 0.0);
            }
         }
         program {
            name: "go_expanded";
            signal: "elm,state,expanded";
            source: "elm";
            action: STATE_SET "active" 0.0;
            target: "arrow";
         }
         program {
            name: "go_contracted";
            signal: "elm,state,contracted";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "arrow";
         }
         program {
            BEAT_GENLIST_PROGRAM_MAP_ROTATE_START()
            target: "base";
            target: "elm.text";
            target: "touch_arrow";
            target: "arrow";
            target: "elm.padding.arrow.left";
            target: "bg_image";         
         }
         program {
            BEAT_GENLIST_PROGRAM_MAP_ROTATE_FINISH( 0.4 )
            target: "base";
            target: "elm.text";
            target: "touch_arrow";
            target: "arrow";
            target: "elm.padding.arrow.left";
            target: "bg_image";            
         }         
      }
   }

   group { name: "elm/genlist/item/subtree/default";

      alias: "elm/genlist/item_odd/subtree/default";

      data.item: "stacking" "above";
      data.item: "selectraise" "on";
      data.item: "labels" "elm.text";
      data.item: "icons" "elm.swallow.end";
      data.item: "treesize" "20";
      images {
         image: "00_list_bar_press_1x80.png" COMP;
         image: "00_list_expandable_bg.png" COMP;
      }
      parts {
         BEAT_GENLIST_PART_MAP_PERSPECTIVE_POINT()
         BEAT_GENLIST_PART_MAP_BASE( 80 )
         GENLIST_EXPANDABLE_PART_BG_IMAGE_INC
         BEAT_GENLIST_PART_BOTTOM_LINE
         BEAT_GENLIST_PART_PADDING_LEFT( 15 )
         BEAT_GENLIST_PART_PADDING_RIGHT( 15 )

         part { name: "elm.swallow.end";
            type: SWALLOW;
            scale: 1;
            description { state: "default" 0.0;
               fixed: 1 0;
               align: 1.0 0.5;
               rel1.to_x: "elm.padding.right";
               rel2 {
                  relative: 0.0  1.0;
                  to_x: "elm.padding.right";
               }
            }
            BEAT_GENLIST_PART_MAP_START(-90.0, 0.0, 0.0)
            BEAT_GENLIST_PART_MAP_FINISH(0.0, 0.0, 0.0)
         }
         part { name: "elm.text";
            clip_to: "disclip";
            type: TEXT;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               rel1 {
                  relative: 1.0  0.0;
                  offset: 0 0;
                  to_x: "elm.padding.left";
               }
               rel2 {
                  to_x: "elm.padding.right";
                  relative: 0.0  1.0;
                  offset:   0   0;
               }
               color: GENLIST_PART_TEXT_COLOR_INC;
               text {
                  font: "SLP:style=Roman";
                  size: 32;
                  min: 0 1;
                  align: 0.0 0.5;
               }
            }
            description { state: "selected" 0.0;
               inherit: "default" 0.0;
               color: 225 225 225 255;
            }
            BEAT_GENLIST_PART_MAP_START(-90.0, 0.0, 0.0)
            BEAT_GENLIST_PART_MAP_FINISH(0.0, 0.0, 0.0)
         }
         BEAT_GENLIST_PART_DISCLIP
      }
      programs {
         // signal: elm,state,%s,active
         //   a "check" item named %s went active
         // signal: elm,state,%s,passive
         //   a "check" item named %s went passive
         // default is passive
         program { name: "go_active";
            signal: "elm,state,selected";
            source: "elm";
            action: STATE_SET "selected" 0.0;
            target: "bg_image";
            target: "elm.text";
         }
         program { name: "go_passive";
            signal: "elm,state,unselected";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "bg_image";
            target: "elm.text";
            transition: LINEAR 0.1;
         }
         program { name: "go_disabled";
            signal: "elm,state,disabled";
            source: "elm";
            action: STATE_SET "disabled" 0.0;
            target: "disclip";
         }
         program { name: "go_enabled";
            signal: "elm,state,enabled";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "disclip";
         }
         program {
            BEAT_GENLIST_PROGRAM_MAP_ROTATE_START()
            target: "base";
            target: "elm.text";
            target: "elm.swallow.end";
            target: "bg_image";            
         }
         program {
            BEAT_GENLIST_PROGRAM_MAP_ROTATE_FINISH( 0.4 )
            target: "base";
            target: "elm.text";
            target: "elm.swallow.end";
            target: "bg_image";            
         }         
      }
   }
