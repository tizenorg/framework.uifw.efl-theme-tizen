/*
 *  Beat-theme
 *
 * Copyright (c) 2000 - 2010 Samsung Electronics Co., Ltd.
 *
 * Contact: Seokjae Jeong <seok.j.jeong@samsung.com>, Myoungwoon Roy Kim <Myoungwoon.kim@samsung.com>, Jeonghyun Yun <jh0506.yun@samsung.com>, Jaehwan Kim <jae.hwan.kim@samsung.com>, 
 * 		Chuneon Park <chuneon.park@samsung.com>, Juyung Seo <juyung.seo@samsung.com>, Woohyun Jung <wh0705.jung@samsung.com>, Myungjae Lee <mjae.lee@samsung.com>, Hyoyoung Chang <hyoyoung.chang@samsung.com>, 
 *		Hyunsil Park <hyunsil.park@samsung.com>, Sohyun Kim <anna1014.kim@samsung.com>, Seunggyun Kim <sgyun.kim@samsung.com>
 * 
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the
 * Free Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 * 
 * This library is distributed in the hope that it will be useful, but WITHOUT ANY
 * WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public
 * License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this library; if not, write to the Free Software Foundation, Inc., 51
 * Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
 *
 */

/*         
 * vim:ts=3
 */        

   #define EDIT_ICON_WIDTH 26
   #define EDIT_ICON_HEIGHT 26
   #define GENLIST_EDIT_CHECKBOX_WIDTH    EDIT_ICON_WIDTH
   #define GENLIST_EDIT_CHECKBOX_HEIGHT   EDIT_ICON_HEIGHT

   group { name: "elm/genlist/item/edit_control/default";
      alias: "elm/genlist/item_odd/edit_control/default";
      alias: "elm/genlist/item_compress/edit_control/default";
      alias: "elm/genlist/item_compress_odd/edit_control/default";

      data.item: "reorder" "reorder_icon";
      data.item: "insert" "insert_icon";
      data.item: "delete" "select_icon";
      data.item: "del_confirm" "elm.icon.del_confirm";
      data.item: "icon_width" 50;
      data.item: "del_button_style" "custom/red";
      data.item: "icons" "elm.swallow.end";
      data.item: "rename" "elm.swallow.edit_field_1line elm.swallow.edit_field_2line";
      
      images {
         image: "00_check_bg.png" COMP;
         image: "00_check_checking.png" COMP;
         image: "01_list_reorder_bg_above.png" COMP;
         image: "01_list_reorder_bg_below.png" COMP;
         image: "00_list_group_edit_field_middle.png" COMP;
         image: "00_reorder_group_list_bg.png" COMP;
         image: "00_list_body_bg.png" COMP;
      }
      parts {
         part { name: "base";
            type: RECT; 
            repeat_events: 1; 
            scale: 1; 
            description { state: "default" 0.0; 
               min: 0 70; 
               color: 0 0 0 0;
            }
         }
         BEAT_GENLIST_PART_PADDING_TOP( 0 )
         BEAT_GENLIST_PART_PADDING_BOTTOM( 0 )

         part { name: "elm.padding.left";
            type: RECT;
            scale: 1;
            description { state: "default" 0.0;
               min: 0 0;
               fixed: 1 0;
               visible: 0;
               rel2.relative: 0.0 1.0;
               align: 0.0 0.0;
            }
            description { state: "reorder" 0.0;
               inherit: "default" 0.0;
               min: 20 0;
               fixed: 1 0;
            }
         }

         BEAT_GENLIST_PART_PADDING_RIGHT( 10 )

         part { name: "reorder_left_image";
            clip_to: "disclip";
            mouse_events: 1;
            scale: 1;
            description { state: "default" 0.0;
               min: 15 0;
               fixed: 1 0;
               rel1 {
                  relative: 1.0 1.0;
                  to_x: "elm.padding.left";
                  to_y: "elm.padding.top";
               }
               rel2 {
                  relative: 1.0 1.0;
                  to_x: "elm.padding.left";
                  to_y: "elm.padding.bottom";
               }
               image.normal: "00_list_body_bg.png";
            }
            description { state: "reorder" 0.0;
               inherit: "default" 0.0;
               min: 15 0;
               fixed: 1 0;
               image.border: 0 0 13 13;
               image.normal: "00_reorder_group_list_bg.png";
            }
         }

         part { name: "elm.edit_bg";
            type: RECT;
            scale: 1;
            description { state: "default" 0.0;
               rel1 {
                  relative: 1.0 1.0;
                  to_x: "reorder_left_image";
                  to_y: "elm.padding.top";
               }
               rel2 {
                  relative: 1.0 0.0;
                  to_y: "elm.padding.bottom";
               }
             color: GENLIST_PART_BG_COLOR_INC;
            }
         }

         part { name: "check_bg";
            clip_to: "disclip";
            mouse_events: 1;
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               min: 0 26;
               fixed: 1 1;
               align: 0.0 0.5;
               rel1 {
                  relative: 1.0 0.5;
                  to_x: "reorder_left_image";
                  to_y: "base";
               }
               rel2 {
                  relative: 1.0 0.5;
                  to_x: "reorder_left_image";
                  to_y: "base";
               }
               image.normal: "00_check_bg.png";
            }
            description { state: "enabled" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               min: 26 26;

            }  
         }

         part { name: "check_checking";
            clip_to: "disclip";
            mouse_events: 1;
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               min: 26 26;
               fixed: 1 1;
               align: 0.0 0.5;
               rel1 {
                  relative: 1.0 0.5;
                  to_x: "reorder_left_image";
                  to_y: "base";
               }
               rel2 {
                  relative: 1.0 0.5;
                  to_x: "reorder_left_image";
                  to_y: "base";
               }
               image.normal: "00_check_checking.png";
            }
            description { state: "on_uncheck" 0.0;
               inherit: "default" 0.0;
               visible: 0;
            }
            description { state: "on_check" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }            
         }

         part { name: "check_bg_touch_area";
            type: RECT;
            mouse_events: 1;
            scale: 1;
            description { state: "default" 0.0;
               min: (GENLIST_EDIT_CHECKBOX_WIDTH+10) 0;
               fixed: 1 0;
               align: 0 0.5;
               rel1 { relative: 0 0; to_x: "check_bg"; }
               rel2 { relative: 0 1; to_x: "check_bg"; }
               color: 0 0 0 0;
            }
         }

         part { name: "original_edc";
            clip_to: "disclip";
            type: SWALLOW;
            mouse_events: 1;
            scale: 1;
            description { state: "default" 0.0;
               rel1 {
                  relative: 1.0 1.0;
                  to_x: "check_bg";
                  to_y: "elm.padding.top";
               }
               rel2 {
                  relative: 0.2 0.0;
                  to_x: "elm.swallow.end";
                  to_y: "elm.padding.bottom";
               }
            }
          description { state: "disabled" 0.0;
             inherit: "default" 0.0;
             visible: 0;
          }
        }

       part { name: "elm.swallow.end";
          type: SWALLOW;
          scale: 1;
          description { state: "default" 0.0;
             fixed: 1 0;
             align: 1.0 0.5;
             visible: 1;
             rel1.to_x: "elm.padding.right";
             rel2 {
                relative: 0.0  1.0;
                to_x: "elm.padding.right";
             }
          }
          description { state: "disable" 0.0;
             inherit: "default" 0.0;
             visible: 0;
          }
       }

       part { name: "elm.swallow.edit_field_bg";
         type: IMAGE;
	 mouse_events: 1;
         scale: 1;
         description { state: "default" 0.0;
            visible: 0;
            color: 255 255 255 0;
            rel1 {
              relative: 1.0 0.0;
              to_x: "check_bg";
              offset: 0 1;
            }
            rel2 {
              relative: 1.0 1.0;
              offset: -1 -6;
            }
            image.border: 13 13 9 9;
            image.normal: "00_list_group_edit_field_middle.png";
         }
         description { state: "enabled" 0.0;
             inherit: "default" 0.0;
             visible: 1;
             color: 255 255 255 255;
          }
       }

       part { name: "elm.swallow.edit_field_1line";
         type: SWALLOW;
         mouse_events: 1;
         scale: 1;
         description { state: "default" 0.0;
            visible: 0;
            rel1 {
               relative: 1.0 0.0;
               to_x: "check_bg";
               offset: 0 1;
            }
            rel2 {
               relative: 0.98 1.0;
            }
          }
          description { state: "enabled" 0.0;
             inherit: "default" 0.0;
             visible: 1;
          }      
       }

       part { name: "bottom_line";
          type: RECT;
          clip_to: "disclip";
          mouse_events: 0;
          description { state: "default" 0.0;
             min: 0 0;
             fixed: 0 1;
             visible: 1;
             color: GENLIST_EDIT_PART_LINE_INC;
             rel1 {
                relative: 0.0 1.0;
                to_x: "check_bg";
                offset: 0 -1;
             }
          }
          description {
              state: "hide" 0.0;
              inherit: "default" 0.0;
              visible: 0;
          }
          description {
              state: "reorder" 0.0;
              inherit: "default" 0.0;
              min: 0 5;
              fixed: 0 1;
          }
       }
       part { name: "reorder_glow_above";
          mouse_events: 0;
          description { state: "default" 0.0;
             visible: 0;
             rel1.relative: 0.0 -0.3;
             rel2.relative: 1.0 0.0;
             image {
                normal: "01_list_reorder_bg_above.png";
             }
             fill.smooth: 0;
          }
          description { state: "reorder" 0.0;
             inherit: "default" 0.0;
             visible: 1;
          }
       }
       part { name: "reorder_glow_below";
          mouse_events: 0;
          description { state: "default" 0.0;
             visible: 0;
             rel1.relative: 0.0 1.0;
             rel2.relative: 1.0 1.3;
             image {
                normal: "01_list_reorder_bg_below.png";
             }
             fill.smooth: 0;
          }
          description { state: "reorder" 0.0;
             inherit: "default" 0.0;
             visible: 1;
          }
       }

       BEAT_GENLIST_PART_DISCLIP
      }
      programs {

         // reorder signal
         program { name: "reorder_enable";
            signal: "elm,state,reorder_enable";
            source: "elm";
            action: STATE_SET "reorder" 0.0;
            target: "reorder_left_image";
            target: "elm.padding.left";
            target: "bottom_line";
         }
         program { name: "reorder_disable";
            signal: "elm,state,reorder_disable";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "reorder_left_image";
            target: "elm.padding.left";
            target: "bottom_line";
         }
         program { name: "reorder_enable_effect";
            signal: "elm,state,reorder_enable_effect";
            source: "elm";
            action: STATE_SET "reorder" 0.0;
            target: "reorder_left_image";
            after: "reorder_enable_padding_effect";
         }
         program { name: "reorder_disable_effect";
            signal: "elm,state,reorder_disable_effect";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "reorder_left_image";
            after: "reorder_disable_padding_effect";          
         }
         program { name: "reorder_enable_padding_effect";
            source: "elm";
            action: STATE_SET "reorder" 0.0;
            transition: DECELERATE 0.5;
            target: "elm.padding.left";
            target: "bottom_line";
         }
         program { name: "reorder_disable_padding_effect";
            signal: "elm,state,reorder_disable";
            source: "elm";
            action: STATE_SET "default" 0.0;
            transition: DECELERATE 0.5;
            target: "elm.padding.left";
            target: "bottom_line";      
         }

         // checkbox
         program {
            name:    "on_select";
            signal:  "mouse,clicked,1";
            source:  "check_bg_touch_area";
            action:  SIGNAL_EMIT "elm,action,item,select" "elm";
         }
         program {
            name:    "enable_select_mode";
            signal:  "elm,state,sel,enable";
            source:  "elm";
            action:  STATE_SET "enabled" 0.0;
            target:  "check_bg";
         }
         program {
            name:    "disable_select_mode";
            signal:  "elm,state,sel,disable";
            source:  "elm";
            action:  STATE_SET "default" 0.0;
            target:  "check_bg";
         }
         program {
            name:    "enable_select_effect_mode";
            signal:  "elm,state,sel,enable_effect";
            source:  "elm";
            action:  STATE_SET "enabled" 0.0;
            transition: DECELERATE 0.5;
            target:  "check_bg";
         }
         program {
            name:    "disable_select_effect_mode";
            signal:  "elm,state,sel,disable_effect";
            source:  "elm";
            action:  STATE_SET "default" 0.0;
            transition: DECELERATE 0.5;
            target:  "check_bg";
         }
         program {
            name:    "enable_delete";
            signal:  "elm,state,sel_uncheck";
            source:  "elm";
            action:  STATE_SET "on_uncheck" 0.0;
            target:  "check_checking";
         }
         program {
            name:    "select_icon_check_mode";
            signal:  "elm,state,sel_check";
            source:  "elm";
            action:  STATE_SET "on_check" 0.0;
            target:  "check_checking";
         }

        // reorder glow
        program {
            name:    "show_reorder_glow";
            signal:  "elm,action,item,reorder_start";
            source:  "elm";
            action:  STATE_SET "reorder" 0.0;
            target:  "reorder_glow_above";
            target:  "reorder_glow_below";
        }
        program {
            name:    "hide_reorder_glow";
            signal:  "elm,action,item,reorder_end";
            source:  "elm";
            action:  STATE_SET "default" 0.0;
            target:  "reorder_glow_above";
            target:  "reorder_glow_below";
        }

        // rename
        program {
            name:    "enable_rename_mode";
            signal:  "elm,state,rename,enable";
            source:  "elm";
            action:  STATE_SET "enabled" 0.0;
            transition: DECELERATE 0.3;
            target:  "elm.swallow.edit_field_bg";
            target:  "elm.swallow.edit_field_1line";
        }
        program {
            name:    "disable_rename_mode";
            signal:  "elm,state,rename,disable";
            source:  "elm";
            action:  STATE_SET "default" 0.0;
            transition: DECELERATE 0.3;
            target:  "elm.swallow.edit_field_bg";
            target:  "elm.swallow.edit_field_1line";
        }
      }
   }

   group { name: "elm/genlist/item/select_all/default";
      alias: "elm/genlist/item_odd/select_all/default";
      alias: "elm/genlist/item_compress/select_all/default";
      alias: "elm/genlist/item_compress_odd/select_all/default";

      data.item: "stacking" "above";
      data.item: "selectraise" "on";
      data.item: "labels" "elm.text";

      parts {
         part { name: "base";
            type: RECT;
            repeat_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               min: 0 70;
               color: GENLIST_PART_BG_COLOR_INC;
            }
         }

         part { name: "bg";
            type: RECT;
            clip_to: "disclip";
            repeat_events: 0;
            mouse_events: 0;
            description { state: "default" 0.0;
               color: GENLIST_PART_SELECT_ALL_BG_COLOR_INC; 
            }
         }

         BEAT_GENLIST_PART_BG_IMAGE
         BEAT_GENLIST_PART_BOTTOM_LINE
         BEAT_GENLIST_PART_PADDING_LEFT( 10 )
         BEAT_GENLIST_PART_PADDING_RIGHT( 15 )
         part { name: "elm.swallow.end";
            clip_to: "disclip";
            type: SWALLOW;
            scale: 1;
            description { state: "default" 0.0;
               fixed: 1 0;
               align: 1.0 0.5;
               rel1.to_x: "elm.padding.right";
               rel2 {
                  relative: 0.0  1.0;
                  to_x: "elm.padding.right";
               }
            }
         }
         part { name: "elm.text";
            clip_to: "disclip";
            type: TEXT;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               rel1 {
                  relative: 1.0  0.0;
                  offset: 20 0;
                  to_x: "check_bg";
               }
               rel2 {
                  to_x: "elm.swallow.end";
                  relative: 0.0  1.0;
                  offset:   20   0;
               }
               color: GENLIST_PART_TEXT_COLOR_INC;
               text {
                  font: "SLP:style=Roman";
                  size: 32;
                  min: 0 1;
                  align: 0.0 0.5;
                  text: "Select All";
               }
            }
            description { state: "selected" 0.0;
               inherit: "default" 0.0;
               color: 225 225 225 255;
            }
         }
         part { name: "check_bg";
            clip_to: "disclip";
            mouse_events: 1;
            scale: 1;
            description { state: "default" 0.0;
               min: 26 26;
               fixed: 1 1;
               align: 0.0 0.5;
               rel1 {
                  relative: 1.0 0.5;
                  to_x: "elm.padding.left";
                  to_y: "base";
               }
               rel2 {
                  relative: 1.0 0.5;
                  to_x: "elm.padding.left";
                  to_y: "base";
               }
               image.normal: "00_check_bg.png";
            }
         }

         part { name: "check_checking";
            clip_to: "disclip";
            mouse_events: 1;
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               min: 26 26;
               fixed: 1 1;
               align: 0.0 0.5;
               rel1 {
                  relative: 1.0 0.5;
                  to_x: "elm.padding.left";
                  to_y: "base";
               }
               rel2 {
                  relative: 1.0 0.5;
                  to_x: "elm.padding.left";
                  to_y: "base";
               }
               image.normal: "00_check_checking.png";
            }
            description { state: "on_uncheck" 0.0;
               inherit: "default" 0.0;
               visible: 0;
            }
            description { state: "on_check" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }

         part { name: "check_bg_touch_area";
            type: RECT;
            mouse_events: 1;
            scale: 1;
            description { state: "default" 0.0;
               min: (GENLIST_EDIT_CHECKBOX_WIDTH+10) 0;
               fixed: 1 0;
               align: 0 0.5;
               rel1 { relative: 0 0; to_x: "check_bg"; }
               rel2 { relative: 0 1; to_x: "check_bg"; }
               color: 0 0 0 0;
            }
         }

         BEAT_GENLIST_PART_DISCLIP
      }
      programs {
        program {
           name:    "enable_select_check";
           signal:  "elm,state,sel_check";
           source:  "elm";
           action:  STATE_SET "on_check" 0.0;
           target:  "check_checking";
        }   
        program {
           name:    "enable_select_uncheck";
           signal:  "elm,state,sel_uncheck";
           source:  "elm";
           action:  STATE_SET "on_uncheck" 0.0;
           target:  "check_checking";
        }           
         program {
            name:    "on_mouse_click";
            signal:  "mouse,click,1";
            source:  "check_bg_touch_area";
            action:  SIGNAL_EMIT "elm,action,select,click" "elm";
         } 
      }
   }
