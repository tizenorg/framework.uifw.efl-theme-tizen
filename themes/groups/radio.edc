/*
 *  nBeat-theme
 *
 * Copyright (c) 2000 - 2010 Samsung Electronics Co., Ltd.
 *
 * Contact: Seokjae Jeong <seok.j.jeong@samsung.com>, Myoungwoon Roy Kim <Myoungwoon.kim@samsung.com>, Jeonghyun Yun <jh0506.yun@samsung.com>, Jaehwan Kim <jae.hwan.kim@samsung.com>, 
 * 		Chuneon Park <chuneon.park@samsung.com>, Juyung Seo <juyung.seo@samsung.com>, Woohyun Jung <wh0705.jung@samsung.com>, Myungjae Lee <mjae.lee@samsung.com>, Hyoyoung Chang <hyoyoung.chang@samsung.com>, 
 *		Hyunsil Park <hyunsil.park@samsung.com>, Sohyun Kim <anna1014.kim@samsung.com>, Seunggyun Kim <sgyun.kim@samsung.com>
 * 
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the
 * Free Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 * 
 * This library is distributed in the hope that it will be useful, but WITHOUT ANY
 * WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public
 * License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this library; if not, write to the Free Software Foundation, Inc., 51
 * Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
 *
 */

#define RADIO_STATE_DEFAULT 0
#define RADIO_STATE_VISIBLE 1
#define RADIO_STATE_DISABLED_VISIBLE 2
#define RADIO_STATE_DISABLED 3

   styles {
      style { name: "radio_label_textblock_style";
         base: "font=SLP:style=Medium font_size=14 color=#ffffff wrap=char";
         tag: "br" "\n";
         tag: "ps" "ps";
         tag: "hilight" "+ font=SLP:style=Bold";
         tag: "b" "+ font=SLP:style=Bold";
         tag: "whitecolor" "+ color=#ffffff";
         tag: "tab" "\t";
      }
      style { name: "radio_label_textblock_disabled_style";
         base: "font=SLP:style=Medium font_size=14 color=#888888 color3=#000000 wrap=char";
         tag: "br" "\n";
         tag: "ps" "ps";
         tag: "hilight" "+ font=SLP:style=Bold";
         tag: "b" "+ font=SLP:style=Bold";
         tag: "whitecolor" "+ color=#ffffff";
         tag: "tab" "\t";
      }
   }

///////////////////////////////////////////////////////////////////////////////////////
#define RADIO_STYLE_DEFAULT(style_name, min_width, min_height) \
   group { name: "elm/radio/base/"style_name; \
      images { \
         image: "00_button_radio_normal1.png" COMP; \
         image: "00_button_radio_normal2.png" COMP; \
         image: "00_button_radio_press1.png" COMP; \
         image: "00_button_radio_press2.png" COMP; \
      } \
      script { \
         public radio_state = RADIO_STATE_DEFAULT; \
      } \
      parts { \
         part { name: "back_bg"; \
            type: RECT; \
            mouse_events: 1; \
            scale: 1; \
            description { state: "default" 0.0; \
               rel2.relative: 0.0 1.0; \
               align: 0 0.5; \
               min: min_width min_height; \
               fixed: 1 0; \
               visible: 1; \
               color: 0 0 0 0; \
            } \
         } \
         part { name: "bg"; \
            mouse_events: 1; \
            scale: 1; \
            type: RECT; \
            description { state: "default" 0.0; \
               rel1{ to: "back_bg"; } \
               rel2{ to: "back_bg"; } \
               fixed: 1 1; \
               align: 0.5 0.5; \
               min: 26 26; \
               max: 26 26; \
               color: 0 0 0 0; \
            } \
         } \
         part { name: "radio"; \
            mouse_events: 0; \
            scale: 1; \
            description { state: "default" 0.0; \
               rel1 { \
                  to: "bg"; \
                  offset: 0 0; \
               } \
               rel2 { \
                  to: "bg"; \
                  offset: 0 0; \
               } \
               visible: 1; \
               color: 255 255 255 255; \
               image.normal: "00_button_radio_normal2.png"; \
            } \
            description { state: "visible" 0.0; \
               inherit: "default" 0.0; \
               image.normal: "00_button_radio_normal1.png"; \
               color: 255 255 255 255; \
            } \
            description { state: "pressed" 0.0; \
               inherit: "default" 0.0; \
               image.normal: "00_button_radio_press2.png"; \
               color: 255 255 255 255; \
            } \
            description { state: "pressed_visible" 0.0; \
               inherit: "default" 0.0; \
               image.normal: "00_button_radio_press1.png"; \
               color: 255 255 255 255; \
            } \
            description { state: "disabled" 0.0; \
               inherit: "default" 0.0; \
               color: 255 255 255 128; \
            } \
            description { state: "disabled_visible" 0.0; \
               inherit: "visible" 0.0; \
               color: 255 255 255 128; \
            } \
         } \
         part { name: "elm.swallow.content"; \
            type: SWALLOW; \
            description { state: "default" 0.0; \
               fixed: 1 0; \
               visible: 0; \
               color: 255 255 255 255; \
               align: 0.0 0.5; \
               rel1.to_x: "bg"; \
               rel1.relative: 1.0 0.0; \
               rel1.offset: 1 1; \
               rel2.to_x: "bg"; \
               rel2.relative: 1.0 1.0; \
               rel2.offset: 2 -2; \
            } \
            description { state: "visible" 0.0; \
               inherit: "default" 0.0; \
               fixed: 1 1; \
               visible: 1; \
               aspect: 1.0 1.0; \
               aspect_preference: VERTICAL; \
            } \
            description { state: "disabled" 0.0; \
               inherit: "default" 0.0; \
               color: 128 128 128 128; \
            } \
            description { state: "disabled_visible" 0.0; \
               inherit: "default" 0.0; \
               color: 128 128 128 128; \
               fixed: 1 1; \
               visible: 1; \
               aspect: 1.0 1.0; \
            } \
         } \
         part { name: "elm.text"; \
            type: TEXTBLOCK; \
            mouse_events: 0; \
            scale: 1; \
            description { state: "default" 0.0; \
               visible: 0; \
               fixed: 0 1; \
               rel1 { relative: 1.0 0.5; offset: 1 1; to_x: "elm.swallow.content"; } \
               rel2 { relative: 1.0 0.5; offset: -2 -2; } \
               color: 255 255 255 255; \
               align: 0.0 0.5; \
               text { \
                  style: "radio_label_textblock_style"; \
                  min: 0 0; \
               } \
            } \
            description { state: "visible" 0.0; \
               inherit: "default" 0.0; \
               visible: 1; \
               text.min: 1 1; \
            } \
            description { state: "disabled" 0.0; \
               inherit: "default" 0.0; \
            } \
            description { state: "disabled_visible" 0.0; \
               inherit: "default" 0.0; \
               visible: 1; \
               text { \
                  style: "radio_label_textblock_disabled_style"; \
                  min: 1 1; \
               } \
            } \
         } \
         part { name: "over1"; \
            type: RECT; \
            ignore_flags: ON_HOLD; \
            description { state: "default" 0.0; \
               color: 0 0 0 0; \
            } \
         } \
         part { name: "over2"; \
            type: RECT; \
            repeat_events:1; \
            description { state: "default" 0.0; \
               color: 0 0 0 0; \
            } \
         } \
         part { name: "disabler"; \
            type: RECT; \
            description { state: "default" 0.0; \
               color: 0 0 0 0; \
               visible: 0; \
            } \
            description { state: "disabled" 0.0; \
               inherit: "default" 0.0; \
               visible: 1; \
               color: 0 0 0 0; \
            } \
         } \
      } \
      programs { \
         program { name: "click"; \
            signal: "mouse,clicked,1"; \
            source: "over1"; \
            action: SIGNAL_EMIT "elm,action,radio,toggle" ""; \
         } \
         program { name: "mouse_up"; \
            signal: "mouse,up,1"; \
            source: "over2"; \
            after: "bg_radio_normal"; \
         } \
         program { name: "bg_radio_normal"; \
            script { \
            new st[31]; \
               new Float:vl; \
               get_state(PART:"radio", st, 30, vl); \
               if(get_int(radio_state) == RADIO_STATE_VISIBLE) \
                 set_state(PART:"radio", "visible", 0.0); \
               else if(get_int(radio_state) == RADIO_STATE_DEFAULT) \
                 set_state(PART:"radio", "default", 0.0); \
               else \
                 set_state(PART:"radio", "disabled_visible", 0.0); \
            } \
         } \
         program { name: "mouse,out"; \
            signal: "mouse,out"; \
            source: "over2"; \
            script { \
               if(get_int(radio_state) == RADIO_STATE_VISIBLE) \
                 set_state(PART:"radio", "visible", 0.0); \
               else \
                 set_state(PART:"radio", "default", 0.0); \
            } \
         } \
         program { name: "pressed"; \
            signal: "mouse,down,1"; \
            source: "over2"; \
            script { \
               new st[31]; \
               new Float:vl; \
               get_state(PART:"radio", st, 30, vl); \
               if (!strcmp(st, "default")) \
                 set_state(PART:"radio", "pressed", 0.0); \
            } \
         } \
         program { name: "radio_on"; \
            signal: "elm,state,radio,on"; \
            source: "elm"; \
            script { \
               set_int(radio_state, RADIO_STATE_VISIBLE); \
               set_state(PART:"radio", "visible", 0.0); \
            } \
         } \
         program { name: "radio_off"; \
            signal: "elm,state,radio,off"; \
            source: "elm"; \
            script { \
               set_int(radio_state, RADIO_STATE_DEFAULT); \
               set_state(PART:"radio", "default", 0.0); \
            } \
         } \
         program { name: "text_show"; \
            signal: "elm,state,text,visible"; \
            source: "elm"; \
            action:  STATE_SET "visible" 0.0; \
            target: "elm.text"; \
         } \
         program { name: "text_hide"; \
            signal: "elm,state,text,hidden"; \
            source: "elm"; \
            action:  STATE_SET "default" 0.0; \
            target: "elm.text"; \
         } \
         program { name: "icon_show"; \
            signal: "elm,state,icon,visible"; \
            source: "elm"; \
            action:  STATE_SET "visible" 0.0; \
            target: "elm.swallow.content"; \
         } \
         program { name: "icon_hide"; \
            signal: "elm,state,icon,hidden"; \
            source: "elm"; \
            action:  STATE_SET "default" 0.0; \
            target: "elm.swallow.content"; \
         } \
         program { name: "disable"; \
            signal: "elm,state,disabled"; \
            source: "elm"; \
            action: STATE_SET "disabled" 0.0; \
            target: "disabler"; \
            after: "disable_text"; \
         } \
         program { name: "disable_text"; \
            script { \
               new st[31]; \
               new Float:vl; \
               get_state(PART:"elm.text", st, 30, vl); \
               if (!strcmp(st, "visible")) \
               set_state(PART:"elm.text", "disabled_visible", 0.0); \
               else \
               set_state(PART:"elm.text", "disabled", 0.0); \
               get_state(PART:"elm.swallow.content", st, 30, vl); \
               if (!strcmp(st, "visible")) \
                  set_state(PART:"elm.swallow.content", "disabled_visible", 0.0); \
               else \
                  set_state(PART:"elm.swallow.content", "disabled", 0.0); \
               get_state(PART:"radio", st, 30, vl); \
               if (!strcmp(st, "visible")) \
               { \
                  set_state(PART:"radio", "disabled_visible", 0.0); \
                  set_int(radio_state, RADIO_STATE_DISABLED_VISIBLE); \
                } \
               else \
               { \
                  set_state(PART:"radio", "disabled", 0.0); \
                  set_int(radio_state, RADIO_STATE_DISABLED); \
               } \
            } \
         } \
         program { name: "enable"; \
            signal: "elm,state,enabled"; \
            source: "elm"; \
            action: STATE_SET "default" 0.0; \
            target: "disabler"; \
            after: "enable_text"; \
         } \
         program { name: "enable_text"; \
            script { \
               new st[31]; \
               new Float:vl; \
               get_state(PART:"elm.text", st, 30, vl); \
               if (!strcmp(st, "disabled_visible")) \
                  set_state(PART:"elm.text", "visible", 0.0); \
               else \
                  set_state(PART:"elm.text", "default", 0.0); \
               get_state(PART:"elm.swallow.content", st, 30, vl); \
               if (!strcmp(st, "disabled_visible")) \
                  set_state(PART:"elm.swallow.content", "visible", 0.0); \
               else \
                  set_state(PART:"elm.swallow.content", "default", 0.0); \
               get_state(PART:"radio", st, 30, vl); \
               if (!strcmp(st, "disabled_visible")) \
               { \
                  set_state(PART:"radio", "visible", 0.0); \
                  set_int(radio_state, RADIO_STATE_VISIBLE); \
               } \
               else \
               { \
                  set_state(PART:"radio", "default", 0.0); \
                  set_int(radio_state, RADIO_STATE_DEFAULT); \
               } \
            } \
         } \
      } \
   }

///////////////////////////////////////////////////////////////////////////////////////
RADIO_STYLE_DEFAULT("default", 26, 26)

///////////////////////////////////////////////////////////////////////////////////////
RADIO_STYLE_DEFAULT("default/extended", 50, 50)

#undef RADIO_STATE_DEFAULT
#undef RADIO_STATE_VISIBLE
#undef RADIO_STATE_DISABLED_VISIBLE
#undef RADIO_STATE_DISABLED
