/*
 *  nBeat-theme
 *
 * Copyright (c) 2000 - 2010 Samsung Electronics Co., Ltd.
 *
 * Contact: Seokjae Jeong <seok.j.jeong@samsung.com>, Myoungwoon Roy Kim <Myoungwoon.kim@samsung.com>, Jeonghyun Yun <jh0506.yun@samsung.com>, Jaehwan Kim <jae.hwan.kim@samsung.com>, 
 * 		Chuneon Park <chuneon.park@samsung.com>, Juyung Seo <juyung.seo@samsung.com>, Woohyun Jung <wh0705.jung@samsung.com>, Myungjae Lee <mjae.lee@samsung.com>, Hyoyoung Chang <hyoyoung.chang@samsung.com>, 
 *		Hyunsil Park <hyunsil.park@samsung.com>, Sohyun Kim <anna1014.kim@samsung.com>, Seunggyun Kim <sgyun.kim@samsung.com>
 * 
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the
 * Free Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 * 
 * This library is distributed in the hope that it will be useful, but WITHOUT ANY
 * WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public
 * License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this library; if not, write to the Free Software Foundation, Inc., 51
 * Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
 *
 */

   ///////////////////////////////////////////////////////////////////////////////
   group { name: "elm/map/base/default";
      script {
         public sbvis_v, sbvis_h, sbnever_v, sbalways_v, sbalways_h, sbvis_timer;
         public timer0(val) {
            new v;
            v = get_int(sbvis_v);
            if (v) {
               v = get_int(sbalways_v);
               if (!v) {
                  emit("do-hide-vbar", "");
                  set_int(sbvis_v, 0);
               }
            }
            v = get_int(sbvis_h);
            if (v) {
               v = get_int(sbalways_h);
               if (!v) {
                  emit("do-hide-hbar", "");
                  set_int(sbvis_h, 0);
               }
            }
            set_int(sbvis_timer, 0);
            return 0;
         }
      }
      images {
	 image: "00_scroll_bar.png" COMP;
         image: "bt_sm_shine.png" COMP;
         image: "bt_sm_hilight.png" COMP;
         image: "sb_runnerh.png" COMP;
         image: "sb_runnerv.png" COMP;
           image: "00_winset_list_process_01.png" COMP;
           image: "00_winset_list_process_02.png" COMP;
           image: "00_winset_list_process_03.png" COMP;
           image: "00_winset_list_process_04.png" COMP;
           image: "00_winset_list_process_05.png" COMP;
           image: "00_winset_list_process_06.png" COMP;
           image: "00_winset_list_process_07.png" COMP;
           image: "00_winset_list_process_08.png" COMP;
           image: "00_winset_list_process_09.png" COMP;
           image: "00_winset_list_process_10.png" COMP;
           image: "00_winset_list_process_11.png" COMP;
           image: "00_winset_list_process_12.png" COMP;
           image: "00_winset_list_process_13.png" COMP;
           image: "00_winset_list_process_14.png" COMP;
           image: "00_winset_list_process_15.png" COMP;
           image: "00_winset_list_process_16.png" COMP;
           image: "00_winset_list_process_17.png" COMP;
           image: "00_winset_list_process_18.png" COMP;
           image: "00_winset_list_process_19.png" COMP;
           image: "00_winset_list_process_20.png" COMP;
           image: "00_winset_list_process_21.png" COMP;
           image: "00_winset_list_process_22.png" COMP;
           image: "00_winset_list_process_23.png" COMP;
           image: "00_winset_list_process_24.png" COMP;
           image: "00_winset_list_process_25.png" COMP;
           image: "00_winset_list_process_26.png" COMP;
           image: "00_winset_list_process_27.png" COMP;
           image: "00_winset_list_process_28.png" COMP;
           image: "00_winset_list_process_29.png" COMP;
           image: "00_winset_list_process_30.png" COMP;
      }
      parts {
         part { name: "bg";
            type: RECT;
            scale: 1;
            description { state: "default" 0.0;
               rel1.offset: 0 0;
               rel2.offset: -1 -1;
               color: 255 255 255 0;
            }
         }
         part { name: "clipper";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               rel1.to: "bg";
               rel2.to: "bg";
            }
         }
         part { name: "elm.swallow.content";
            clip_to: "clipper";
            type: SWALLOW;
            scale: 1;
            description { state: "default" 0.0;
               rel1.offset: 0 0;
               rel2.offset: -1 -1;
            }
         }
           part { name: "busy_clip";
               type: RECT;
               mouse_events: 0;
               description { state: "default" 0.0;
                   visible: 0;
                   color: 255 255 255 0;
               }
               description { state: "active" 0.0;
                   visible: 1;
                   color: 255 255 255 255;
               }
           }
           part { name: "busy";
               clip_to: "busy_clip";
               mouse_events: 0;
               description { state: "default" 0.0;
                   fixed: 1 1;
                   min: 32 32;
                   aspect: 1.0 1.0;
                   align: 1.0 1.0;
                   aspect_preference: BOTH;
                   rel1 {
                       relative: 0.9 0.9;
                       offset:   -9 -9;
                   }
                   rel2 {
                       relative: 0.9 0.9;
                       offset:   -9 -9;
                   }
                   image {
                       normal: "00_winset_list_process_30.png";
                       tween:  "00_winset_list_process_01.png";
                       tween:  "00_winset_list_process_02.png";
                       tween:  "00_winset_list_process_03.png";
                       tween:  "00_winset_list_process_04.png";
                       tween:  "00_winset_list_process_05.png";
                       tween:  "00_winset_list_process_06.png";
                       tween:  "00_winset_list_process_07.png";
                       tween:  "00_winset_list_process_08.png";
                       tween:  "00_winset_list_process_09.png";
                       tween:  "00_winset_list_process_10.png";
                       tween:  "00_winset_list_process_11.png";
                       tween:  "00_winset_list_process_12.png";
                       tween:  "00_winset_list_process_13.png";
                       tween:  "00_winset_list_process_14.png";
                       tween:  "00_winset_list_process_15.png";
                       tween:  "00_winset_list_process_16.png";
                       tween:  "00_winset_list_process_17.png";
                       tween:  "00_winset_list_process_18.png";
                       tween:  "00_winset_list_process_19.png";
                       tween:  "00_winset_list_process_20.png";
                       tween:  "00_winset_list_process_21.png";
                       tween:  "00_winset_list_process_22.png";
                       tween:  "00_winset_list_process_23.png";
                       tween:  "00_winset_list_process_24.png";
                       tween:  "00_winset_list_process_25.png";
                       tween:  "00_winset_list_process_26.png";
                       tween:  "00_winset_list_process_27.png";
                       tween:  "00_winset_list_process_28.png";
                       tween:  "00_winset_list_process_29.png";
                   }
               }
           }
         part { name: "conf_over";
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               rel1.offset: 0 0;
               rel2.offset: -1 -1;
               visible: 0;
            }
         }
         part { name: "sb_vbar_clip_master";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
            }
            description { state: "hidden" 0.0;
               visible: 0;
               color: 255 255 255 0;
            }
         }
         part { name: "sb_vbar_clip";
            clip_to: "sb_vbar_clip_master";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
            }
            description { state: "hidden" 0.0;
               visible: 0;
               color: 255 255 255 0;
            }
         }
         part { name: "sb_vbar";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               fixed: 1 1;
               visible: 0;
               min: 8 8;
               align: 1.0 0.0;
               rel1 {
                  relative: 1.0 0.0;
                  offset: -1 0;
               }
               rel2 {
                  relative: 1.0 0.0;
                  offset: -1 -1;
                  to_y: "sb_hbar";
               }
            }
         }
         part { name: "sb_vbar_runner";
            clip_to: "sb_vbar_clip";
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               min: 8 8;
               max: 8 99999;
               rel1.to: "sb_vbar";
               rel2.to: "sb_vbar";
               visible: 0;
               image {
                  normal: "sb_runnerv.png";
                  border: 0 0 4 4;
                  border_scale: 1;
               }
               fill.smooth: 0;
            }
         }
         part { name: "elm.dragable.vbar";
            clip_to: "sb_vbar_clip";
            mouse_events: 0;
            scale: 1;
            dragable {
               x: 0 0 0;
               y: 1 1 0;
               confine: "sb_vbar";
            }
            description { state: "default" 0.0;
               fixed: 1 1;
               min: 8 8;
               rel1 {
                  relative: 0.5  0.5;
                  offset:   0    0;
                  to: "sb_vbar";
               }
               rel2 {
                  relative: 0.5  0.5;
                  offset:   0    0;
                  to: "sb_vbar";
               }
               image {
		  normal: "00_scroll_bar.png";
		  border: 3 3 3 3;
		  border_scale: 1;
                  middle: DEFAULT;
               }
            }
         }
         part { name: "sb_vbar_over1";
            clip_to: "sb_vbar_clip";
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               rel1.to: "elm.dragable.vbar";
               rel2.relative: 1.0 0.5;
               rel2.to: "elm.dragable.vbar";
               visible: 0;
               image {
                  normal: "bt_sm_hilight.png";
                  border: 6 6 6 0;
                  border_scale: 1;
               }
            }
         }
         part { name: "sb_vbar_over2";
            clip_to: "sb_vbar_clip";
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               rel1.to: "elm.dragable.vbar";
               rel2.to: "elm.dragable.vbar";
               visible: 0;
               image {
                  normal: "bt_sm_shine.png";
                  border: 6 6 6 0;
                  border_scale: 1;
               }
            }
         }
         part { name: "sb_hbar_clip_master";
            type: RECT;
            mouse_events: 0;
            description { state: "default" 0.0;
            }
            description { state: "hidden" 0.0;
               visible: 0;
               color: 255 255 255 0;
            }
         }
         part { name: "sb_hbar_clip";
            clip_to: "sb_hbar_clip_master";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
            }
            description { state: "hidden" 0.0;
               visible: 0;
               color: 255 255 255 0;
            }
         }
         part { name: "sb_hbar";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               fixed: 1 1;
               visible: 0;
               min: 50 8;
               align: 0.0 1.0;
               rel1 {
                  relative: 0.0 1.0;
                  offset: 0 -1;
               }
               rel2 {
                  relative: 0.0 1.0;
                  offset: -1 -1;
                  to_x: "sb_vbar";
               }
            }
         }
         part { name: "sb_hbar_runner";
            clip_to: "sb_hbar_clip";
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               min: 50 8;
               max: 99999 8;
               rel1.to: "sb_hbar";
               rel2.to: "sb_hbar";
               visible: 0;
               image {
                  normal: "sb_runnerh.png";
                  border: 4 4 0 0;
                  border_scale: 1;
               }
               fill.smooth: 0;
            }
         }
         part { name: "elm.dragable.hbar";
            clip_to: "sb_hbar_clip";
            mouse_events: 0;
            scale: 1;
            dragable {
               x: 1 1 0;
               y: 0 0 0;
               confine: "sb_hbar";
            }
            description { state: "default" 0.0;
               fixed: 1 1;
               min: 50 8;
               rel1 {
                  relative: 0.5  0.5;
                  offset: 0 0;
                  to: "sb_hbar";
               }
               rel2 {
                  relative: 0.5  0.5;
                  offset: 0 0;
                  to: "sb_hbar";
               }
               color: 255 255 255 0;
               image {
		  normal: "00_scroll_bar.png";
		  border: 3 3 3 3;
		  border_scale: 1;
               }
               image.middle: SOLID;
            }
         }
         part { name: "sb_hbar_over1";
            clip_to: "sb_hbar_clip";
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               rel1.to: "elm.dragable.hbar";
               rel2.relative: 1.0 0.5;
               rel2.to: "elm.dragable.hbar";
               visible: 0;
               image {
                  normal: "bt_sm_hilight.png";
                  border: 6 6 6 0;
                  border_scale: 1;
               }
            }
         }
         part { name: "sb_hbar_over2";
            clip_to: "sb_hbar_clip";
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               rel1.to: "elm.dragable.hbar";
               rel2.to: "elm.dragable.hbar";
               visible: 0;
               image {
                  normal: "bt_sm_shine.png";
                  border: 6 6 6 0;
                  border_scale: 1;
               }
            }
         }
      }
      programs {
         program { name: "load";
            signal: "load";
            source: "";
            script {
               set_state(PART:"sb_hbar_clip", "hidden", 0.0);
               set_state(PART:"sb_vbar_clip", "hidden", 0.0);
               set_int(sbvis_h, 0);
               set_int(sbvis_v, 0);
               set_int(sbalways_v, 0);
               set_int(sbalways_h, 0);
               set_int(sbvis_timer, 0);
               set_int(sbnever_v, 0);
            }
         }
         program { name: "vbar_show";
            signal: "elm,action,show,vbar";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "sb_vbar_clip_master";
         }
         program { name: "vbar_hide";
            signal: "elm,action,hide,vbar";
            source: "elm";
            action: STATE_SET "hidden" 0.0;
            target: "sb_vbar_clip_master";
         }
         program { name: "vbar_show_always";
            signal: "elm,action,show_always,vbar";
            source: "elm";
            script {
               new v;
               v = get_int(sbvis_v);
               v |= get_int(sbalways_v);
               if (!v) {
                  set_int(sbalways_v, 1);
                  emit("do-show-vbar", "");
                  set_int(sbvis_v, 1);
               }
               set_int(sbnever_v, 0);
            }
         }
         program { name: "vbar_show_notalways";
            signal: "elm,action,show_notalways,vbar";
            source: "elm";
            script {
               new v;
               v = get_int(sbalways_v);
               if (v) {
                  set_int(sbalways_v, 0);
                  v = get_int(sbvis_v);
                  if (!v) {
                     emit("do-hide-vbar", "");
                     set_int(sbvis_v, 0);
                  }
               }
               set_int(sbnever_v, 0);
            }
         }
         program { name: "vbar_hide_always";
            signal: "elm,action,hide_always,vbar";
            source: "elm";
            script {
               new v1, v2;
               v1 = get_int(sbnever_v);
               if (!v1) {
                  set_int(sbnever_v, 1);
                  set_int(sbalways_v, 0);
                  v2 = get_int(sbvis_v);
                  if (!v2) {
                     emit("do-hide-vbar", "");
                     set_int(sbvis_v, 0);
                  }
               }
            }
         }
         program { name: "sb_vbar_show";
            signal: "do-show-vbar";
            source: "";
            action: STATE_SET "default" 0.0;
            transition: LINEAR 1.0;
            target: "sb_vbar_clip";
         }
         program { name: "sb_vbar_hide";
            signal: "do-hide-vbar";
            source: "";
            action: STATE_SET "hidden" 0.0;
            transition: LINEAR 1.0;
            target: "sb_vbar_clip";
         }
         program { name: "hbar_show";
            signal: "elm,action,show,hbar";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "sb_hbar_clip_master";
         }
         program { name: "hbar_hide";
            signal: "elm,action,hide,hbar";
            source: "elm";
            action:  STATE_SET "hidden" 0.0;
            target: "sb_hbar_clip_master";
         }
         program { name: "hbar_show_always";
            signal: "elm,action,show_always,hbar";
            source: "elm";
            script {
               new v;
               v = get_int(sbvis_h);
               v |= get_int(sbalways_h);
               if (!v) {
                  set_int(sbalways_h, 1);
                  emit("do-show-hbar", "");
                  set_int(sbvis_h, 1);
               }
            }
         }
         program { name: "hbar_show_notalways";
            signal: "elm,action,show_notalways,hbar";
            source: "elm";
            script {
               new v;
               v = get_int(sbalways_h);
               if (v) {
                  set_int(sbalways_h, 0);
                  v = get_int(sbvis_h);
                  if (!v) {
                     emit("do-hide-hbar", "");
                     set_int(sbvis_h, 0);
                  }
               }
            }
         }
         program { name: "sb_hbar_show";
            signal: "do-show-hbar";
            source: "";
            action: STATE_SET "default" 0.0;
            transition: LINEAR 1.0;
            target: "sb_hbar_clip";
         }
         program { name: "sb_hbar_hide";
            signal: "do-hide-hbar";
            source: "";
            action: STATE_SET "hidden" 0.0;
            transition: LINEAR 1.0;
            target: "sb_hbar_clip";
         }
         program { name: "scroll";
            signal: "elm,action,scroll";
            source: "elm";
            action:  STATE_SET "default" 0.0;
            script {
               new v, v1;
               v = get_int(sbvis_v);
               v |= get_int(sbalways_v);
               v1 = get_int(sbnever_v);
               if (!v && !v1) {
                  emit("do-show-vbar", "");
                  set_int(sbvis_v, 1);
               }
               v = get_int(sbvis_h);
               v |= get_int(sbalways_h);
               if (!v) {
                  emit("do-show-hbar", "");
                  set_int(sbvis_h, 1);
               }
               v = get_int(sbvis_timer);
               if (v > 0) cancel_timer(v);
               v = timer(0.5, "timer0", 0);
               set_int(sbvis_timer, v);
            }
         }
           program { name: "go1";
               signal: "elm,state,busy,start";
               source: "elm";
               action: STATE_SET "active" 0.0;
               transition: SINUSOIDAL 1.0;
               target:  "busy_clip";
           }
           program { name: "go2";
               signal: "elm,state,busy,start";
               source: "elm";
               action: STATE_SET "default" 0.0;
               transition: LINEAR 0.5;
               target: "busy";
               after:  "go2";
           }
           program { name: "stop1";
               signal: "elm,state,busy,stop";
               source: "elm";
               action: STATE_SET "default" 0.0;
               transition: SINUSOIDAL 1.0;
               target: "busy_clip";
               after: "stop2";
           }
         program { name: "stop2";
            action: ACTION_STOP;
            target: "go2";
         }
      }
   }
   group { name: "elm/map/marker/radio/default";
        data {
            item: size_w 24;
            item: size_h 24;
            item: size_max_w 58;
            item: size_max_h 58;
        }
        images {
        	image: "map_item.png" COMP;
        }
        parts {
            part { name: "whole";
                description { state: "default" 0.0;
                }
            }
            part { name: "base";
                ignore_flags: ON_HOLD;
                description { state: "default" 0.0;
                    image.normal: "map_item.png";
                }
            }
            part { name: "elm.icon";
                type: SWALLOW;
                clip_to: "whole";
                mouse_events:  0;
                description { state: "default" 0.0;
                    rel1.relative: 0.27 0.27;
                    rel2.relative: 0.73 0.73;
                }
            }
            part { name: "elm.text";
                type:          TEXT;
                effect:        SOFT_SHADOW;
                mouse_events:  0;
                scale: 1;
                description { state: "default" 0.0;
                    align:    0.5 0.5;
                    color: 224 224 224 255;
                    color3: 0 0 0 64;
                    rel1.relative: 0.28 0.25;
                    rel2.relative: 0.75 0.75;
                    text {
                        font:     "Sans,Edje-Vera";
                        size:     10;
                        min:      0 0;
                        align:    0.5 0.5;
                    }
                }
            }
       }
       programs {
            program { name: "open";
                signal: "mouse,clicked,1";
                source: "base";
                action: SIGNAL_EMIT "open" "elm";
            }
            program { name: "bringin";
                signal: "mouse,down,1,double";
                source: "base";
                action: SIGNAL_EMIT "bringin" "elm";
            }
       }
   }
   group { name: "elm/map/marker/radio2/default";
        data {
            item: size_w 24;
            item: size_h 24;
            item: size_max_w 58;
            item: size_max_h 58;
        }
        images {
        	image: "map_item_2.png" COMP;
        }
        parts {
            part { name: "base";
                ignore_flags: ON_HOLD;
                description { state: "default" 0.0;
                    image.normal: "map_item_2.png";
                }
            }
            part { name: "elm.text";
                type:          TEXT;
                effect:        SOFT_SHADOW;
                mouse_events:  0;
                scale: 1;
                description { state: "default" 0.0;
                    align:    0.5 0.5;
                    color: 224 224 224 255;
                    color3: 0 0 0 64;
                    rel1.relative: 0.28 0.25;
                    rel2.relative: 0.75 0.75;
                    text {
                        font:     "Sans,Edje-Vera";
                        size:     10;
                        min:      0 0;
                        align:    0.5 0.5;
                    }
                }
            }
       }
       programs {
            program { name: "open";
                signal: "mouse,clicked,1";
                source: "base";
                action: SIGNAL_EMIT "open" "elm";
            }
            program { name: "bringin";
                signal: "mouse,down,1,double";
                source: "base";
                action: SIGNAL_EMIT "bringin" "elm";
            }
       }
   }
   group { name: "elm/map/marker/empty/default";
        data {
            item: size_w 22;
            item: size_h 22;
            item: size_max_w 64;
            item: size_max_h 64;
        }
        parts {
            part { name: "whole";
                description { state: "default" 0.0;
                }
            }
            part { name: "base";
                ignore_flags: ON_HOLD;
                description { state: "default" 0.0;
                }
            }
            part { name: "elm.icon";
                type: SWALLOW;
                clip_to: "whole";
                mouse_events:  0;
                description { state: "default" 0.0;
                }
            }
            part { name: "elm.text";
                type:          TEXT;
                effect:        SOFT_SHADOW;
                mouse_events:  0;
                scale: 1;
                description { state: "default" 0.0;
                    align:    0.5 0.5;
                    color: 224 224 224 255;
                    color3: 0 0 0 64;
                    rel1.relative: 0.28 0.25;
                    rel2.relative: 0.75 0.75;
                    text {
                        font:     "Sans,Edje-Vera";
                        size:     10;
                        min:      0 0;
                        align:    0.5 0.5;
                    }
                }
            }
       }
       programs {
            program { name: "open";
                signal: "mouse,clicked,1";
                source: "base";
                action: SIGNAL_EMIT "open" "elm";
            }
            program { name: "bringin";
                signal: "mouse,down,1,double";
                source: "base";
                action: SIGNAL_EMIT "bringin" "elm";
            }
       }
   }
   group { name: "elm/map/marker_bubble/default";
    images {
      image: "bubble.png" COMP;
      image: "bubble_shine.png" COMP;
    }
    data {
            item: size_w 400;
            item: size_h 100;
        }
    parts {
    part { name: "clipper";
        mouse_events:  1;
        description { state: "default" 0.0;
          color: 255 255 255 0;
        }
        description { state: "show" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 255;
        }
      }
     part { name: "base0";
        mouse_events:  0;
        clip_to: "clipper";
        description { state: "default" 0.0;
          image {
            normal: "bubble.png";
            border: 11 36 10 19;
          }
          image.middle: SOLID;
          fill.smooth: 0;
        }
      }
      part { name: "elm.swallow.content";
        type: SWALLOW;
        clip_to: "clipper";
        description { state: "default" 0.0;
            align: 0.5 0.5;
          rel1 {
            offset: 9 8;
          }
          rel2 {
            offset: -10 -17;
          }
        }
      }
      part { name: "shine";
        mouse_events:  0;
        clip_to: "clipper";
        description { state:    "default" 0.0;
          rel1 {
            to: "base0";
          }
          rel2 {
            to: "base0";
            relative: 1.0 0.5;
          }
          image {
            normal: "bubble_shine.png";
            border: 5 5 5 0;
          }
          fill.smooth: 0;
        }
        }
    }
    programs {
        program { name: "show";
            signal: "show";
            action: STATE_SET "show" 0.0;
            target: "clipper";
            transition: ACCELERATE 0.5;
        }
    }
  }

