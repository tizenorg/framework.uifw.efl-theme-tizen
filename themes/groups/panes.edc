/*
 *  nBeat-theme
 *
 * Copyright (c) 2000 - 2010 Samsung Electronics Co., Ltd.
 *
 * Contact: Seokjae Jeong <seok.j.jeong@samsung.com>, Myoungwoon Roy Kim <Myoungwoon.kim@samsung.com>, Jeonghyun Yun <jh0506.yun@samsung.com>, Jaehwan Kim <jae.hwan.kim@samsung.com>, 
 * 		Chuneon Park <chuneon.park@samsung.com>, Juyung Seo <juyung.seo@samsung.com>, Woohyun Jung <wh0705.jung@samsung.com>, Myungjae Lee <mjae.lee@samsung.com>, Hyoyoung Chang <hyoyoung.chang@samsung.com>, 
 *		Hyunsil Park <hyunsil.park@samsung.com>, Sohyun Kim <anna1014.kim@samsung.com>, Seunggyun Kim <sgyun.kim@samsung.com>
 * 
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the
 * Free Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 * 
 * This library is distributed in the hope that it will be useful, but WITHOUT ANY
 * WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public
 * License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this library; if not, write to the Free Software Foundation, Inc., 51
 * Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
 *
 */

	group {
		name: "elm/panes/vertical/default";
		images {
			image: "arrow_right.png" COMP;
			image: "arrow_left.png" COMP;
			image: "00_splitscreen_handler_top.png" COMP;
			image: "00_splitscreen_handler_middle.png" COMP;
			image: "00_splitscreen_handler_bottom.png" COMP;
			image: "00_splitscreen_pain.png" COMP;
		}
		script {
			public state_pair = 0; //0:both content are not set, 1:both content are set
		}
		parts
		{
			part
			{
				name: "whole";
				type: RECT;
				mouse_events: 1;
				description
				{
					state: "default" 0.0;
					visible: 0;
				}
			}
		
			//2 contents
			part
			{
				name: "whole_left";
				type: RECT;
				mouse_events: 0;
				description
				{
					state: "default" 0.0;
					rel2.to_x: "elm.bar";
					rel2.relative: 0.0 1.0;
					visible: 1;
				}
			}
			part
			{
				name: "elm.swallow.left";
				type: SWALLOW;
				clip_to: "whole_left";
				description
				{
					state: "default" 0.0;
					rel1.to: "whole_left";
					rel2.to: "whole_left";
				}
			}
			
			part
			{
				name: "whole_right";
				type: RECT;
				mouse_events: 0;
				description
				{
					state: "default" 0.0;
					rel1.to_x: "elm.bar";
					rel1.relative: 1.0 0.0;
					visible: 1;
				}
			}
			part
			{
				name: "elm.swallow.right";
				type: SWALLOW;
				clip_to: "whole_right";
				description
				{
					state: "default" 0.0;
					rel1.to: "whole_right";
					rel2.to: "whole_right";
				}
			}
			part { name:"bar_top";
				mouse_events: 0;
				description { state:"default" 0.0;
					rel1 { relative: 0 0; to_x: "elm.bar"; }
					rel2 { relative: 1 0; to: "elm.bar"; }
					image {
						normal: "00_splitscreen_handler_top.png";
					}
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					visible: 0;
				}
			}
			//BAR
			part { name: "elm.bar";
				mouse_events: 1;
				dragable {
				confine: "whole";
				x: 1 1 1;
				y: 0 0 0;
				}
				scale: 1;
				description { state: "default" 0.0;
					max: 0 49;
					min: 0 49;
					align: 1.0 0.5;
					rel1.relative: 0.0 0.5;
					rel2.relative: 1.0 0.5;
					image {
						normal: "00_splitscreen_handler_middle.png";
					}
					color: 255 255 255 255;
				}
				description { state: "default" 0.1;
					inherit: "default" 0.0;
					max: 40 49;
					min: 40 49;
				}				
				description { state: "clicked" 0.0;
					inherit: "default" 0.0;
					color: 200 200 200 200;
				}
				description { state: "clicked" 0.1;
					inherit: "default" 0.1;
					color: 200 200 200 200;
				}
				description { state: "disabled" 0.0;
					inherit:  "default" 0.0;
					min: 0 49;
					max: 0 49;
					visible: 0;
				}
				description { state: "disabled" 0.1;
					inherit:  "default" 0.1;
					min: 14 49;
					max: 14 49;
					visible: 0;
				}
			}
			part { name:"bar_bottom";
				mouse_events: 0;
				description { state:"default" 0.0;
					rel1 { relative: 0 1; to: "elm.bar"; }
					rel2 { relative: 1 1; to_x: "elm.bar"; }
					image {
						normal: "00_splitscreen_handler_bottom.png";
					}
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					visible: 0;
				}
			}
			part { name:"bar_disabled";
				mouse_events: 0;
				description { state:"default" 0.0;
					rel1 { relative: 0 0; to_x: "elm.bar"; }
					rel2 { relative: 1 1; to_x: "elm.bar"; }
					image {
						normal: "00_splitscreen_pain.png";
					}
					visible: 0;
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
			}
			part { name: "over2";
				mouse_events: 1;
				repeat_events: 1;
				ignore_flags: ON_HOLD;
				description { state: "default" 0.0;
					rel1.to: "elm.bar";
					rel2.to: "elm.bar";
				}
				description { state: "disabled" 0.0;
					inherit:  "default" 0.0;
					visible: 0;
				}
			}
			part { name: "over3";
				mouse_events: 1;
				repeat_events: 1;
				description { state: "default" 0.0;
					color: 255 255 255 0;
					rel1.to: "elm.bar";
					rel2.to: "elm.bar";
				}
				description { state: "clicked" 0.0;
					inherit:  "default" 0.0;
					visible: 1;
					color: 255 255 255 255;
				}
			}
			
			//Arrow
			part {
				name: "arrow_right";
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					min: 45 45;
					max: 45 45;
					color: 255 255 255 0;
					
					rel1.relative: 1.0 0.5;
					rel1.to_x: "elm.bar";
					rel1.offset: 45/2 -45/2;
					
					rel2.relative: 1.0 0.5;
					rel2.to_x: "elm.bar";
					rel2.offset: 45/2 45/2;
					
					image.normal: "arrow_right.png";
					
					fixed: 1 1;
				}
				description { state: "anim_1" 0.0;
					inherit: "default" 0.0;
					color: 255 255 255 200;
					rel1.offset: (45/2 + 10) -45/2;
					rel2.offset: (45/2 +10) 45/2;
				}
				description { state: "anim_2" 0.0;
					inherit: "default" 0.0;
					color: 255 255 255 0;
					rel1.offset: (45/2 + 20) -45/2;
					rel2.offset: (45/2 + 20) 45/2;
				}
			}
			part {
				name: "arrow_left";
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					min: 45 45;
					max: 45 45;
					color: 255 255 255 0;
					
					rel1.relative: 0.0 0.5;
					rel1.to_x: "elm.bar";
					rel1.offset: -45/2 -45/2;
					
					rel2.relative: 0.0 0.5;
					rel2.to_x: "elm.bar";
					rel2.offset: -45/2 45/2;
					
					image.normal: "arrow_left.png";
					
					fixed: 1 1;
				}
				description { state: "anim_1" 0.0;
					inherit: "default" 0.0;
					color: 255 255 255 200;
					rel1.offset: (-45/2 - 10) -45/2;
					rel2.offset: (-45/2 - 10) 45/2;
				}
				description { state: "anim_2" 0.0;
					inherit: "default" 0.0;
					color: 255 255 255 0;
					rel1.offset: (-45/2 - 20) -45/2;
					rel2.offset: (-45/2 - 20) 45/2;
				}
			}
			part {
				name: "movement.decider";
				mouse_events: 1;
				description { state: "default" 0.0;
					rel1.to: "elm.bar";
					rel2.to: "elm.bar";
					visible: 0;
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
			}
		}
		programs {
			program {
				name:   "panes_pair";
				signal: "elm.panes.pair";
				source: "elm";
				script {
					new st[31];
					new Float:vl;
					set_int(state_pair, 1);
					get_state(PART:"elm.bar", st, 30, vl);
					set_state(PART:"elm.bar", st, 0.1);
				}
			}
			program {
				name:   "panes_unpair";
				signal: "elm.panes.unpair";
				source: "elm";
				script {
					new st[31];
					new Float:vl;
					set_int(state_pair, 0);
					get_state(PART:"elm.bar", st, 30, vl);
					set_state(PART:"elm.bar", st, 0.0);
				}
			}
			program {
				name:   "button_click";
				signal: "mouse,down,1";
				source: "over2";
				action: SIGNAL_EMIT "elm,action,press" "";
				after: "button_click_anim";
				after: "arrow_anim_start";
			}
			program {
				name:   "button_click_anim";
				script {
					if(get_int(state_pair) == 1)
						set_state(PART:"elm.bar", "clicked", 0.1);
					else
						set_state(PART:"elm.bar", "clicked", 0.0);				
				}
			}
			program {
				name:   "button_unclick";
				signal: "mouse,up,1";
				source: "over2";
				action: SIGNAL_EMIT "elm,action,unpress" "";
				after: "button_unclick_anim";
				after: "arrow_anim_stop";
			}
			program {
				name:   "button_unclick_anim";
				script {
					if(get_int(state_pair) == 1)
						set_state(PART:"elm.bar", "default", 0.1);
					else
						set_state(PART:"elm.bar", "default", 0.0);				
				}
			}
			program {
				name:   "button_click2";
				signal: "mouse,down,1";
				source: "over3";
				action: STATE_SET "clicked" 0.0;
				target: "over3";
			}
			program {
				name:   "button_unclick2";
				signal: "mouse,up,1";
				source: "over3";
				action: STATE_SET "default" 0.0;
				transition: DECELERATE 0.5;
				target: "over3";
			}
			program {
				name:   "button_unclick3";
				signal: "mouse,up,1";
				source: "over2";
				action: SIGNAL_EMIT "elm,action,click" "";
			}
			program {
				name:   "button_down_double";
				signal: "mouse,down,1,double";
				source: "over3";
				action: SIGNAL_EMIT "elm,action,click,double" "";
			}
			
			//arrows animation
			program {
				name: "arrow_anim_start";
				action: STATE_SET "anim_1" 0.0;
				target: "arrow_right";
				target: "arrow_left";
				transition: LINEAR 0.6;
				after: "arrow_anim_1";
			}
			program {
				name: "arrow_anim_1";
				action: STATE_SET "anim_2" 0.0;
				target: "arrow_right";
				target: "arrow_left";
				transition: LINEAR 0.6;
				after: "arrow_anim_2";
			}
			program {
				name: "arrow_anim_2";
				action: STATE_SET "default" 0.0;
				target: "arrow_right";
				target: "arrow_left";
				after: "arrow_anim_start";
			}
			program {
				name: "arrow_anim_stop";
				action: ACTION_STOP;
				target: "arrow_anim_start";
				target: "arrow_anim_1";
				target: "arrow_anim_2";
				after: "arrow_anim_stop_1";
			}
			program {
				name: "arrow_anim_stop_1";
				action: STATE_SET "default" 0.0;
				target: "arrow_right";
				target: "arrow_left";
				transition: DECELERATE 0.4;
			}
			//fix the pane
			program {
				name:   "panes_fixed";
				signal: "elm.panes.fixed";
				source: "elm";
				action: STATE_SET "disabled" 0.0;
				target: "movement.decider";
				target: "elm.bar";
				target: "bar_top";
				target: "bar_bottom";
				target: "bar_disabled";
			}
			//allow the movement by interaction
			program {
				name:   "panes_unfixed";
				signal: "elm.panes.unfixed";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "movement.decider";
				target: "elm.bar";
				target: "bar_top";
				target: "bar_bottom";
				target: "bar_disabled";
			}
		}
	}
	
	group {
		name: "elm/panes/horizontal/default";
		images {
			image: "arrow_up.png" COMP;
			image: "arrow_down.png" COMP;
			image: "00_splitscreen_handler_left_hor.png" COMP;
			image: "00_splitscreen_handler_middle_hor.png" COMP;
			image: "00_splitscreen_handler_right_hor.png" COMP;
			image: "00_splitscreen_pain_hor.png" COMP;
		}
		script {
			public state_pair = 0; //0:both content are not set, 1:both content are set
		}
		parts
		{
			part
			{
				name: "whole";
				type: RECT;
				mouse_events: 0;
				description
				{
					state: "default" 0.0;
					visible: 0;
				}
			}
			
			//2 contents
			part
			{
				name: "whole_left";
				type: RECT;
				mouse_events: 0;
				description
				{
					state: "default" 0.0;
					rel2.to_y: "elm.bar";
					rel2.relative: 1.0 0.0;
					visible: 1;
				}
			}
			part
			{
				name: "elm.swallow.left";
				type: SWALLOW;
				clip_to: "whole_left";
				description
				{
					state: "default" 0.0;
					rel1.to: "whole_left";
					rel2.to: "whole_left";
				}
			}
				
			part
			{
				name: "whole_right";
				type: RECT;
				mouse_events: 0;
				description
				{
					state: "default" 0.0;
					rel1.to_y: "elm.bar";
					rel1.relative: 0.0 1.0;
					visible: 1;
				}
			}
			part
			{
				name: "elm.swallow.right";
				type: SWALLOW;
				clip_to: "whole_right";
				description
				{
					state: "default" 0.0;
					rel1.to: "whole_right";
					rel2.to: "whole_right";
				}
			}
			part { name:"bar_left";
				mouse_events: 0;
				description { state:"default" 0.0;
					rel1 { relative: 0 0; to_y: "elm.bar"; }
					rel2 { relative: 0 1; to: "elm.bar"; }
					image {
						normal: "00_splitscreen_handler_left_hor.png";
					}
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					visible: 0;
				}
			}
			//BAR
			part { name: "elm.bar";
				mouse_events: 1;
				dragable {
					confine: "whole";
					x: 0 0 0;
					y: 1 1 1;
				}
				scale: 1;
				description { state: "default" 0.0;
					max: 49 0;
					min: 49 0;
					rel1.relative: 0.5 0.0;
					rel2.relative: 0.5 1.0;
					align: 0.5 0.0;
					image {
						normal: "00_splitscreen_handler_middle_hor.png";
					}
					color: 255 255 255 255;
				}
				description { state: "default" 0.1;
					inherit: "default" 0.0;
					max: 49 40;
					min: 49 40;
				}				
				description { state: "clicked" 0.0;
					inherit: "default" 0.0;
					color: 200 200 200 200;
				}
				description { state: "clicked" 0.1;
					inherit: "default" 0.1;
					color: 200 200 200 200;
				}
				description { state: "disabled" 0.0;
					inherit:  "default" 0.0;
					min: 49 0;
					max: 49 0;
					visible: 0;
				}
				description { state: "disabled" 0.1;
					inherit:  "default" 0.1;
					min: 49 14;
					max: 49 14;
					visible: 0;
				}
			}
			part { name:"bar_right";
				mouse_events: 0;
				description { state:"default" 0.0;
					rel1 { relative: 1 0; to: "elm.bar"; }
					rel2 { relative: 1 1; to_y: "elm.bar"; }
					image {
						normal: "00_splitscreen_handler_right_hor.png";
					}
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					visible: 0;
				}
			}
			part { name:"bar_disabled";
				mouse_events: 0;
				description { state:"default" 0.0;
					rel1 { relative: 0 0; to_y: "elm.bar"; }
					rel2 { relative: 1 1; to_y: "elm.bar"; }
					image {
						normal: "00_splitscreen_pain_hor.png";
					}
					visible: 0;
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
			}
			part { name: "over2";
				mouse_events: 1;
				repeat_events: 1;
				ignore_flags: ON_HOLD;
				description { state: "default" 0.0;
					rel1.to: "elm.bar";
					rel2.to: "elm.bar";
				}
				description { state: "disabled" 0.0;
					inherit:  "default" 0.0;
					visible: 0;
				}
			}
			part { name: "over3";
				mouse_events: 1;
				repeat_events: 1;
				description { state: "default" 0.0;
					color: 255 255 255 0;
					rel1.to: "elm.bar";
					rel2.to: "elm.bar";
				}
				description { state: "clicked" 0.0;
					inherit:  "default" 0.0;
					visible: 1;
					color: 255 255 255 255;
				}
			}
			
			//Arrow
			part {
				name: "arrow_right";
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					min: 45 45;
					max: 45 45;
					color: 255 255 255 0;
					
					rel1.relative: 0.5 1.0;
					rel1.to_y: "elm.bar";
					rel1.offset: -45/2 45/2;
					
					rel2.relative: 0.5 1.0;
					rel2.to_y: "elm.bar";
					rel2.offset: 45/2 45/2;
					
					image.normal: "arrow_down.png";
					
					fixed: 1 1;
				}
				description { state: "anim_1" 0.0;
					inherit: "default" 0.0;
					color: 255 255 255 200;
					rel1.offset: -45/2 (45/2 +10);
					rel2.offset: 45/2 (45/2 +10);
				}
				description { state: "anim_2" 0.0;
					inherit: "default" 0.0;
					color: 255 255 255 0;
					rel1.offset: -45/2 (45/2 + 20);
					rel2.offset: 45/2 (45/2 + 20);
				}
			}
			part {
				name: "arrow_left";
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					min: 45 45;
					max: 45 45;
					color: 255 255 255 0;
					
					rel1.relative: 0.5 0.0;
					rel1.to_y: "elm.bar";
					rel1.offset: -45/2 -45/2;
					
					rel2.relative: 0.5 0.0;
					rel2.to_y: "elm.bar";
					rel2.offset: 45/2 -45/2;
					
					image.normal: "arrow_up.png";
					
					fixed: 1 1;
				}
				description { state: "anim_1" 0.0;
					inherit: "default" 0.0;
					color: 255 255 255 200;
					rel1.offset: -45/2 (-45/2 - 10);
					rel2.offset: 45/2 (-45/2 - 10);
				}
				description { state: "anim_2" 0.0;
					inherit: "default" 0.0;
					color: 255 255 255 0;
					rel1.offset: -45/2 (-45/2 - 20);
					rel2.offset: 45/2 (-45/2 - 20);
				}
			}
			part {
				name: "movement.decider";
				mouse_events: 1;
				description { state: "default" 0.0;
					rel1.to: "elm.bar";
					rel2.to: "elm.bar";
					visible: 0;
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
			}
		}
		programs {
			program {
				name:   "panes_pair";
				signal: "elm.panes.pair";
				source: "elm";
				script {
					new st[31];
					new Float:vl;
					set_int(state_pair, 1);
					get_state(PART:"elm.bar", st, 30, vl);
					set_state(PART:"elm.bar", st, 0.1);
				}
			}
			program {
				name:   "panes_unpair";
				signal: "elm.panes.unpair";
				source: "elm";
				script {
					new st[31];
					new Float:vl;
					set_int(state_pair, 0);
					get_state(PART:"elm.bar", st, 30, vl);
					set_state(PART:"elm.bar", st, 0.0);
				}
			}
			program {
				name:   "button_click";
				signal: "mouse,down,1";
				source: "over2";
				action: SIGNAL_EMIT "elm,action,press" "";
				after: "button_click_anim";
				after: "arrow_anim_start";
			}
			program {
				name:   "button_click_anim";
				script {
					if(get_int(state_pair) == 1)
						set_state(PART:"elm.bar", "clicked", 0.1);
					else
						set_state(PART:"elm.bar", "clicked", 0.0);				
				}
			}
			program {
				name:   "button_unclick";
				signal: "mouse,up,1";
				source: "over2";
				action: SIGNAL_EMIT "elm,action,unpress" "";
				after: "button_unclick_anim";
				after: "arrow_anim_stop";
			}
			program {
				name:   "button_unclick_anim";
				script {
					if(get_int(state_pair) == 1)
						set_state(PART:"elm.bar", "default", 0.1);
					else
						set_state(PART:"elm.bar", "default", 0.0);				
				}
			}
			program {
				name:   "button_click2";
				signal: "mouse,down,1";
				source: "over3";
				action: STATE_SET "clicked" 0.0;
				target: "over3";
			}
			program {
				name:   "button_unclick2";
				signal: "mouse,up,1";
				source: "over3";
				action: STATE_SET "default" 0.0;
				transition: DECELERATE 0.5;
				target: "over3";
			}
			program {
				name:   "button_unclick3";
				signal: "mouse,up,1";
				source: "over2";
				action: SIGNAL_EMIT "elm,action,click" "";
			}
			program {
				name:   "button_down_double";
				signal: "mouse,down,1,double";
				source: "over3";
				action: SIGNAL_EMIT "elm,action,click,double" "";
			}
			
			//arrows animation
			program {
				name: "arrow_anim_start";
				action: STATE_SET "anim_1" 0.0;
				target: "arrow_right";
				target: "arrow_left";
				transition: LINEAR 0.6;
				after: "arrow_anim_1";
			}
			program {
				name: "arrow_anim_1";
				action: STATE_SET "anim_2" 0.0;
				target: "arrow_right";
				target: "arrow_left";
				transition: LINEAR 0.6;
				after: "arrow_anim_2";
			}
			program {
				name: "arrow_anim_2";
				action: STATE_SET "default" 0.0;
				target: "arrow_right";
				target: "arrow_left";
				after: "arrow_anim_start";
			}
			program {
				name: "arrow_anim_stop";
				action: ACTION_STOP;
				target: "arrow_anim_start";
				target: "arrow_anim_1";
				target: "arrow_anim_2";
				after: "arrow_anim_stop_1";
			}
			program {
				name: "arrow_anim_stop_1";
				action: STATE_SET "default" 0.0;
				target: "arrow_right";
				target: "arrow_left";
				transition: DECELERATE 0.4;
			}
			//fix the pane
			program {
				name:   "panes_fixed";
				signal: "elm.panes.fixed";
				source: "elm";
				action: STATE_SET "disabled" 0.0;
				target: "movement.decider";
				target: "elm.bar";
				target: "bar_left";
				target: "bar_right";
				target: "bar_disabled";
			}
			//allow the movement by interaction
			program {
				name:   "panes_unfixed";
				signal: "elm.panes.unfixed";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "movement.decider";
				target: "elm.bar";
				target: "bar_left";
				target: "bar_right";
				target: "bar_disabled";
			}
		}
	}

//Vertical Panes style to be used by music application
   group {
      name: "elm/panes/vertical/music";
      images {
         image: "arrow_right.png" COMP;
         image: "arrow_left.png" COMP;
         image: "00_splitscreen_handler_top.png" COMP;
         image: "00_splitscreen_handler_middle.png" COMP;
         image: "00_splitscreen_handler_bottom.png" COMP;
         image: "00_splitscreen_pain_music.png" COMP;
      }
      script {
         public state_pair = 0; //0:both content are not set, 1:both content are set
      }
      parts
      {
         part
         {
            name: "whole";
            type: RECT;
            mouse_events: 1;
            description
            {
               state: "default" 0.0;
               visible: 0;
            }
         }
      
         //2 contents
         part
         {
            name: "whole_left";
            type: RECT;
            mouse_events: 0;
            description
            {
               state: "default" 0.0;
               rel2.to_x: "elm.bar";
               rel2.relative: 0.0 1.0;
               visible: 1;
            }
         }
         part
         {
            name: "elm.swallow.left";
            type: SWALLOW;
            clip_to: "whole_left";
            description
            {
               state: "default" 0.0;
               rel1.to: "whole_left";
               rel2.to: "whole_left";
            }
         }
         
         part
         {
            name: "whole_right";
            type: RECT;
            mouse_events: 0;
            description
            {
               state: "default" 0.0;
               rel1.to_x: "elm.bar";
               rel1.relative: 1.0 0.0;
               visible: 1;
            }
         }
         part
         {
            name: "elm.swallow.right";
            type: SWALLOW;
            clip_to: "whole_right";
            description
            {
               state: "default" 0.0;
               rel1.to: "whole_right";
               rel2.to: "whole_right";
            }
         }
         part { name:"bar_top";
            mouse_events: 0;
            description { state:"default" 0.0;
               rel1 { relative: 0 0; to_x: "elm.bar"; }
               rel2 { relative: 1 0; to: "elm.bar"; }
               image {
                  normal: "00_splitscreen_handler_top.png";
               }
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               visible: 0;
            }
         }
         //BAR
         part { name: "elm.bar";
            mouse_events: 1;
            dragable {
            confine: "whole";
            x: 1 1 1;
            y: 0 0 0;
            }
            scale: 1;
            description { state: "default" 0.0;
               max: 0 49;
               min: 0 49;
               align: 1.0 0.5;
               rel1.relative: 0.0 0.5;
               rel2.relative: 1.0 0.5;
               image {
                  normal: "00_splitscreen_handler_middle.png";
               }
               color: 255 255 255 255;
            }
            description { state: "default" 0.1;
               inherit: "default" 0.0;
               max: 40 49;
               min: 40 49;
            }           
            description { state: "clicked" 0.0;
               inherit: "default" 0.0;
               color: 200 200 200 200;
            }
            description { state: "clicked" 0.1;
               inherit: "default" 0.1;
               color: 200 200 200 200;
            }
            description { state: "disabled" 0.0;
               inherit:  "default" 0.0;
               min: 0 49;
               max: 0 49;
               visible: 0;
            }
            description { state: "disabled" 0.1;
               inherit:  "default" 0.1;
               min: 14 49;
               max: 14 49;
               visible: 0;
            }
         }
         part { name:"bar_bottom";
            mouse_events: 0;
            description { state:"default" 0.0;
               rel1 { relative: 0 1; to: "elm.bar"; }
               rel2 { relative: 1 1; to_x: "elm.bar"; }
               image {
                  normal: "00_splitscreen_handler_bottom.png";
               }
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               visible: 0;
            }
         }
         part { name:"bar_disabled";
            mouse_events: 0;
            description { state:"default" 0.0;
               rel1 { relative: 0 0; to_x: "elm.bar"; }
               rel2 { relative: 1 1; to_x: "elm.bar"; }
               image {
                  normal: "00_splitscreen_pain_music.png";
               }
               visible: 0;
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part { name: "over2";
            mouse_events: 1;
            repeat_events: 1;
            ignore_flags: ON_HOLD;
            description { state: "default" 0.0;
               rel1.to: "elm.bar";
               rel2.to: "elm.bar";
            }
            description { state: "disabled" 0.0;
               inherit:  "default" 0.0;
               visible: 0;
            }
         }
         part { name: "over3";
            mouse_events: 1;
            repeat_events: 1;
            description { state: "default" 0.0;
               color: 255 255 255 0;
               rel1.to: "elm.bar";
               rel2.to: "elm.bar";
            }
            description { state: "clicked" 0.0;
               inherit:  "default" 0.0;
               visible: 1;
               color: 255 255 255 255;
            }
         }
         
         //Arrow
         part {
            name: "arrow_right";
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               min: 45 45;
               max: 45 45;
               color: 255 255 255 0;
               
               rel1.relative: 1.0 0.5;
               rel1.to_x: "elm.bar";
               rel1.offset: 45/2 -45/2;
               
               rel2.relative: 1.0 0.5;
               rel2.to_x: "elm.bar";
               rel2.offset: 45/2 45/2;
               
               image.normal: "arrow_right.png";
               
               fixed: 1 1;
            }
            description { state: "anim_1" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 200;
               rel1.offset: (45/2 + 10) -45/2;
               rel2.offset: (45/2 +10) 45/2;
            }
            description { state: "anim_2" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 0;
               rel1.offset: (45/2 + 20) -45/2;
               rel2.offset: (45/2 + 20) 45/2;
            }
         }
         part {
            name: "arrow_left";
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               min: 45 45;
               max: 45 45;
               color: 255 255 255 0;
               
               rel1.relative: 0.0 0.5;
               rel1.to_x: "elm.bar";
               rel1.offset: -45/2 -45/2;
               
               rel2.relative: 0.0 0.5;
               rel2.to_x: "elm.bar";
               rel2.offset: -45/2 45/2;
               
               image.normal: "arrow_left.png";
               
               fixed: 1 1;
            }
            description { state: "anim_1" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 200;
               rel1.offset: (-45/2 - 10) -45/2;
               rel2.offset: (-45/2 - 10) 45/2;
            }
            description { state: "anim_2" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 0;
               rel1.offset: (-45/2 - 20) -45/2;
               rel2.offset: (-45/2 - 20) 45/2;
            }
         }
         part {
            name: "movement.decider";
            mouse_events: 1;
            description { state: "default" 0.0;
               rel1.to: "elm.bar";
               rel2.to: "elm.bar";
               visible: 0;
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
      }
      programs {
         program {
            name:   "panes_pair";
            signal: "elm.panes.pair";
            source: "elm";
            script {
               new st[31];
               new Float:vl;
               set_int(state_pair, 1);
               get_state(PART:"elm.bar", st, 30, vl);
               set_state(PART:"elm.bar", st, 0.1);
            }
         }
         program {
            name:   "panes_unpair";
            signal: "elm.panes.unpair";
            source: "elm";
            script {
               new st[31];
               new Float:vl;
               set_int(state_pair, 0);
               get_state(PART:"elm.bar", st, 30, vl);
               set_state(PART:"elm.bar", st, 0.0);
            }
         }
         program {
            name:   "button_click";
            signal: "mouse,down,1";
            source: "over2";
            action: SIGNAL_EMIT "elm,action,press" "";
            after: "button_click_anim";
            after: "arrow_anim_start";
         }
         program {
            name:   "button_click_anim";
            script {
               if(get_int(state_pair) == 1)
                  set_state(PART:"elm.bar", "clicked", 0.1);
               else
                  set_state(PART:"elm.bar", "clicked", 0.0);            
            }
         }
         program {
            name:   "button_unclick";
            signal: "mouse,up,1";
            source: "over2";
            action: SIGNAL_EMIT "elm,action,unpress" "";
            after: "button_unclick_anim";
            after: "arrow_anim_stop";
         }
         program {
            name:   "button_unclick_anim";
            script {
               if(get_int(state_pair) == 1)
                  set_state(PART:"elm.bar", "default", 0.1);
               else
                  set_state(PART:"elm.bar", "default", 0.0);            
            }
         }
         program {
            name:   "button_click2";
            signal: "mouse,down,1";
            source: "over3";
            action: STATE_SET "clicked" 0.0;
            target: "over3";
         }
         program {
            name:   "button_unclick2";
            signal: "mouse,up,1";
            source: "over3";
            action: STATE_SET "default" 0.0;
            transition: DECELERATE 0.5;
            target: "over3";
         }
         program {
            name:   "button_unclick3";
            signal: "mouse,up,1";
            source: "over2";
            action: SIGNAL_EMIT "elm,action,click" "";
         }
         program {
            name:   "button_down_double";
            signal: "mouse,down,1,double";
            source: "over3";
            action: SIGNAL_EMIT "elm,action,click,double" "";
         }
         
         //arrows animation
         program {
            name: "arrow_anim_start";
            action: STATE_SET "anim_1" 0.0;
            target: "arrow_right";
            target: "arrow_left";
            transition: LINEAR 0.6;
            after: "arrow_anim_1";
         }
         program {
            name: "arrow_anim_1";
            action: STATE_SET "anim_2" 0.0;
            target: "arrow_right";
            target: "arrow_left";
            transition: LINEAR 0.6;
            after: "arrow_anim_2";
         }
         program {
            name: "arrow_anim_2";
            action: STATE_SET "default" 0.0;
            target: "arrow_right";
            target: "arrow_left";
            after: "arrow_anim_start";
         }
         program {
            name: "arrow_anim_stop";
            action: ACTION_STOP;
            target: "arrow_anim_start";
            target: "arrow_anim_1";
            target: "arrow_anim_2";
            after: "arrow_anim_stop_1";
         }
         program {
            name: "arrow_anim_stop_1";
            action: STATE_SET "default" 0.0;
            target: "arrow_right";
            target: "arrow_left";
            transition: DECELERATE 0.4;
         }
         //fix the pane
         program {
            name:   "panes_fixed";
            signal: "elm.panes.fixed";
            source: "elm";
            action: STATE_SET "disabled" 0.0;
            target: "movement.decider";
            target: "elm.bar";
            target: "bar_top";
            target: "bar_bottom";
            target: "bar_disabled";
         }
         //allow the movement by interaction
         program {
            name:   "panes_unfixed";
            signal: "elm.panes.unfixed";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "movement.decider";
            target: "elm.bar";
            target: "bar_top";
            target: "bar_bottom";
            target: "bar_disabled";
         }
      }
   }
   
//Horizontal Panes style to be used by music application
      group {
      name: "elm/panes/horizontal/music";
      images {
         image: "arrow_up.png" COMP;
         image: "arrow_down.png" COMP;
         image: "00_splitscreen_handler_left_hor.png" COMP;
         image: "00_splitscreen_handler_middle_hor.png" COMP;
         image: "00_splitscreen_handler_right_hor.png" COMP;
         image: "00_splitscreen_pain_hor.png" COMP;
      }
      script {
         public state_pair = 0; //0:both content are not set, 1:both content are set
      }
      parts
      {
         part
         {
            name: "whole";
            type: RECT;
            mouse_events: 0;
            description
            {
               state: "default" 0.0;
               visible: 0;
            }
         }
         
         //2 contents
         part
         {
            name: "whole_left";
            type: RECT;
            mouse_events: 0;
            description
            {
               state: "default" 0.0;
               rel2.to_y: "elm.bar";
               rel2.relative: 1.0 0.0;
               visible: 1;
            }
         }
         part
         {
            name: "elm.swallow.left";
            type: SWALLOW;
            clip_to: "whole_left";
            description
            {
               state: "default" 0.0;
               rel1.to: "whole_left";
               rel2.to: "whole_left";
            }
         }
            
         part
         {
            name: "whole_right";
            type: RECT;
            mouse_events: 0;
            description
            {
               state: "default" 0.0;
               rel1.to_y: "elm.bar";
               rel1.relative: 0.0 1.0;
               visible: 1;
            }
         }
         part
         {
            name: "elm.swallow.right";
            type: SWALLOW;
            clip_to: "whole_right";
            description
            {
               state: "default" 0.0;
               rel1.to: "whole_right";
               rel2.to: "whole_right";
            }
         }
         part { name:"bar_left";
            mouse_events: 0;
            description { state:"default" 0.0;
               rel1 { relative: 0 0; to_y: "elm.bar"; }
               rel2 { relative: 0 1; to: "elm.bar"; }
               image {
                  normal: "00_splitscreen_handler_left_hor.png";
               }
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               visible: 0;
            }
         }
         //BAR
         part { name: "elm.bar";
            mouse_events: 1;
            dragable {
               confine: "whole";
               x: 0 0 0;
               y: 1 1 1;
            }
            scale: 1;
            description { state: "default" 0.0;
               max: 49 0;
               min: 49 0;
               rel1.relative: 0.5 0.0;
               rel2.relative: 0.5 1.0;
               align: 0.5 0.0;
               image {
                  normal: "00_splitscreen_handler_middle_hor.png";
               }
               color: 255 255 255 255;
            }
            description { state: "default" 0.1;
               inherit: "default" 0.0;
               max: 49 40;
               min: 49 40;
            }           
            description { state: "clicked" 0.0;
               inherit: "default" 0.0;
               color: 200 200 200 200;
            }
            description { state: "clicked" 0.1;
               inherit: "default" 0.1;
               color: 200 200 200 200;
            }
            description { state: "disabled" 0.0;
               inherit:  "default" 0.0;
               min: 49 0;
               max: 49 0;
               visible: 0;
            }
            description { state: "disabled" 0.1;
               inherit:  "default" 0.1;
               min: 49 14;
               max: 49 14;
               visible: 0;
            }
         }
         part { name:"bar_right";
            mouse_events: 0;
            description { state:"default" 0.0;
               rel1 { relative: 1 0; to: "elm.bar"; }
               rel2 { relative: 1 1; to_y: "elm.bar"; }
               image {
                  normal: "00_splitscreen_handler_right_hor.png";
               }
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               visible: 0;
            }
         }
         part { name:"bar_disabled";
            mouse_events: 0;
            description { state:"default" 0.0;
               rel1 { relative: 0 0; to_y: "elm.bar"; }
               rel2 { relative: 1 1; to_y: "elm.bar"; }
               image {
                  normal: "00_splitscreen_pain_hor.png";
               }
               visible: 0;
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part { name: "over2";
            mouse_events: 1;
            repeat_events: 1;
            ignore_flags: ON_HOLD;
            description { state: "default" 0.0;
               rel1.to: "elm.bar";
               rel2.to: "elm.bar";
            }
            description { state: "disabled" 0.0;
               inherit:  "default" 0.0;
               visible: 0;
            }
         }
         part { name: "over3";
            mouse_events: 1;
            repeat_events: 1;
            description { state: "default" 0.0;
               color: 255 255 255 0;
               rel1.to: "elm.bar";
               rel2.to: "elm.bar";
            }
            description { state: "clicked" 0.0;
               inherit:  "default" 0.0;
               visible: 1;
               color: 255 255 255 255;
            }
         }
         
         //Arrow
         part {
            name: "arrow_right";
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               min: 45 45;
               max: 45 45;
               color: 255 255 255 0;
               
               rel1.relative: 0.5 1.0;
               rel1.to_y: "elm.bar";
               rel1.offset: -45/2 45/2;
               
               rel2.relative: 0.5 1.0;
               rel2.to_y: "elm.bar";
               rel2.offset: 45/2 45/2;
               
               image.normal: "arrow_down.png";
               
               fixed: 1 1;
            }
            description { state: "anim_1" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 200;
               rel1.offset: -45/2 (45/2 +10);
               rel2.offset: 45/2 (45/2 +10);
            }
            description { state: "anim_2" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 0;
               rel1.offset: -45/2 (45/2 + 20);
               rel2.offset: 45/2 (45/2 + 20);
            }
         }
         part {
            name: "arrow_left";
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               min: 45 45;
               max: 45 45;
               color: 255 255 255 0;
               
               rel1.relative: 0.5 0.0;
               rel1.to_y: "elm.bar";
               rel1.offset: -45/2 -45/2;
               
               rel2.relative: 0.5 0.0;
               rel2.to_y: "elm.bar";
               rel2.offset: 45/2 -45/2;
               
               image.normal: "arrow_up.png";
               
               fixed: 1 1;
            }
            description { state: "anim_1" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 200;
               rel1.offset: -45/2 (-45/2 - 10);
               rel2.offset: 45/2 (-45/2 - 10);
            }
            description { state: "anim_2" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 0;
               rel1.offset: -45/2 (-45/2 - 20);
               rel2.offset: 45/2 (-45/2 - 20);
            }
         }
         part {
            name: "movement.decider";
            mouse_events: 1;
            description { state: "default" 0.0;
               rel1.to: "elm.bar";
               rel2.to: "elm.bar";
               visible: 0;
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
      }
      programs {
         program {
            name:   "panes_pair";
            signal: "elm.panes.pair";
            source: "elm";
            script {
               new st[31];
               new Float:vl;
               set_int(state_pair, 1);
               get_state(PART:"elm.bar", st, 30, vl);
               set_state(PART:"elm.bar", st, 0.1);
            }
         }
         program {
            name:   "panes_unpair";
            signal: "elm.panes.unpair";
            source: "elm";
            script {
               new st[31];
               new Float:vl;
               set_int(state_pair, 0);
               get_state(PART:"elm.bar", st, 30, vl);
               set_state(PART:"elm.bar", st, 0.0);
            }
         }
         program {
            name:   "button_click";
            signal: "mouse,down,1";
            source: "over2";
            action: SIGNAL_EMIT "elm,action,press" "";
            after: "button_click_anim";
            after: "arrow_anim_start";
         }
         program {
            name:   "button_click_anim";
            script {
               if(get_int(state_pair) == 1)
                  set_state(PART:"elm.bar", "clicked", 0.1);
               else
                  set_state(PART:"elm.bar", "clicked", 0.0);            
            }
         }
         program {
            name:   "button_unclick";
            signal: "mouse,up,1";
            source: "over2";
            action: SIGNAL_EMIT "elm,action,unpress" "";
            after: "button_unclick_anim";
            after: "arrow_anim_stop";
         }
         program {
            name:   "button_unclick_anim";
            script {
               if(get_int(state_pair) == 1)
                  set_state(PART:"elm.bar", "default", 0.1);
               else
                  set_state(PART:"elm.bar", "default", 0.0);            
            }
         }
         program {
            name:   "button_click2";
            signal: "mouse,down,1";
            source: "over3";
            action: STATE_SET "clicked" 0.0;
            target: "over3";
         }
         program {
            name:   "button_unclick2";
            signal: "mouse,up,1";
            source: "over3";
            action: STATE_SET "default" 0.0;
            transition: DECELERATE 0.5;
            target: "over3";
         }
         program {
            name:   "button_unclick3";
            signal: "mouse,up,1";
            source: "over2";
            action: SIGNAL_EMIT "elm,action,click" "";
         }
         program {
            name:   "button_down_double";
            signal: "mouse,down,1,double";
            source: "over3";
            action: SIGNAL_EMIT "elm,action,click,double" "";
         }
         
         //arrows animation
         program {
            name: "arrow_anim_start";
            action: STATE_SET "anim_1" 0.0;
            target: "arrow_right";
            target: "arrow_left";
            transition: LINEAR 0.6;
            after: "arrow_anim_1";
         }
         program {
            name: "arrow_anim_1";
            action: STATE_SET "anim_2" 0.0;
            target: "arrow_right";
            target: "arrow_left";
            transition: LINEAR 0.6;
            after: "arrow_anim_2";
         }
         program {
            name: "arrow_anim_2";
            action: STATE_SET "default" 0.0;
            target: "arrow_right";
            target: "arrow_left";
            after: "arrow_anim_start";
         }
         program {
            name: "arrow_anim_stop";
            action: ACTION_STOP;
            target: "arrow_anim_start";
            target: "arrow_anim_1";
            target: "arrow_anim_2";
            after: "arrow_anim_stop_1";
         }
         program {
            name: "arrow_anim_stop_1";
            action: STATE_SET "default" 0.0;
            target: "arrow_right";
            target: "arrow_left";
            transition: DECELERATE 0.4;
         }
         //fix the pane
         program {
            name:   "panes_fixed";
            signal: "elm.panes.fixed";
            source: "elm";
            action: STATE_SET "disabled" 0.0;
            target: "movement.decider";
            target: "elm.bar";
            target: "bar_left";
            target: "bar_right";
            target: "bar_disabled";
         }
         //allow the movement by interaction
         program {
            name:   "panes_unfixed";
            signal: "elm.panes.unfixed";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "movement.decider";
            target: "elm.bar";
            target: "bar_left";
            target: "bar_right";
            target: "bar_disabled";
         }
      }
   }
