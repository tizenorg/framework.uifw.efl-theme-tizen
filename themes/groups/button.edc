/*
 *  nBeat-theme
 *
 * Copyright (c) 2000 - 2010 Samsung Electronics Co., Ltd.
 *
 * Contact: Seokjae Jeong <seok.j.jeong@samsung.com>, Myoungwoon Roy Kim <Myoungwoon.kim@samsung.com>, Jeonghyun Yun <jh0506.yun@samsung.com>, Jaehwan Kim <jae.hwan.kim@samsung.com>, 
 * 		Chuneon Park <chuneon.park@samsung.com>, Juyung Seo <juyung.seo@samsung.com>, Woohyun Jung <wh0705.jung@samsung.com>, Myungjae Lee <mjae.lee@samsung.com>, Hyoyoung Chang <hyoyoung.chang@samsung.com>, 
 *		Hyunsil Park <hyunsil.park@samsung.com>, Sohyun Kim <anna1014.kim@samsung.com>, Seunggyun Kim <sgyun.kim@samsung.com>
 * 
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the
 * Free Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 * 
 * This library is distributed in the hope that it will be useful, but WITHOUT ANY
 * WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public
 * License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this library; if not, write to the Free Software Foundation, Inc., 51
 * Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
 *
 */

///////////////////////////////////////////////////////////////////////////////////////
	group { name: "elm/button/base/text_only/style1";
		images {
			image: "00_button_01_normal.png" COMP;
			image: "00_button_01_press.png" COMP;
			image: "00_button_01_focus.png" COMP;
			image: "00_button_01_dim.png" COMP;
		}
		script {
			public button_state = 0; //0:enabled, 1: disabled
		}
		parts {
			part { name: "button_image";
				mouse_events: 1;
				scale: 1;
				description { state: "default" 0.0;
					min: 16 50;
					image {
						normal: "00_button_01_normal.png";
						border: 7 7 7 7;
						border_scale: 1;
					}
				}
				description { state: "clicked" 0.0;
					inherit: "default" 0.0;
					image.normal: "00_button_01_press.png";
				}
				description { state: "disabled" 0.0;
					inherit:  "default" 0.0;
					image.normal: "00_button_01_dim.png";
				}
				description { state: "focused" 0.0;
					inherit: "default" 0.0;
					image.normal: "00_button_01_focus.png";
				}
			}
			part {
				name: "padding_left";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					align: 0.0 0.0;
					rel1.relative: 0.0 0.0;
					rel2.relative: 0.0 1.0;
					min: 5 5;
					fixed: 1 0;
					color: 0 0 0 0;
				}
			}
			part {
				name: "padding_right";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					align: 1.0 0.0;
					rel1.relative: 1.0 0.0;
					rel2.relative: 1.0 1.0;
					min: 5 5;
					fixed: 1 0;
					color: 0 0 0 0;
				}
			}
			part {
				name: "padding_top";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					align: 0.0 0.0;
					rel1.relative: 0.0 0.0;
					rel2.relative: 1.0 0.0;
					min: 5 5;
					fixed: 0 1;
					color: 0 0 0 0;
				}
			}
			part {
				name: "padding_bottom";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					align: 1.0 1.0;
					rel1.relative: 0.0 1.0;
					rel2.relative: 1.0 1.0;
					min: 5 5;
					fixed: 0 1;
					color: 0 0 0 0;
				}
			}
			part {
				name: "icon_rect";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					visible: 1;
					min: 0 40;
					fixed: 1 0;
					rel1 {relative: 0.0 1.0; to_x: "elm.swallow.content"; to_y: "padding_top"; }
					rel2 {relative: 1.0 0.0; to_x: "elm.swallow.content"; to_y: "padding_bottom"; }
					align: 0.0 0.5;
					color: 0 0 0 0;
				}
			} 
			part {
				name: "padding_icon_text";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0; //when only icon or no icon is there
					align: 0.0 0.0;
					rel1 { relative: 1.0 0.0; to: "icon_rect"; }
					rel2 { relative: 1.0 1.0; to: "icon_rect"; } 			
					fixed: 1 0;
					min: 0 0;
					color: 0 0 0 0;
				}
				description { state: "icononly" 0.0;
					inherit: "default" 0.0;
				}
				description { state: "visible" 0.0; //when icon is visible
					align: 0.0 0.0;
					rel1 { relative: 1.0 0.0; to: "icon_rect"; }
					rel2 { relative: 1.0 1.0; to: "icon_rect"; } 			
					fixed: 1 0;
					min: 5 0;
					color: 0 0 0 0;
				}
			}					
			part { name: "elm.swallow.content";
				type: SWALLOW;
				scale: 1;
				description { state: "default" 0.0;
					visible: 0;
					align: 0.0 0.5;
					rel1 {relative: 1.0 1.0; to_x: "padding_left"; to_y: "padding_top"; }
					rel2 {relative: 1.0 0.0; to_x: "padding_left"; to_y: "padding_bottom"; }
					fixed: 1 0;
				}
				description { state: "visible" 0.0;
					fixed: 1 0;
					visible: 1;
					align: 0.0 0.5;
					rel1 {relative: 1.0 1.0; to_x: "padding_left"; to_y: "padding_top"; }
					rel2 {relative: 1.0 0.0; to_x: "padding_left"; to_y: "padding_bottom"; }
					aspect: 1.0 1.0;
					aspect_preference: VERTICAL;
				}
				description { state: "icononly" 0.0;
					visible: 1;
					min: 40 40;
					rel1 {relative: 1.0 1.0; to_x: "padding_left"; to_y: "padding_top"; }
					rel2 {relative: 0.0 0.0; to_x: "padding_right"; to_y: "padding_bottom"; }
					align: 0.5 0.5;
					aspect: 1.0 1.0;
					aspect_preference: VERTICAL;
				}
			}
			part { name: "elm.text";
				type:          TEXT;
				effect:        SHADOW;
				mouse_events:  0;
				scale: 1;
				description { state: "default" 0.0;
					visible: 0;
					rel1 { relative: 1.0 1.0; to_x: "padding_icon_text"; to_y: "padding_top"; }
					rel2 { relative: 0.0 0.0; to_x: "padding_right"; to_y:"padding_bottom"; }
					align: 0.5 0.5;
					color: BUTTON_TEXT_STYLE1_NORMAL_COLOR_INC;
					color2: BUTTON_TEXT_STYLE1_NORMAL_SHAWDOW_COLOR_INC;
					text {
						font: "SLP:style=Medium";
						size: 24;
						min:  0 0;
						align: 0.5 0.5;
						max: 1 0;
					}
				}
				description { state: "visible" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					min: 90 40;
				}
				description { state: "clicked" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					min: 0 0;
					color: BUTTON_TEXT_STYLE1_PRESSED_COLOR_INC;
					color2: BUTTON_TEXT_STYLE1_PRESSED_SHAWDOW_COLOR_INC;
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					color: 87 87 87 255;
					color3: 0 0 0 0;
				}
				description { state: "disabled_visible" 0.0;
					inherit: "default" 0.0;
					color: BUTTON_TEXT_STYLE1_DISABLED_COLOR_INC;
					color2: BUTTON_TEXT_STYLE1_DISABLED_SHAWDOW_COLOR_INC;
					color3: 0 0 0 0;
					visible: 1;
				}
				description { state: "focused" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					min: 0 0;
					color: BUTTON_TEXT_STYLE1_FOCUSED_COLOR_INC;
					color2: BUTTON_TEXT_STYLE1_FOCUSED_SHAWDOW_COLOR_INC;
				}
			}
			part { name: "over2";
				type: RECT;
				mouse_events: 1;
				repeat_events: 1;
				ignore_flags: ON_HOLD;
				description { state: "default" 0.0;
					color: 0 0 0 0;
				}
				description { state: "disabled" 0.0;
					inherit:  "default" 0.0;
					visible: 0;
				}
			}
			part { name: "over3";
				type: RECT;
				mouse_events: 1;
				repeat_events: 1;
				description { state: "default" 0.0;
					color: 0 0 0 0;
				}
				description { state: "clicked" 0.0;
					inherit:  "default" 0.0;
					visible: 1;
				}
			}
			part { name: "disabler";
				type: RECT;
				description { state: "default" 0.0;
					color: 0 0 0 0;
					visible: 0;
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
			}
		}
		programs {
			program { name: "button_click";
				signal: "mouse,down,1";
				source: "over2";
				action: SIGNAL_EMIT "elm,action,press" "";
				after: "button_click_anim";
			}
			program { name: "button_click_anim";
				action: STATE_SET "clicked" 0.0;
				target: "button_image";
				after: "text_clicked";
			}
			program { name: "text_clicked";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "visible"))
						set_state(PART:"elm.text", "clicked", 0.0);
				}
			}
			program { name: "button_unpress";
				action: SIGNAL_EMIT "elm,action,unpress" "";
			}
			program { name: "button_mouseout_clicked";
				signal: "mouse,up,1";
				source: "over3";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.swallow.content", st, 30, vl);
					if (strcmp(st, "icononly"))
					{
						emit("elm,action,default,text,set", "");
						set_state(PART:"elm.text", "visible", 0.0);
					}
					if(get_int(button_state) !=1)
						set_state(PART:"button_image", "default", 0.0);
				}
				after: button_unpress;
			}
			program { name: "button_click2";
				signal: "mouse,down,1";
				source: "over3";
				action: STATE_SET "clicked" 0.0;
				target: "over3";
			}
			program { name: "button_unclick2";
				signal: "mouse,clicked,1";
				source: "over3";
				action: STATE_SET "default" 0.0;
				target: "over3";
			}
			program { name: "button_unclick3";
				signal: "mouse,clicked,1";
				source: "over2";
				action: SIGNAL_EMIT "elm,action,click" "";
			}
			program { name: "text_show";
				signal: "elm,state,text,visible";
				source: "elm";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.swallow.content", st, 30, vl);
					if (!strcmp(st, "icononly"))
					{
						set_state(PART:"elm.swallow.content", "visible", 0.0);
						set_state(PART:"padding_icon_text", "visible", 0.0);
					}
					set_state(PART:"elm.text", "visible", 0.0);
				}
			}
			program { name: "text_hide";
				signal: "elm,state,text,hidden";
				source: "elm";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.swallow.content", st, 30, vl);
					if (!strcmp(st, "visible"))
					{
						set_state(PART:"elm.swallow.content", "icononly", 0.0);
						set_state(PART:"padding_icon_text", "icononly", 0.0);
					}
					set_state(PART:"elm.text", "default", 0.0);
				}
			}
			program { name: "icon_show";
				signal: "elm,state,icon,visible";
				source: "elm";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "visible"))
					{
						set_state(PART:"elm.swallow.content", "visible", 0.0);
						set_state(PART:"padding_icon_text", "visible", 0.0);
					}
					else
					{
						set_state(PART:"elm.swallow.content", "icononly", 0.0);
						set_state(PART:"padding_icon_text", "icononly", 0.0);
					}
				}
			}
			program { name: "icon_hide";
				signal: "elm,state,icon,hidden";
				source: "elm";
				action:  STATE_SET "default" 0.0;
				target: "elm.swallow.content";
			}
			program { name: "disable";
				signal: "elm,state,disabled";
				source: "elm";
				action: STATE_SET "disabled" 0.0;
				target: "button_image";
				target: "over2";
				target: "disabler";
				after: "disable_text";
			}
			program { name: "disable_text";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "visible"))
						set_state(PART:"elm.text", "disabled_visible", 0.0);
					else
						set_state(PART:"elm.text", "disabled", 0.0);
					set_int(button_state, 1);
				}
			}
			program { name: "enable";
				signal: "elm,state,enabled";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "button_image";
				target: "over2";
				target: "disabler";
				after: "enable_text";
			}
			program { name: "enable_text";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "disabled_visible"))
						set_state(PART:"elm.text", "visible", 0.0);
					else
						set_state(PART:"elm.text", "default", 0.0);
					set_int(button_state, 0);
				}
			}
			program { name: "focused";
				//signal: "elm,action,focus";
				//source: "elm";
				action: STATE_SET "focused" 0.0;
				target: "button_image";
				target: "elm.text";
			}
			program { name: "unfocused";
				//signal: "elm,action,unfocus";
				//source: "elm";
				action: STATE_SET "default" 0.0;
				target: "button_image";
				after: "unfocus_text";
			}
			program { name: "unfocus_text";
				action: STATE_SET "visible" 0.0;
				target: "elm.text";
			}
		}
	}

///////////////////////////////////////////////////////////////////////////////////////
	group { name: "elm/button/base/text_only/style2";
		images {
			image: "00_button_03_normal.png" COMP;
			image: "00_button_03_press.png" COMP;
			image: "00_button_03_focus.png" COMP;
			image: "00_button_03_dim.png" COMP;
		}
		script {
			public button_state = 0; //0:enabled, 1: disabled
		}
		parts {
			part { name: "button_image";
				mouse_events: 1;
				scale: 1;
				description { state: "default" 0.0;
					min: 16 50;
					image {
						normal: "00_button_03_normal.png";
						border: 7 7 7 7;
						border_scale: 1;
					}
				}
				description { state: "clicked" 0.0;
					inherit: "default" 0.0;
					image.normal: "00_button_03_press.png";
				}
				description { state: "disabled" 0.0;
					inherit:  "default" 0.0;
					image.normal: "00_button_03_dim.png";
				}
				description { state: "focused" 0.0;
					inherit: "default" 0.0;
					image.normal: "00_button_03_focus.png";
				}
			}
			part {
				name: "padding_left";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					align: 0.0 0.0;
					rel1.relative: 0.0 0.0;
					rel2.relative: 0.0 1.0;
					min: 5 5;
					fixed: 1 0;
					color: 0 0 0 0;
				}
			}
			part {
				name: "padding_right";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					align: 1.0 0.0;
					rel1.relative: 1.0 0.0;
					rel2.relative: 1.0 1.0;
					min: 5 5;
					fixed: 1 0;
					color: 0 0 0 0;
				}
			}
			part {
				name: "padding_top";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					align: 0.0 0.0;
					rel1.relative: 0.0 0.0;
					rel2.relative: 1.0 0.0;
					min: 5 5;
					fixed: 0 1;
					color: 0 0 0 0;
				}
			}
			part {
				name: "padding_bottom";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					align: 1.0 1.0;
					rel1.relative: 0.0 1.0;
					rel2.relative: 1.0 1.0;
					min: 5 5;
					fixed: 0 1;
					color: 0 0 0 0;
				}
			}
			part {
				name: "icon_rect";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					visible: 1;
					min: 0 40;
					fixed: 1 0;
					rel1 {relative: 0.0 1.0; to_x: "elm.swallow.content"; to_y: "padding_top"; }
					rel2 {relative: 1.0 0.0; to_x: "elm.swallow.content"; to_y: "padding_bottom"; }
					align: 0.0 0.5;
					color: 0 0 0 0;
				}
			} 
			part {
				name: "padding_icon_text";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0; //when only icon or no icon is there
					align: 0.0 0.0;
					rel1 { relative: 1.0 0.0; to: "icon_rect"; }
					rel2 { relative: 1.0 1.0; to: "icon_rect"; } 			
					fixed: 1 0;
					min: 0 0;
					color: 0 0 0 0;
				}
				description { state: "icononly" 0.0;
					inherit: "default" 0.0;
				}
				description { state: "visible" 0.0; //when icon is visible
					align: 0.0 0.0;
					rel1 { relative: 1.0 0.0; to: "icon_rect"; }
					rel2 { relative: 1.0 1.0; to: "icon_rect"; } 			
					fixed: 1 0;
					min: 5 0;
					color: 0 0 0 0;
				}
			}					
			part { name: "elm.swallow.content";
				type: SWALLOW;
				scale: 1;
				description { state: "default" 0.0;
					visible: 0;
					align: 0.0 0.5;
					rel1 {relative: 1.0 1.0; to_x: "padding_left"; to_y: "padding_top"; }
					rel2 {relative: 1.0 0.0; to_x: "padding_left"; to_y: "padding_bottom"; }
					fixed: 1 0;
				}
				description { state: "visible" 0.0;
					fixed: 1 0;
					visible: 1;
					align: 0.0 0.5;
					rel1 {relative: 1.0 1.0; to_x: "padding_left"; to_y: "padding_top"; }
					rel2 {relative: 1.0 0.0; to_x: "padding_left"; to_y: "padding_bottom"; }
					aspect: 1.0 1.0;
					aspect_preference: VERTICAL;
				}
				description { state: "icononly" 0.0;;
					visible: 1;
					min: 40 40;
					rel1 {relative: 1.0 1.0; to_x: "padding_left"; to_y: "padding_top"; }
					rel2 {relative: 0.0 0.0; to_x: "padding_right"; to_y: "padding_bottom"; }
					align: 0.5 0.5;
					aspect: 1.0 1.0;
					aspect_preference: VERTICAL;
				}
			}
			part { name: "elm.text";
				type:          TEXT;
				effect:        SHADOW;
				mouse_events:  0;
				scale: 1;
				description { state: "default" 0.0;
					visible: 0;
					rel1 { relative: 1.0 1.0; to_x: "padding_icon_text"; to_y: "padding_top"; }
					rel2 { relative: 0.0 0.0; to_x: "padding_right"; to_y:"padding_bottom"; }
					align: 0.5 0.5;
					color: BUTTON_TEXT_STYLE2_NORMAL_COLOR_INC;
					color2: BUTTON_TEXT_STYLE2_NORMAL_SHAWDOW_COLOR_INC;
					text {
						font: "SLP:style=Medium";
						size: 24;
						min:  0 0;
						align: 0.5 0.5;
						max: 1 0;
					}
				}
				description { state: "visible" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					min: 90 40;
				}
				description { state: "clicked" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					min: 0 0;
					color: BUTTON_TEXT_STYLE2_PRESSED_COLOR_INC;
					color2: BUTTON_TEXT_STYLE2_PRESSED_SHAWDOW_COLOR_INC;
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					color: 0 0 0 128;
					color3: 0 0 0 0;
				}
				description { state: "disabled_visible" 0.0;
					inherit: "default" 0.0;
					color: BUTTON_TEXT_STYLE2_DISABLED_COLOR_INC;
					color2: BUTTON_TEXT_STYLE2_DISABLED_SHAWDOW_COLOR_INC;
					color3: 0 0 0 0;
					visible: 1;
				}
				description { state: "focused" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					min: 0 0;
					color: BUTTON_TEXT_STYLE2_FOCUSED_COLOR_INC;
					color2: BUTTON_TEXT_STYLE2_FOCUSED_SHAWDOW_COLOR_INC;
				}
			}
			part { name: "over2";
				type: RECT;
				mouse_events: 1;
				repeat_events: 1;
				ignore_flags: ON_HOLD;
				description { state: "default" 0.0;
					color: 0 0 0 0;
				}
				description { state: "disabled" 0.0;
					inherit:  "default" 0.0;
					visible: 0;
				}
			}
			part { name: "over3";
				type: RECT;
				mouse_events: 1;
				repeat_events: 1;
				description { state: "default" 0.0;
					color: 0 0 0 0;
				}
				description { state: "clicked" 0.0;
					inherit:  "default" 0.0;
					visible: 1;
				}
			}
			part { name: "disabler";
				type: RECT;
				description { state: "default" 0.0;
					color: 0 0 0 0;
					visible: 0;
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
			}
		}
		programs {
			program { name: "button_click";
				signal: "mouse,down,1";
				source: "over2";
				action: SIGNAL_EMIT "elm,action,press" "";
				after: "button_click_anim";
			}
			program { name: "button_click_anim";
				action: STATE_SET "clicked" 0.0;
				target: "button_image";
				after: "text_clicked";
			}
			program { name: "text_clicked";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "visible"))
						set_state(PART:"elm.text", "clicked", 0.0);
				}
			}
			program { name: "button_unpress";
				action: SIGNAL_EMIT "elm,action,unpress" "";
			}
			program { name: "button_mouseout_clicked";
				signal: "mouse,up,1";
				source: "over3";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.swallow.content", st, 30, vl);
					if (strcmp(st, "icononly"))
					{
						emit("elm,action,default,text,set", "");
						set_state(PART:"elm.text", "visible", 0.0);
					}
					if(get_int(button_state) !=1)
						set_state(PART:"button_image", "default", 0.0);
				}
				after: button_unpress;
			}
			program { name: "button_click2";
				signal: "mouse,down,1";
				source: "over3";
				action: STATE_SET "clicked" 0.0;
				target: "over3";
			}
			program { name: "button_unclick2";
				signal: "mouse,clicked,1";
				source: "over3";
				action: STATE_SET "default" 0.0;
				target: "over3";
			}
			program { name: "button_unclick3";
				signal: "mouse,clicked,1";
				source: "over2";
				action: SIGNAL_EMIT "elm,action,click" "";
			}
			program { name: "text_show";
				signal: "elm,state,text,visible";
				source: "elm";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.swallow.content", st, 30, vl);
					if (!strcmp(st, "icononly"))
					{
						set_state(PART:"elm.swallow.content", "visible", 0.0);
						set_state(PART:"padding_icon_text", "visible", 0.0);
					}
					set_state(PART:"elm.text", "visible", 0.0);
				}
			}
			program { name: "text_hide";
				signal: "elm,state,text,hidden";
				source: "elm";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.swallow.content", st, 30, vl);
					if (!strcmp(st, "visible"))
					{
						set_state(PART:"elm.swallow.content", "icononly", 0.0);
						set_state(PART:"padding_icon_text", "icononly", 0.0);
					}
					set_state(PART:"elm.text", "default", 0.0);
				}
			}
			program { name: "icon_show";
				signal: "elm,state,icon,visible";
				source: "elm";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "visible"))
					{
						set_state(PART:"elm.swallow.content", "visible", 0.0);
						set_state(PART:"padding_icon_text", "visible", 0.0);
					}
					else
					{
						set_state(PART:"elm.swallow.content", "icononly", 0.0);
						set_state(PART:"padding_icon_text", "icononly", 0.0);
					}
				}
			}
			program { name: "icon_hide";
				signal: "elm,state,icon,hidden";
				source: "elm";
				action:  STATE_SET "default" 0.0;
				target: "elm.swallow.content";
			}
			program { name: "disable";
				signal: "elm,state,disabled";
				source: "elm";
				action: STATE_SET "disabled" 0.0;
				target: "button_image";
				target: "over2";
				target: "disabler";
				after: "disable_text";
			}
			program { name: "disable_text";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "visible"))
						set_state(PART:"elm.text", "disabled_visible", 0.0);
					else
						set_state(PART:"elm.text", "disabled", 0.0);
					set_int(button_state, 1);
				}
			}
			program { name: "enable";
				signal: "elm,state,enabled";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "button_image";
				target: "over2";
				target: "disabler";
				after: "enable_text";
			}
			program { name: "enable_text";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "disabled_visible"))
						set_state(PART:"elm.text", "visible", 0.0);
					else
						set_state(PART:"elm.text", "default", 0.0);
					set_int(button_state, 0);
				}
			}
			program { name: "focused";
				//signal: "elm,action,focus";
				//source: "elm";
				action: STATE_SET "focused" 0.0;
				target: "button_image";
				target: "elm.text";
			}
			program { name: "unfocused";
				//signal: "elm,action,unfocus";
				//source: "elm";
				action: STATE_SET "default" 0.0;
				target: "button_image";
				after: "unfocus_text";
			}
			program { name: "unfocus_text";
				action: STATE_SET "visible" 0.0;
				target: "elm.text";
			}
		}
	}

///////////////////////////////////////////////////////////////////////////////////////
	group { name: "elm/button/base/text_only/style3";
		images {
			image: "00_button_04_normal.png" COMP;
			image: "00_button_04_press.png" COMP;
			image: "00_button_04_focus.png" COMP;
			image: "00_button_04_dim.png" COMP;
		}
		script {
			public button_state = 0; //0:enabled, 1: disabled
		}
		parts {
			part { name: "button_image";
				mouse_events: 1;
				scale: 1;
				description { state: "default" 0.0;
					min: 28 75;
					image {
						normal: "00_button_04_normal.png";
						border: 13 13 7 7;
						border_scale: 1;
					}
				}
				description { state: "clicked" 0.0;
					inherit: "default" 0.0;
					image.normal: "00_button_04_press.png";
				}
				description { state: "disabled" 0.0;
					inherit:  "default" 0.0;
					image.normal: "00_button_04_dim.png";
				}
				description { state: "focused" 0.0;
					inherit: "default" 0.0;
					image.normal: "00_button_04_focus.png";
				}
			}
			part {
				name: "padding_left";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					align: 0.0 0.0;
					rel1.relative: 0.0 0.0;
					rel2.relative: 0.0 1.0;
					min: 5 5;
					fixed: 1 0;
					color: 0 0 0 0;
				}
			}
			part {
				name: "padding_right";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					align: 1.0 0.0;
					rel1.relative: 1.0 0.0;
					rel2.relative: 1.0 1.0;
					min: 5 5;
					fixed: 1 0;
					color: 0 0 0 0;
				}
			}
			part {
				name: "padding_top";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					align: 0.0 0.0;
					rel1.relative: 0.0 0.0;
					rel2.relative: 1.0 0.0;
					min: 5 5;
					fixed: 0 1;
					color: 0 0 0 0;
				}
			}
			part {
				name: "padding_bottom";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					align: 1.0 1.0;
					rel1.relative: 0.0 1.0;
					rel2.relative: 1.0 1.0;
					min: 5 5;
					fixed: 0 1;
					color: 0 0 0 0;
				}
			}
			part {
				name: "icon_rect";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					visible: 1;
					min: 0 65;
					fixed: 1 0;
					rel1 {relative: 0.0 1.0; to_x: "elm.swallow.content"; to_y: "padding_top"; }
					rel2 {relative: 1.0 0.0; to_x: "elm.swallow.content"; to_y: "padding_bottom"; }
					align: 0.0 0.5;
					color: 0 0 0 0;
				}
			} 
			part {
				name: "padding_icon_text";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0; //when only icon or no icon is there
					align: 0.0 0.0;
					rel1 { relative: 1.0 0.0; to: "icon_rect"; }
					rel2 { relative: 1.0 1.0; to: "icon_rect"; } 			
					fixed: 1 0;
					min: 0 0;
					color: 0 0 0 0;
				}
				description { state: "icononly" 0.0;
					inherit: "default" 0.0;
				}
				description { state: "visible" 0.0; //when icon is visible
					align: 0.0 0.0;
					rel1 { relative: 1.0 0.0; to: "icon_rect"; }
					rel2 { relative: 1.0 1.0; to: "icon_rect"; } 			
					fixed: 1 0;
					min: 5 0;
					color: 0 0 0 0;
				}
			}					
			part { name: "elm.swallow.content";
				type: SWALLOW;
				scale: 1;
				description { state: "default" 0.0;
					visible: 0;
					align: 0.0 0.5;
					rel1 {relative: 1.0 1.0; to_x: "padding_left"; to_y: "padding_top"; }
					rel2 {relative: 1.0 0.0; to_x: "padding_left"; to_y: "padding_bottom"; }
					fixed: 1 0;
				}
				description { state: "visible" 0.0;
					fixed: 1 0;
					visible: 1;
					align: 0.0 0.5;
					rel1 {relative: 1.0 1.0; to_x: "padding_left"; to_y: "padding_top"; }
					rel2 {relative: 1.0 0.0; to_x: "padding_left"; to_y: "padding_bottom"; }
					aspect: 1.0 1.0;
					aspect_preference: VERTICAL;
				}
				description { state: "icononly" 0.0;;
					visible: 1;
					min: 65 65;
					rel1 {relative: 1.0 1.0; to_x: "padding_left"; to_y: "padding_top"; }
					rel2 {relative: 0.0 0.0; to_x: "padding_right"; to_y: "padding_bottom"; }
					align: 0.5 0.5;
					aspect: 1.0 1.0;
					aspect_preference: VERTICAL;
				}
			}
			part { name: "elm.text";
				type:          TEXT;
				effect:        SHADOW;
				mouse_events:  0;
				scale: 1;
				description { state: "default" 0.0;
					visible: 0;
					rel1 { relative: 1.0 1.0; to_x: "padding_icon_text"; to_y: "padding_top"; }
					rel2 { relative: 0.0 0.0; to_x: "padding_right"; to_y:"padding_bottom"; }
					align: 0.5 0.5;
					color: BUTTON_TEXT_STYLE3_NORMAL_COLOR_INC;
					color2: BUTTON_TEXT_STYLE3_NORMAL_SHAWDOW_COLOR_INC;
					text {
						font: "SLP:style=Medium";
						size: 30;
						min:  0 0;
						align: 0.5 0.5;
						max: 1 0;
					}
				}
				description { state: "visible" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					min: 90 65;
				}
				description { state: "clicked" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					min: 0 0;
					color: BUTTON_TEXT_STYLE3_PRESSED_COLOR_INC;
					color2: BUTTON_TEXT_STYLE3_PRESSED_SHAWDOW_COLOR_INC;
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					color: 0 0 0 128;
					color3: 0 0 0 0;
				}
				description { state: "disabled_visible" 0.0;
					inherit: "default" 0.0;
					color: BUTTON_TEXT_STYLE3_DISABLED_COLOR_INC;
					color2: BUTTON_TEXT_STYLE3_DISABLED_SHAWDOW_COLOR_INC;
					color3: 0 0 0 0;
					visible: 1;
				}
				description { state: "focused" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					min: 0 0;
					color: BUTTON_TEXT_STYLE3_FOCUSED_COLOR_INC;
					color2: BUTTON_TEXT_STYLE3_FOCUSED_SHAWDOW_COLOR_INC;
				}
			}
			part { name: "over2";
				type: RECT;
				mouse_events: 1;
				repeat_events: 1;
				ignore_flags: ON_HOLD;
				description { state: "default" 0.0;
					color: 0 0 0 0;
				}
				description { state: "disabled" 0.0;
					inherit:  "default" 0.0;
					visible: 0;
				}
			}
			part { name: "over3";
				type: RECT;
				mouse_events: 1;
				repeat_events: 1;
				description { state: "default" 0.0;
					color: 0 0 0 0;
				}
				description { state: "clicked" 0.0;
					inherit:  "default" 0.0;
					visible: 1;
				}
			}
			part { name: "disabler";
				type: RECT;
				description { state: "default" 0.0;
					color: 0 0 0 0;
					visible: 0;
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
			}
		}
		programs {
			program { name: "button_click";
				signal: "mouse,down,1";
				source: "over2";
				action: SIGNAL_EMIT "elm,action,press" "";
				after: "button_click_anim";
			}
			program { name: "button_click_anim";
				action: STATE_SET "clicked" 0.0;
				target: "button_image";
				after: "text_clicked";
			}
			program { name: "text_clicked";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "visible"))
						set_state(PART:"elm.text", "clicked", 0.0);
				}
			}
			program { name: "button_unpress";
				action: SIGNAL_EMIT "elm,action,unpress" "";
			}
			program { name: "button_mouseout_clicked";
				signal: "mouse,up,1";
				source: "over3";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.swallow.content", st, 30, vl);
					if (strcmp(st, "icononly"))
					{
						emit("elm,action,default,text,set", "");
						set_state(PART:"elm.text", "visible", 0.0);
					}
					if(get_int(button_state) !=1)
						set_state(PART:"button_image", "default", 0.0);
				}
				after: button_unpress;
			}
			program { name: "button_click2";
				signal: "mouse,down,1";
				source: "over3";
				action: STATE_SET "clicked" 0.0;
				target: "over3";
			}
			program { name: "button_unclick2";
				signal: "mouse,clicked,1";
				source: "over3";
				action: STATE_SET "default" 0.0;
				target: "over3";
			}
			program { name: "button_unclick3";
				signal: "mouse,clicked,1";
				source: "over2";
				action: SIGNAL_EMIT "elm,action,click" "";
			}
			program { name: "text_show";
				signal: "elm,state,text,visible";
				source: "elm";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.swallow.content", st, 30, vl);
					if (!strcmp(st, "icononly"))
					{
						set_state(PART:"elm.swallow.content", "visible", 0.0);
						set_state(PART:"padding_icon_text", "visible", 0.0);
					}
					set_state(PART:"elm.text", "visible", 0.0);
				}
			}
			program { name: "text_hide";
				signal: "elm,state,text,hidden";
				source: "elm";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.swallow.content", st, 30, vl);
					if (!strcmp(st, "visible"))
					{
						set_state(PART:"elm.swallow.content", "icononly", 0.0);
						set_state(PART:"padding_icon_text", "icononly", 0.0);
					}
					set_state(PART:"elm.text", "default", 0.0);
				}
			}
			program { name: "icon_show";
				signal: "elm,state,icon,visible";
				source: "elm";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "visible"))
					{
						set_state(PART:"elm.swallow.content", "visible", 0.0);
						set_state(PART:"padding_icon_text", "visible", 0.0);
					}
					else
					{
						set_state(PART:"elm.swallow.content", "icononly", 0.0);
						set_state(PART:"padding_icon_text", "icononly", 0.0);
					}
				}
			}
			program { name: "icon_hide";
				signal: "elm,state,icon,hidden";
				source: "elm";
				action:  STATE_SET "default" 0.0;
				target: "elm.swallow.content";
			}
			program { name: "disable";
				signal: "elm,state,disabled";
				source: "elm";
				action: STATE_SET "disabled" 0.0;
				target: "button_image";
				target: "over2";
				target: "disabler";
				after: "disable_text";
			}
			program { name: "disable_text";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "visible"))
						set_state(PART:"elm.text", "disabled_visible", 0.0);
					else
						set_state(PART:"elm.text", "disabled", 0.0);
					set_int(button_state, 1);
				}
			}
			program { name: "enable";
				signal: "elm,state,enabled";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "button_image";
				target: "over2";
				target: "disabler";
				after: "enable_text";
			}
			program { name: "enable_text";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "disabled_visible"))
						set_state(PART:"elm.text", "visible", 0.0);
					else
						set_state(PART:"elm.text", "default", 0.0);
					set_int(button_state, 0);
				}
			}
			program { name: "focused";
				//signal: "elm,action,focus";
				//source: "elm";
				action: STATE_SET "focused" 0.0;
				target: "button_image";
				target: "elm.text";
			}
			program { name: "unfocused";
				//signal: "elm,action,unfocus";
				//source: "elm";
				action: STATE_SET "default" 0.0;
				target: "button_image";
				after: "unfocus_text";
			}
			program { name: "unfocus_text";
				action: STATE_SET "visible" 0.0;
				target: "elm.text";
			}
		}
	}

///////////////////////////////////////////////////////////////////////////////////////
	group { name: "elm/button/base/text_only/sweep";
		images {
			image: "00_button_sweep.png" COMP;
			image: "00_button_sweep_press.png" COMP;//focus image is missing, so using press
			image: "00_button_sweep_dim.png" COMP;
		}
		script {
			public button_state = 0; //0:enabled, 1: disabled
		}
		parts {
			part { name: "button_image";
				mouse_events: 1;
				scale: 1;
				description { state: "default" 0.0;
					min: 16 52;
					image {
						normal: "00_button_sweep.png";
						border: 7 7 7 7;
						border_scale: 1;
					}
				}
				description { state: "clicked" 0.0;
					inherit: "default" 0.0;
					image.normal: "00_button_sweep_press.png";
				}
				description { state: "disabled" 0.0;
					inherit:  "default" 0.0;
					image.normal: "00_button_sweep_dim.png";
				}
				description { state: "focused" 0.0;
					inherit: "default" 0.0;
					image.normal: "00_button_sweep_press.png";
				}
			}
			part {
				name: "padding_left";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					align: 0.0 0.0;
					rel1.relative: 0.0 0.0;
					rel2.relative: 0.0 1.0;
					min: 5 5;
					fixed: 1 0;
					color: 0 0 0 0;
				}
			}
			part {
				name: "padding_right";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					align: 1.0 0.0;
					rel1.relative: 1.0 0.0;
					rel2.relative: 1.0 1.0;
					min: 5 5;
					fixed: 1 0;
					color: 0 0 0 0;
				}
			}
			part {
				name: "padding_top";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					align: 0.0 0.0;
					rel1.relative: 0.0 0.0;
					rel2.relative: 1.0 0.0;
					min: 5 5;
					fixed: 0 1;
					color: 0 0 0 0;
				}
			}
			part {
				name: "padding_bottom";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					align: 1.0 1.0;
					rel1.relative: 0.0 1.0;
					rel2.relative: 1.0 1.0;
					min: 5 5;
					fixed: 0 1;
					color: 0 0 0 0;
				}
			}
			part {
				name: "icon_rect";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					visible: 1;
					min: 0 42;
					fixed: 1 0;
					rel1 {relative: 0.0 1.0; to_x: "elm.swallow.content"; to_y: "padding_top"; }
					rel2 {relative: 1.0 0.0; to_x: "elm.swallow.content"; to_y: "padding_bottom"; }
					align: 0.0 0.5;
					color: 0 0 0 0;
				}
			} 
			part {
				name: "padding_icon_text";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0; //when only icon or no icon is there
					align: 0.0 0.0;
					rel1 { relative: 1.0 0.0; to: "icon_rect"; }
					rel2 { relative: 1.0 1.0; to: "icon_rect"; } 			
					fixed: 1 0;
					min: 0 0;
					color: 0 0 0 0;
				}
				description { state: "icononly" 0.0;
					inherit: "default" 0.0;
				}
				description { state: "visible" 0.0; //when icon is visible
					align: 0.0 0.0;
					rel1 { relative: 1.0 0.0; to: "icon_rect"; }
					rel2 { relative: 1.0 1.0; to: "icon_rect"; } 			
					fixed: 1 0;
					min: 5 0;
					color: 0 0 0 0;
				}
			}			
			part { name: "elm.swallow.content";
				type: SWALLOW;
				scale: 1;
				description { state: "default" 0.0;
					visible: 0;
					align: 0.0 0.5;
					rel1 {relative: 1.0 1.0; to_x: "padding_left"; to_y: "padding_top"; }
					rel2 {relative: 1.0 0.0; to_x: "padding_left"; to_y: "padding_bottom"; }
					fixed: 1 0;
				}
				description { state: "visible" 0.0;
					fixed: 1 0;
					visible: 1;
					align: 0.0 0.5;
					rel1 {relative: 1.0 1.0; to_x: "padding_left"; to_y: "padding_top"; }
					rel2 {relative: 1.0 0.0; to_x: "padding_left"; to_y: "padding_bottom"; }
					aspect: 1.0 1.0;
					aspect_preference: VERTICAL;
				}
				description { state: "icononly" 0.0;;
					visible: 1;
					min: 42 42;
					rel1 {relative: 1.0 1.0; to_x: "padding_left"; to_y: "padding_top"; }
					rel2 {relative: 0.0 0.0; to_x: "padding_right"; to_y: "padding_bottom"; }
					align: 0.5 0.5;
					aspect: 1.0 1.0;
					aspect_preference: VERTICAL;
				}
			}
			part { name: "elm.text";
				type:          TEXT;
				effect:        SHADOW;
				mouse_events:  0;
				scale: 1;
				description { state: "default" 0.0;
					visible: 0;
					rel1 { relative: 1.0 1.0; to_x: "padding_icon_text"; to_y: "padding_top"; }
					rel2 { relative: 0.0 0.0; to_x: "padding_right"; to_y:"padding_bottom"; }
					align: 0.5 0.5;
					color: BUTTON_SWEEP_BUTTON_TEXT_NORMAL_COLOR_INC;
					color2: BUTTON_SWEEP_BUTTON_TEXT_NORMAL_SHAWDOW_COLOR_INC;
					text {
						font: "SLP:style=Medium";
						size: 24;
						min:  0 0;
						align: 0.5 0.5;
						max: 1 0;
					}
				}
				description { state: "visible" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					min: 90 42;
				}
				description { state: "clicked" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					min: 0 0;
					color: BUTTON_SWEEP_BUTTON_TEXT_PRESSED_COLOR_INC;
					color2: BUTTON_SWEEP_BUTTON_TEXT_PRESSED_SHAWDOW_COLOR_INC;
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					color: 0 0 0 128;
					color3: 0 0 0 0;
				}
				description { state: "disabled_visible" 0.0;
					inherit: "default" 0.0;
					color: BUTTON_SWEEP_BUTTON_TEXT_DISABLED_COLOR_INC;
					color2: BUTTON_SWEEP_BUTTON_TEXT_DISABLED_SHAWDOW_COLOR_INC;
					color3: 0 0 0 0;
					visible: 1;
				}
				description { state: "focused" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					min: 0 0;
					color: BUTTON_SWEEP_BUTTON_TEXT_FOCUSED_COLOR_INC;
					color2: BUTTON_SWEEP_BUTTON_TEXT_FOCUSED_SHAWDOW_COLOR_INC;
				}
			}
			part { name: "over2";
				type: RECT;
				mouse_events: 1;
				repeat_events: 1;
				ignore_flags: ON_HOLD;
				description { state: "default" 0.0;
					color: 0 0 0 0;
				}
				description { state: "disabled" 0.0;
					inherit:  "default" 0.0;
					visible: 0;
				}
			}
			part { name: "over3";
				type: RECT;
				mouse_events: 1;
				repeat_events: 1;
				description { state: "default" 0.0;
					color: 0 0 0 0;
				}
				description { state: "clicked" 0.0;
					inherit:  "default" 0.0;
					visible: 1;
				}
			}
			part { name: "disabler";
				type: RECT;
				description { state: "default" 0.0;
					color: 0 0 0 0;
					visible: 0;
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
			}
		}
		programs {
			program { name: "button_click";
				signal: "mouse,down,1";
				source: "over2";
				action: SIGNAL_EMIT "elm,action,press" "";
				after: "button_click_anim";
			}
			program { name: "button_click_anim";
				action: STATE_SET "clicked" 0.0;
				target: "button_image";
				after: "text_clicked";
			}
			program { name: "text_clicked";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "visible"))
						set_state(PART:"elm.text", "clicked", 0.0);
				}
			}
			program { name: "button_unpress";
				action: SIGNAL_EMIT "elm,action,unpress" "";
			}
			program { name: "button_mouseout_clicked";
				signal: "mouse,up,1";
				source: "over3";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.swallow.content", st, 30, vl);
					if (strcmp(st, "icononly"))
					{
						emit("elm,action,default,text,set", "");
						set_state(PART:"elm.text", "visible", 0.0);
					}
					if(get_int(button_state) !=1)
						set_state(PART:"button_image", "default", 0.0);
				}
				after: button_unpress;
			}
			program { name: "button_click2";
				signal: "mouse,down,1";
				source: "over3";
				action: STATE_SET "clicked" 0.0;
				target: "over3";
			}
			program { name: "button_unclick2";
				signal: "mouse,clicked,1";
				source: "over3";
				action: STATE_SET "default" 0.0;
				target: "over3";
			}
			program { name: "button_unclick3";
				signal: "mouse,clicked,1";
				source: "over2";
				action: SIGNAL_EMIT "elm,action,click" "";
			}
			program { name: "text_show";
				signal: "elm,state,text,visible";
				source: "elm";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.swallow.content", st, 30, vl);
					if (!strcmp(st, "icononly"))
					{
						set_state(PART:"elm.swallow.content", "visible", 0.0);
						set_state(PART:"padding_icon_text", "visible", 0.0);
					}
					set_state(PART:"elm.text", "visible", 0.0);
				}
			}
			program { name: "text_hide";
				signal: "elm,state,text,hidden";
				source: "elm";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.swallow.content", st, 30, vl);
					if (!strcmp(st, "visible"))
					{
						set_state(PART:"elm.swallow.content", "icononly", 0.0);
						set_state(PART:"padding_icon_text", "icononly", 0.0);
					}
					set_state(PART:"elm.text", "default", 0.0);
				}
			}
			program { name: "icon_show";
				signal: "elm,state,icon,visible";
				source: "elm";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "visible"))
					{
						set_state(PART:"elm.swallow.content", "visible", 0.0);
						set_state(PART:"padding_icon_text", "visible", 0.0);
					}
					else
					{
						set_state(PART:"elm.swallow.content", "icononly", 0.0);
						set_state(PART:"padding_icon_text", "icononly", 0.0);
					}
				}
			}
			program { name: "icon_hide";
				signal: "elm,state,icon,hidden";
				source: "elm";
				action:  STATE_SET "default" 0.0;
				target: "elm.swallow.content";
			}
			program { name: "disable";
				signal: "elm,state,disabled";
				source: "elm";
				action: STATE_SET "disabled" 0.0;
				target: "button_image";
				target: "over2";
				target: "disabler";
				after: "disable_text";
			}
			program { name: "disable_text";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "visible"))
						set_state(PART:"elm.text", "disabled_visible", 0.0);
					else
						set_state(PART:"elm.text", "disabled", 0.0);
					set_int(button_state, 1);
				}
			}
			program { name: "enable";
				signal: "elm,state,enabled";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "button_image";
				target: "over2";
				target: "disabler";
				after: "enable_text";
			}
			program { name: "enable_text";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "disabled_visible"))
						set_state(PART:"elm.text", "visible", 0.0);
					else
						set_state(PART:"elm.text", "default", 0.0);
					set_int(button_state, 0);
				}
			}
			program { name: "focused";
				//signal: "elm,action,focus";
				//source: "elm";
				action: STATE_SET "focused" 0.0;
				target: "button_image";
				target: "elm.text";
			}
			program { name: "unfocused";
				//signal: "elm,action,unfocus";
				//source: "elm";
				action: STATE_SET "default" 0.0;
				target: "button_image";
				after: "unfocus_text";
			}
			program { name: "unfocus_text";
				action: STATE_SET "visible" 0.0;
				target: "elm.text";
			}
		}
	}
	
///////////////////////////////////////////////////////////////////////////////////////
//Button style added for 2 line sweep in the list
   group { name: "elm/button/base/text_only/sweep_46";
      images {
         image: "00_button_sweep_46.png" COMP;
         image: "00_button_sweep_46_press.png" COMP;
         image: "00_button_sweep_46_focus.png" COMP;
         image: "00_button_sweep_46_dim.png" COMP;
      }
      script {
         public button_state = 0; //0:enabled, 1: disabled
      }
      parts {
         part { name: "button_image";
            mouse_events: 1;
            scale: 1;
            description { state: "default" 0.0;
               min: 16 46;
               image {
                  normal: "00_button_sweep_46.png";
                  border: 7 7 7 7;
                  border_scale: 1;
               }
            }
            description { state: "clicked" 0.0;
               inherit: "default" 0.0;
               image.normal: "00_button_sweep_46_press.png";
            }
            description { state: "disabled" 0.0;
               inherit:  "default" 0.0;
               image.normal: "00_button_sweep_46_dim.png";
            }
            description { state: "focused" 0.0;
               inherit: "default" 0.0;
               image.normal: "00_button_sweep_46_focus.png";
            }
         }
         part {
            name: "padding_left";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               align: 0.0 0.0;
               rel1.relative: 0.0 0.0;
               rel2.relative: 0.0 1.0;
               min: 5 5;
               fixed: 1 0;
               color: 0 0 0 0;
            }
         }
         part {
            name: "padding_right";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               align: 1.0 0.0;
               rel1.relative: 1.0 0.0;
               rel2.relative: 1.0 1.0;
               min: 5 5;
               fixed: 1 0;
               color: 0 0 0 0;
            }
         }
         part {
            name: "padding_top";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               align: 0.0 0.0;
               rel1.relative: 0.0 0.0;
               rel2.relative: 1.0 0.0;
               min: 5 5;
               fixed: 0 1;
               color: 0 0 0 0;
            }
         }
         part {
            name: "padding_bottom";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               align: 1.0 1.0;
               rel1.relative: 0.0 1.0;
               rel2.relative: 1.0 1.0;
               min: 5 5;
               fixed: 0 1;
               color: 0 0 0 0;
            }
         }
         part {
            name: "icon_rect";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               visible: 1;
               min: 0 36;
               fixed: 1 0;
               rel1 {relative: 0.0 1.0; to_x: "elm.swallow.content"; to_y: "padding_top"; }
               rel2 {relative: 1.0 0.0; to_x: "elm.swallow.content"; to_y: "padding_bottom"; }
               align: 0.0 0.5;
               color: 0 0 0 0;
            }
         } 
         part {
            name: "padding_icon_text";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0; //when only icon or no icon is there
               align: 0.0 0.0;
               rel1 { relative: 1.0 0.0; to: "icon_rect"; }
               rel2 { relative: 1.0 1.0; to: "icon_rect"; }          
               fixed: 1 0;
               min: 0 0;
               color: 0 0 0 0;
            }
            description { state: "icononly" 0.0;
               inherit: "default" 0.0;
            }
            description { state: "visible" 0.0; //when icon is visible
               align: 0.0 0.0;
               rel1 { relative: 1.0 0.0; to: "icon_rect"; }
               rel2 { relative: 1.0 1.0; to: "icon_rect"; }          
               fixed: 1 0;
               min: 5 0;
               color: 0 0 0 0;
            }
         }        
         part { name: "elm.swallow.content";
            type: SWALLOW;
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               align: 0.0 0.5;
               rel1 {relative: 1.0 1.0; to_x: "padding_left"; to_y: "padding_top"; }
               rel2 {relative: 1.0 0.0; to_x: "padding_left"; to_y: "padding_bottom"; }
               fixed: 1 0;
            }
            description { state: "visible" 0.0;
               fixed: 1 0;
               visible: 1;
               align: 0.0 0.5;
               rel1 {relative: 1.0 1.0; to_x: "padding_left"; to_y: "padding_top"; }
               rel2 {relative: 1.0 0.0; to_x: "padding_left"; to_y: "padding_bottom"; }
               aspect: 1.0 1.0;
               aspect_preference: VERTICAL;
            }
            description { state: "icononly" 0.0;;
               visible: 1;
               min: 36 36;
               rel1 {relative: 1.0 1.0; to_x: "padding_left"; to_y: "padding_top"; }
               rel2 {relative: 0.0 0.0; to_x: "padding_right"; to_y: "padding_bottom"; }
               align: 0.5 0.5;
               aspect: 1.0 1.0;
               aspect_preference: VERTICAL;
            }
         }
         part { name: "elm.text";
            type:          TEXT;
            effect:        SHADOW;
            mouse_events:  0;
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               rel1 { relative: 1.0 1.0; to_x: "padding_icon_text"; to_y: "padding_top"; }
               rel2 { relative: 0.0 0.0; to_x: "padding_right"; to_y:"padding_bottom"; }
               align: 0.5 0.5;
               color: BUTTON_SWEEP_BUTTON_TEXT_NORMAL_COLOR_INC;
               color2: BUTTON_SWEEP_BUTTON_TEXT_NORMAL_SHAWDOW_COLOR_INC;
               text {
                  font: "SLP:style=Medium";
                  size: 24;
                  min:  0 0;
                  align: 0.5 0.5;
                  max: 1 0;
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               min: 90 36;
            }
            description { state: "clicked" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               min: 0 0;
               color: BUTTON_SWEEP_BUTTON_TEXT_PRESSED_COLOR_INC;
               color2: BUTTON_SWEEP_BUTTON_TEXT_PRESSED_SHAWDOW_COLOR_INC;
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               color: 0 0 0 128;
               color3: 0 0 0 0;
            }
            description { state: "disabled_visible" 0.0;
               inherit: "default" 0.0;
               color: BUTTON_SWEEP_BUTTON_TEXT_DISABLED_COLOR_INC;
               color2: BUTTON_SWEEP_BUTTON_TEXT_DISABLED_SHAWDOW_COLOR_INC;
               color3: 0 0 0 0;
               visible: 1;
            }
            description { state: "focused" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               min: 0 0;
               color: BUTTON_SWEEP_BUTTON_TEXT_FOCUSED_COLOR_INC;
               color2: BUTTON_SWEEP_BUTTON_TEXT_FOCUSED_SHAWDOW_COLOR_INC;
            }
         }
         part { name: "over2";
            type: RECT;
            mouse_events: 1;
            repeat_events: 1;
            ignore_flags: ON_HOLD;
            description { state: "default" 0.0;
               color: 0 0 0 0;
            }
            description { state: "disabled" 0.0;
               inherit:  "default" 0.0;
               visible: 0;
            }
         }
         part { name: "over3";
            type: RECT;
            mouse_events: 1;
            repeat_events: 1;
            description { state: "default" 0.0;
               color: 0 0 0 0;
            }
            description { state: "clicked" 0.0;
               inherit:  "default" 0.0;
               visible: 1;
            }
         }
         part { name: "disabler";
            type: RECT;
            description { state: "default" 0.0;
               color: 0 0 0 0;
               visible: 0;
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
      }
      programs {
         program { name: "button_click";
            signal: "mouse,down,1";
            source: "over2";
            action: SIGNAL_EMIT "elm,action,press" "";
            after: "button_click_anim";
         }
         program { name: "button_click_anim";
            action: STATE_SET "clicked" 0.0;
            target: "button_image";
            after: "text_clicked";
         }
         program { name: "text_clicked";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"elm.text", st, 30, vl);
               if (!strcmp(st, "visible"))
                  set_state(PART:"elm.text", "clicked", 0.0);
            }
         }
         program { name: "button_unpress";
            action: SIGNAL_EMIT "elm,action,unpress" "";
         }
         program { name: "button_mouseout_clicked";
            signal: "mouse,up,1";
            source: "over3";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"elm.swallow.content", st, 30, vl);
               if (strcmp(st, "icononly"))
               {
                  emit("elm,action,default,text,set", "");
                  set_state(PART:"elm.text", "visible", 0.0);
               }
               if(get_int(button_state) !=1)
                  set_state(PART:"button_image", "default", 0.0);
            }
            after: button_unpress;
         }
         program { name: "button_click2";
            signal: "mouse,down,1";
            source: "over3";
            action: STATE_SET "clicked" 0.0;
            target: "over3";
         }
         program { name: "button_unclick2";
            signal: "mouse,clicked,1";
            source: "over3";
            action: STATE_SET "default" 0.0;
            target: "over3";
         }
         program { name: "button_unclick3";
            signal: "mouse,clicked,1";
            source: "over2";
            action: SIGNAL_EMIT "elm,action,click" "";
         }
         program { name: "text_show";
            signal: "elm,state,text,visible";
            source: "elm";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"elm.swallow.content", st, 30, vl);
               if (!strcmp(st, "icononly"))
               {
                  set_state(PART:"elm.swallow.content", "visible", 0.0);
                  set_state(PART:"padding_icon_text", "visible", 0.0);
               }
               set_state(PART:"elm.text", "visible", 0.0);
            }
         }
         program { name: "text_hide";
            signal: "elm,state,text,hidden";
            source: "elm";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"elm.swallow.content", st, 30, vl);
               if (!strcmp(st, "visible"))
               {
                  set_state(PART:"elm.swallow.content", "icononly", 0.0);
                  set_state(PART:"padding_icon_text", "icononly", 0.0);
               }
               set_state(PART:"elm.text", "default", 0.0);
            }
         }
         program { name: "icon_show";
            signal: "elm,state,icon,visible";
            source: "elm";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"elm.text", st, 30, vl);
               if (!strcmp(st, "visible"))
               {
                  set_state(PART:"elm.swallow.content", "visible", 0.0);
                  set_state(PART:"padding_icon_text", "visible", 0.0);
               }
               else
               {
                  set_state(PART:"elm.swallow.content", "icononly", 0.0);
                  set_state(PART:"padding_icon_text", "icononly", 0.0);
               }
            }
         }
         program { name: "icon_hide";
            signal: "elm,state,icon,hidden";
            source: "elm";
            action:  STATE_SET "default" 0.0;
            target: "elm.swallow.content";
         }
         program { name: "disable";
            signal: "elm,state,disabled";
            source: "elm";
            action: STATE_SET "disabled" 0.0;
            target: "button_image";
            target: "over2";
            target: "disabler";
            after: "disable_text";
         }
         program { name: "disable_text";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"elm.text", st, 30, vl);
               if (!strcmp(st, "visible"))
                  set_state(PART:"elm.text", "disabled_visible", 0.0);
               else
                  set_state(PART:"elm.text", "disabled", 0.0);
               set_int(button_state, 1);
            }
         }
         program { name: "enable";
            signal: "elm,state,enabled";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "button_image";
            target: "over2";
            target: "disabler";
            after: "enable_text";
         }
         program { name: "enable_text";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"elm.text", st, 30, vl);
               if (!strcmp(st, "disabled_visible"))
                  set_state(PART:"elm.text", "visible", 0.0);
               else
                  set_state(PART:"elm.text", "default", 0.0);
               set_int(button_state, 0);
            }
         }
         program { name: "focused";
            //signal: "elm,action,focus";
            //source: "elm";
            action: STATE_SET "focused" 0.0;
            target: "button_image";
            target: "elm.text";
         }
         program { name: "unfocused";
            //signal: "elm,action,unfocus";
            //source: "elm";
            action: STATE_SET "default" 0.0;
            target: "button_image";
            after: "unfocus_text";
         }
         program { name: "unfocus_text";
            action: STATE_SET "visible" 0.0;
            target: "elm.text";
         }
      }
   }

///////////////////////////////////////////////////////////////////////////////////////
	group { name: "elm/button/base/text_only/title";
		images {
			image: "00_button_02_normal.png" COMP;
			image: "00_button_02_press.png" COMP;
			image: "00_button_02_focus.png" COMP;
		}
		script {
			public button_state = 0; //0:enabled, 1: disabled
		}
		parts {
			part { name: "button_image";
				mouse_events: 1;
				scale: 1;
				description { state: "default" 0.0;
					min: 16 50;
					image {
						normal: "00_button_02_normal.png";
						border: 7 7 7 7;
						border_scale: 1;
					}
				}
				description { state: "clicked" 0.0;
					inherit: "default" 0.0;
					image.normal: "00_button_02_press.png";
				}
				description { state: "disabled" 0.0;
					inherit:  "default" 0.0;
				}
				description { state: "focused" 0.0;
					inherit: "default" 0.0;
					image.normal: "00_button_02_focus.png";
				}
			}
			part {
				name: "padding_left";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					align: 0.0 0.0;
					rel1.relative: 0.0 0.0;
					rel2.relative: 0.0 1.0;
					min: 5 5;
					fixed: 1 0;
					color: 0 0 0 0;
				}
			}
			part {
				name: "padding_right";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					align: 1.0 0.0;
					rel1.relative: 1.0 0.0;
					rel2.relative: 1.0 1.0;
					min: 5 5;
					fixed: 1 0;
					color: 0 0 0 0;
				}
			}
			part {
				name: "padding_top";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					align: 0.0 0.0;
					rel1.relative: 0.0 0.0;
					rel2.relative: 1.0 0.0;
					min: 5 5;
					fixed: 0 1;
					color: 0 0 0 0;
				}
			}
			part {
				name: "padding_bottom";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					align: 1.0 1.0;
					rel1.relative: 0.0 1.0;
					rel2.relative: 1.0 1.0;
					min: 5 5;
					fixed: 0 1;
					color: 0 0 0 0;
				}
			}
			part {
				name: "icon_rect";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					visible: 1;
					min: 0 40;
					fixed: 1 0;
					rel1 {relative: 0.0 1.0; to_x: "elm.swallow.content"; to_y: "padding_top"; }
					rel2 {relative: 1.0 0.0; to_x: "elm.swallow.content"; to_y: "padding_bottom"; }
					align: 0.0 0.5;
					color: 0 0 0 0;
				}
			} 
			part {
				name: "padding_icon_text";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0; //when only icon or no icon is there
					align: 0.0 0.0;
					rel1 { relative: 1.0 0.0; to: "icon_rect"; }
					rel2 { relative: 1.0 1.0; to: "icon_rect"; } 			
					fixed: 1 0;
					min: 0 0;
					color: 0 0 0 0;
				}
				description { state: "icononly" 0.0;
					inherit: "default" 0.0;
				}
				description { state: "visible" 0.0; //when icon is visible
					align: 0.0 0.0;
					rel1 { relative: 1.0 0.0; to: "icon_rect"; }
					rel2 { relative: 1.0 1.0; to: "icon_rect"; } 			
					fixed: 1 0;
					min: 5 0;
					color: 0 0 0 0;
				}
			}					
			part { name: "elm.swallow.content";
				type: SWALLOW;
				scale: 1;
				description { state: "default" 0.0;
					visible: 0;
					align: 0.0 0.5;
					rel1 {relative: 1.0 1.0; to_x: "padding_left"; to_y: "padding_top"; }
					rel2 {relative: 1.0 0.0; to_x: "padding_left"; to_y: "padding_bottom"; }
					fixed: 1 0;
				}
				description { state: "visible" 0.0;
					fixed: 1 0;
					visible: 1;
					align: 0.0 0.5;
					rel1 {relative: 1.0 1.0; to_x: "padding_left"; to_y: "padding_top"; }
					rel2 {relative: 1.0 0.0; to_x: "padding_left"; to_y: "padding_bottom"; }
					aspect: 1.0 1.0;
					aspect_preference: VERTICAL;
				}
				description { state: "icononly" 0.0;;
					visible: 1;
					min: 40 40;
					rel1 {relative: 1.0 1.0; to_x: "padding_left"; to_y: "padding_top"; }
					rel2 {relative: 0.0 0.0; to_x: "padding_right"; to_y: "padding_bottom"; }
					align: 0.5 0.5;
					aspect: 1.0 1.0;
					aspect_preference: VERTICAL;
				}
			}
			part { name: "elm.text";
				type:          TEXT;
				effect:        SHADOW;
				mouse_events:  0;
				scale: 1;
				description { state: "default" 0.0;
					visible: 0;
					rel1 { relative: 1.0 1.0; to_x: "padding_icon_text"; to_y: "padding_top"; }
					rel2 { relative: 0.0 0.0; to_x: "padding_right"; to_y:"padding_bottom"; }
					align: 0.5 0.5;
					color: 255 255 255 255;
					color2: 0 0 0 0;
					text {
						font: "SLP:style=Medium";
						size: 24;
						min:  0 0;
						max: 1 0;
						align: 0.5 0.5;
					}
				}
				description { state: "visible" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					min: 90 40;
				}
				description { state: "clicked" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					min: 0 0;
					color: 255 255 255 255;
					color2: 0 0 0 102;
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					color: 0 0 0 128;
					color3: 0 0 0 0;
				}
				description { state: "disabled_visible" 0.0;
					inherit: "default" 0.0;
					color: 0 0 0 128;
					color3: 0 0 0 0;
					visible: 1;
				}
				description { state: "focused" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					min: 0 0;
					color: 255 255 255 255;
					color2: 0 0 0 102;
				}
			}
			part { name: "over2";
				type: RECT;
				mouse_events: 1;
				repeat_events: 1;
				ignore_flags: ON_HOLD;
				description { state: "default" 0.0;
					color: 0 0 0 0;
				}
				description { state: "disabled" 0.0;
					inherit:  "default" 0.0;
					visible: 0;
				}
			}
			part { name: "over3";
				type: RECT;
				mouse_events: 1;
				repeat_events: 1;
				description { state: "default" 0.0;
					color: 0 0 0 0;
				}
				description { state: "clicked" 0.0;
					inherit:  "default" 0.0;
					visible: 1;
				}
			}
			part { name: "disabler";
				type: RECT;
				description { state: "default" 0.0;
					color: 0 0 0 0;
					visible: 0;
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
			}
		}
		programs {
			program { name: "button_click";
				signal: "mouse,down,1";
				source: "over2";
				action: SIGNAL_EMIT "elm,action,press" "";
				after: "button_click_anim";
			}
			program { name: "button_click_anim";
				action: STATE_SET "clicked" 0.0;
				target: "button_image";
				after: "text_clicked";
			}
			program { name: "text_clicked";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "visible"))
						set_state(PART:"elm.text", "clicked", 0.0);
				}
			}
			program { name: "button_unpress";
				action: SIGNAL_EMIT "elm,action,unpress" "";
			}
			program { name: "button_mouseout_clicked";
				signal: "mouse,up,1";
				source: "over3";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.swallow.content", st, 30, vl);
					if (strcmp(st, "icononly"))
					{
						emit("elm,action,default,text,set", "");
						set_state(PART:"elm.text", "visible", 0.0);
					}
					if(get_int(button_state) !=1)
						set_state(PART:"button_image", "default", 0.0);
				}
				after: button_unpress;
			}
			program { name: "button_click2";
				signal: "mouse,down,1";
				source: "over3";
				action: STATE_SET "clicked" 0.0;
				target: "over3";
			}
			program { name: "button_unclick2";
				signal: "mouse,clicked,1";
				source: "over3";
				action: STATE_SET "default" 0.0;
				target: "over3";
			}
			program { name: "button_unclick3";
				signal: "mouse,clicked,1";
				source: "over2";
				action: SIGNAL_EMIT "elm,action,click" "";
			}
			program { name: "text_show";
				signal: "elm,state,text,visible";
				source: "elm";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.swallow.content", st, 30, vl);
					if (!strcmp(st, "icononly"))
					{
						set_state(PART:"elm.swallow.content", "visible", 0.0);
						set_state(PART:"padding_icon_text", "visible", 0.0);
					}
					set_state(PART:"elm.text", "visible", 0.0);
				}
			}
			program { name: "text_hide";
				signal: "elm,state,text,hidden";
				source: "elm";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.swallow.content", st, 30, vl);
					if (!strcmp(st, "visible"))
					{
						set_state(PART:"elm.swallow.content", "icononly", 0.0);
						set_state(PART:"padding_icon_text", "icononly", 0.0);
					}
					set_state(PART:"elm.text", "default", 0.0);
				}
			}
			program { name: "icon_show";
				signal: "elm,state,icon,visible";
				source: "elm";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "visible"))
					{
						set_state(PART:"elm.swallow.content", "visible", 0.0);
						set_state(PART:"padding_icon_text", "visible", 0.0);
					}
					else
					{
						set_state(PART:"elm.swallow.content", "icononly", 0.0);
						set_state(PART:"padding_icon_text", "icononly", 0.0);
					}
				}
			}
			program { name: "icon_hide";
				signal: "elm,state,icon,hidden";
				source: "elm";
				action:  STATE_SET "default" 0.0;
				target: "elm.swallow.content";
			}
			program { name: "disable";
				signal: "elm,state,disabled";
				source: "elm";
				action: STATE_SET "disabled" 0.0;
				target: "button_image";
				target: "over2";
				target: "disabler";
				after: "disable_text";
			}
			program { name: "disable_text";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "visible"))
						set_state(PART:"elm.text", "disabled_visible", 0.0);
					else
						set_state(PART:"elm.text", "disabled", 0.0);
					set_int(button_state, 1);
				}
			}
			program { name: "enable";
				signal: "elm,state,enabled";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "button_image";
				target: "over2";
				target: "disabler";
				after: "enable_text";
			}
			program { name: "enable_text";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "disabled_visible"))
						set_state(PART:"elm.text", "visible", 0.0);
					else
						set_state(PART:"elm.text", "default", 0.0);
					set_int(button_state, 0);
				}
			}
			program { name: "focused";
				//signal: "elm,action,focus";
				//source: "elm";
				action: STATE_SET "focused" 0.0;
				target: "button_image";
				target: "elm.text";
			}
			program { name: "unfocused";
				//signal: "elm,action,unfocus";
				//source: "elm";
				action: STATE_SET "default" 0.0;
				target: "button_image";
				after: "unfocus_text";
			}
			program { name: "unfocus_text";
				action: STATE_SET "visible" 0.0;
				target: "elm.text";
			}
		}
	}


///////////////////////////////////////////////////////////////////////////////////////
	group { name: "elm/button/base/navigationbar_functionbutton/default";
		images {
			image: "00_button_02_normal.png" COMP;
			image: "00_button_02_press.png" COMP;
			image: "00_button_02_focus.png" COMP;
			image: "00_button_02_dim.png" COMP;
		}
		script {
			public button_state = 0; //0:enabled, 1: disabled
		}
		parts {
			part { name: "button_image";
				mouse_events: 1;
				scale: 1;
				description { state: "default" 0.0;
					min: 16 50;
					image {
						normal: "00_button_02_normal.png";
						border: 7 7 7 7;
						border_scale: 1;
					}
				}
				description { state: "clicked" 0.0;
					inherit: "default" 0.0;
					image.normal: "00_button_02_press.png";
				}
				description { state: "disabled" 0.0;
					inherit:  "default" 0.0;
					image.normal: "00_button_02_dim.png";
				}
				description { state: "focused" 0.0;
					inherit: "default" 0.0;
					image.normal: "00_button_02_focus.png";
				}
			}
			part {
				name: "padding_left";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					align: 0.0 0.0;
					rel1.relative: 0.0 0.0;
					rel2.relative: 0.0 1.0;
					min: 5 5;
					fixed: 1 0;
					color: 0 0 0 0;
				}
			}
			part {
				name: "padding_right";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					align: 1.0 0.0;
					rel1.relative: 1.0 0.0;
					rel2.relative: 1.0 1.0;
					min: 5 5;
					fixed: 1 0;
					color: 0 0 0 0;
				}
			}
			part {
				name: "padding_top";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					align: 0.0 0.0;
					rel1.relative: 0.0 0.0;
					rel2.relative: 1.0 0.0;
					min: 5 5;
					fixed: 0 1;
					color: 0 0 0 0;
				}
			}
			part {
				name: "padding_bottom";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					align: 1.0 1.0;
					rel1.relative: 0.0 1.0;
					rel2.relative: 1.0 1.0;
					min: 5 5;
					fixed: 0 1;
					color: 0 0 0 0;
				}
			}
			part {
				name: "icon_rect";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					visible: 1;
					min: 0 40;
					fixed: 1 0;
					rel1 {relative: 0.0 1.0; to_x: "elm.swallow.content"; to_y: "padding_top"; }
					rel2 {relative: 1.0 0.0; to_x: "elm.swallow.content"; to_y: "padding_bottom"; }
					align: 0.0 0.5;
					color: 0 0 0 0;
				}
			} 
			part {
				name: "padding_icon_text";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0; //when only icon or no icon is there
					align: 0.0 0.0;
					rel1 { relative: 1.0 0.0; to: "icon_rect"; }
					rel2 { relative: 1.0 1.0; to: "icon_rect"; } 			
					fixed: 1 0;
					min: 0 0;
					color: 0 0 0 0;
				}
				description { state: "icononly" 0.0;
					inherit: "default" 0.0;
				}
				description { state: "visible" 0.0; //when icon is visible
					align: 0.0 0.0;
					rel1 { relative: 1.0 0.0; to: "icon_rect"; }
					rel2 { relative: 1.0 1.0; to: "icon_rect"; } 			
					fixed: 1 0;
					min: 5 0;
					color: 0 0 0 0;
				}
			}					
			part { name: "elm.swallow.content";
				type: SWALLOW;
				scale: 1;
				description { state: "default" 0.0;
					visible: 0;
					align: 0.0 0.5;
					rel1 {relative: 1.0 1.0; to_x: "padding_left"; to_y: "padding_top"; }
					rel2 {relative: 1.0 0.0; to_x: "padding_left"; to_y: "padding_bottom"; }
					fixed: 1 0;
				}
				description { state: "visible" 0.0;
					fixed: 1 0;
					visible: 1;
					align: 0.0 0.5;
					rel1 {relative: 1.0 1.0; to_x: "padding_left"; to_y: "padding_top"; }
					rel2 {relative: 1.0 0.0; to_x: "padding_left"; to_y: "padding_bottom"; }
					aspect: 1.0 1.0;
					aspect_preference: VERTICAL;
				}
				description { state: "icononly" 0.0;;
					visible: 1;
					min: 40 40;
					rel1 {relative: 1.0 1.0; to_x: "padding_left"; to_y: "padding_top"; }
					rel2 {relative: 0.0 0.0; to_x: "padding_right"; to_y: "padding_bottom"; }
					align: 0.5 0.5;
					aspect: 1.0 1.0;
					aspect_preference: VERTICAL;
				}
			}
			part { name: "elm.text";
				type: TEXT;
				effect: SHADOW;
				mouse_events:  0;
				scale: 1;
				description { state: "default" 0.0;
					visible: 0;
					rel1 { relative: 1.0 1.0; to_x: "padding_icon_text"; to_y: "padding_top"; }
					rel2 { relative: 0.0 0.0; to_x: "padding_right"; to_y:"padding_bottom"; }
					align: 0.5 0.5;
					color: BUTTON_NAVIBAR_FUNCTION_BUTTON_TEXT_NORMAL_COLOR_INC;
					color2: BUTTON_NAVIBAR_FUNCTION_BUTTON_TEXT_NORMAL_SHADOW_COLOR_INC;
					text {
						font: "SLP:style=Medium";
						size: 24;
						min:  1 0;
						align: 0.5 0.5;
					}
				}
				description { state: "visible" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					min: 90 40;
				}
				description { state: "clicked" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					min: 0 0;
					color: BUTTON_NAVIBAR_FUNCTION_BUTTON_TEXT_PRESSED_COLOR_INC;
					color2: BUTTON_NAVIBAR_FUNCTION_BUTTON_TEXT_PRESSED_SHADOW_COLOR_INC;
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					color: 0 0 0 128;
					color3: 0 0 0 0;
				}
				description { state: "disabled_visible" 0.0;
					inherit: "default" 0.0;
					color: BUTTON_NAVIBAR_FUNCTION_BUTTON_TEXT_DISABLED_COLOR_INC;
					color2: BUTTON_NAVIBAR_FUNCTION_BUTTON_TEXT_DISABLED_SHADOW_COLOR_INC; 
					color3: 0 0 0 0;
					visible: 1;
				}
				description { state: "focused" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					min: 0 0;
					color: BUTTON_NAVIBAR_FUNCTION_BUTTON_TEXT_FOCUSED_COLOR_INC;
					color2: BUTTON_NAVIBAR_FUNCTION_BUTTON_TEXT_FOCUSED_SHADOW_COLOR_INC;
				}
			}
			part { name: "over2";
				type: RECT;
				mouse_events: 1;
				repeat_events: 1;
				ignore_flags: ON_HOLD;
				description { state: "default" 0.0;
					color: 0 0 0 0;
				}
				description { state: "disabled" 0.0;
					inherit:  "default" 0.0;
					visible: 0;
				}
			}
			part { name: "over3";
				type: RECT;
				mouse_events: 1;
				repeat_events: 1;
				description { state: "default" 0.0;
					color: 0 0 0 0;
				}
				description { state: "clicked" 0.0;
					inherit:  "default" 0.0;
					visible: 1;
				}
			}
			part { name: "disabler";
				type: RECT;
				description { state: "default" 0.0;
					color: 0 0 0 0;
					visible: 0;
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
			}
		}
		programs {
			program { name: "button_click";
				signal: "mouse,down,1";
				source: "over2";
				action: SIGNAL_EMIT "elm,action,press" "";
				after: "button_click_anim";
			}
			program { name: "button_click_anim";
				action: STATE_SET "clicked" 0.0;
				target: "button_image";
				after: "text_clicked";
			}
			program { name: "text_clicked";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "visible"))
						set_state(PART:"elm.text", "clicked", 0.0);
				}
			}
			program { name: "button_unpress";
				action: SIGNAL_EMIT "elm,action,unpress" "";
			}
			program { name: "button_mouseout_clicked";
				signal: "mouse,up,1";
				source: "over3";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.swallow.content", st, 30, vl);
					if (strcmp(st, "icononly"))
					{
						emit("elm,action,default,text,set", "");
						set_state(PART:"elm.text", "visible", 0.0);
					}
					if(get_int(button_state) !=1)
						set_state(PART:"button_image", "default", 0.0);
				}
				after: button_unpress;
			}
			program { name: "button_click2";
				signal: "mouse,down,1";
				source: "over3";
				action: STATE_SET "clicked" 0.0;
				target: "over3";
			}
			program { name: "button_unclick2";
				signal: "mouse,clicked,1";
				source: "over3";
				action: STATE_SET "default" 0.0;
				target: "over3";
			}
			program { name: "button_unclick3";
				signal: "mouse,clicked,1";
				source: "over2";
				action: SIGNAL_EMIT "elm,action,click" "";
			}
			program { name: "text_show";
				signal: "elm,state,text,visible";
				source: "elm";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.swallow.content", st, 30, vl);
					if (!strcmp(st, "icononly"))
					{
						set_state(PART:"elm.swallow.content", "visible", 0.0);
						set_state(PART:"padding_icon_text", "visible", 0.0);
					}
					set_state(PART:"elm.text", "visible", 0.0);
				}
			}
			program { name: "text_hide";
				signal: "elm,state,text,hidden";
				source: "elm";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.swallow.content", st, 30, vl);
					if (!strcmp(st, "visible"))
					{
						set_state(PART:"elm.swallow.content", "icononly", 0.0);
						set_state(PART:"padding_icon_text", "icononly", 0.0);
					}
					set_state(PART:"elm.text", "default", 0.0);
				}
			}
			program { name: "icon_show";
				signal: "elm,state,icon,visible";
				source: "elm";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "visible"))
					{
						set_state(PART:"elm.swallow.content", "visible", 0.0);
						set_state(PART:"padding_icon_text", "visible", 0.0);
					}
					else
					{
						set_state(PART:"elm.swallow.content", "icononly", 0.0);
						set_state(PART:"padding_icon_text", "icononly", 0.0);
					}
				}
			}
			program { name: "icon_hide";
				signal: "elm,state,icon,hidden";
				source: "elm";
				action:  STATE_SET "default" 0.0;
				target: "elm.swallow.content";
			}
			program { name: "disable";
				signal: "elm,state,disabled";
				source: "elm";
				action: STATE_SET "disabled" 0.0;
				target: "button_image";
				target: "over2";
				target: "disabler";
				after: "disable_text";
			}
			program { name: "disable_text";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "visible"))
						set_state(PART:"elm.text", "disabled_visible", 0.0);
					else
						set_state(PART:"elm.text", "disabled", 0.0);
					set_int(button_state, 1);
				}
			}
			program { name: "enable";
				signal: "elm,state,enabled";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "button_image";
				target: "over2";
				target: "disabler";
				after: "enable_text";
			}
			program { name: "enable_text";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "disabled_visible"))
						set_state(PART:"elm.text", "visible", 0.0);
					else
						set_state(PART:"elm.text", "default", 0.0);
					set_int(button_state, 0);
					}
			}
			program { name: "focused";
				//signal: "elm,action,focus";
				//source: "elm";
				action: STATE_SET "focused" 0.0;
				target: "button_image";
				target: "elm.text";
			}
			program { name: "unfocused";
				//signal: "elm,action,unfocus";
				//source: "elm";
				action: STATE_SET "default" 0.0;
				target: "button_image";
				after: "unfocus_text";
			}
			program { name: "unfocus_text";
				action: STATE_SET "visible" 0.0;
				target: "elm.text";
			}
		}
	}
	///////////////////////////////////////////////////////////////////////////////////////
	group { name: "elm/button/base/navigationbar_functionbutton/title_ellipsize";
		alias: "elm/button/base/navigationbar_functionbutton/extended_fnbtn_top_style";
		alias: "elm/button/base/navigationbar_functionbutton/center_titleobj";
		alias: "elm/button/base/navigationbar_functionbutton/title_transparent_ellipsize";
		images {
			image: "00_button_02_normal.png" COMP;
			image: "00_button_02_press.png" COMP;
			image: "00_button_02_focus.png" COMP;
			image: "00_button_02_dim.png" COMP;
		}
		script {
			public button_state = 0; //0:enabled, 1: disabled
		}
		parts {
			part { name: "button_image";
				mouse_events: 1;
				scale: 1;
				description { state: "default" 0.0;
					min: 16 50;
					image {
						normal: "00_button_02_normal.png";
						border: 7 7 7 7;
						border_scale: 1;
					}
				}
				description { state: "clicked" 0.0;
					inherit: "default" 0.0;
					image.normal: "00_button_02_press.png";
				}
				description { state: "disabled" 0.0;
					inherit:  "default" 0.0;
					image.normal: "00_button_02_dim.png";
				}
				description { state: "focused" 0.0;
					inherit: "default" 0.0;
					image.normal: "00_button_02_focus.png";
				}
			}
			part {
				name: "padding_left";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					align: 0.0 0.0;
					rel1.relative: 0.0 0.0;
					rel2.relative: 0.0 1.0;
					min: 5 5;
					fixed: 1 0;
					color: 0 0 0 0;
				}
			}
			part {
				name: "padding_right";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					align: 1.0 0.0;
					rel1.relative: 1.0 0.0;
					rel2.relative: 1.0 1.0;
					min: 5 5;
					fixed: 1 0;
					color: 0 0 0 0;
				}
			}
			part {
				name: "padding_top";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					align: 0.0 0.0;
					rel1.relative: 0.0 0.0;
					rel2.relative: 1.0 0.0;
					min: 5 5;
					fixed: 0 1;
					color: 0 0 0 0;
				}
			}
			part {
				name: "padding_bottom";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					align: 1.0 1.0;
					rel1.relative: 0.0 1.0;
					rel2.relative: 1.0 1.0;
					min: 5 5;
					fixed: 0 1;
					color: 0 0 0 0;
				}
			}
			part {
				name: "icon_rect";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					visible: 1;
					min: 0 40;
					fixed: 1 0;
					rel1 {relative: 0.0 1.0; to_x: "elm.swallow.content"; to_y: "padding_top"; }
					rel2 {relative: 1.0 0.0; to_x: "elm.swallow.content"; to_y: "padding_bottom"; }
					align: 0.0 0.5;
					color: 0 0 0 0;
				}
			} 
			part {
				name: "padding_icon_text";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0; //when only icon or no icon is there
					align: 0.0 0.0;
					rel1 { relative: 1.0 0.0; to: "icon_rect"; }
					rel2 { relative: 1.0 1.0; to: "icon_rect"; } 			
					fixed: 1 0;
					min: 0 0;
					color: 0 0 0 0;
				}
				description { state: "icononly" 0.0;
					inherit: "default" 0.0;
				}
				description { state: "visible" 0.0; //when icon is visible
					align: 0.0 0.0;
					rel1 { relative: 1.0 0.0; to: "icon_rect"; }
					rel2 { relative: 1.0 1.0; to: "icon_rect"; } 			
					fixed: 1 0;
					min: 5 0;
					color: 0 0 0 0;
				}
			}					
			part { name: "elm.swallow.content";
				type: SWALLOW;
				scale: 1;
				description { state: "default" 0.0;
					visible: 0;
					align: 0.0 0.5;
					rel1 {relative: 1.0 1.0; to_x: "padding_left"; to_y: "padding_top"; }
					rel2 {relative: 1.0 0.0; to_x: "padding_left"; to_y: "padding_bottom"; }
					fixed: 1 0;
				}
				description { state: "visible" 0.0;
					fixed: 1 0;
					visible: 1;
					align: 0.0 0.5;
					rel1 {relative: 1.0 1.0; to_x: "padding_left"; to_y: "padding_top"; }
					rel2 {relative: 1.0 0.0; to_x: "padding_left"; to_y: "padding_bottom"; }
					aspect: 1.0 1.0;
					aspect_preference: VERTICAL;
				}
				description { state: "icononly" 0.0;;
					visible: 1;
					min: 40 40;
					rel1 {relative: 1.0 1.0; to_x: "padding_left"; to_y: "padding_top"; }
					rel2 {relative: 0.0 0.0; to_x: "padding_right"; to_y: "padding_bottom"; }
					align: 0.5 0.5;
					aspect: 1.0 1.0;
					aspect_preference: VERTICAL;
				}
			}
			part { name: "elm.text";
				type: TEXT;
				effect: SHADOW;
				mouse_events:  0;
				scale: 1;
				description { state: "default" 0.0;
					visible: 0;
					rel1 { relative: 1.0 1.0; to_x: "padding_icon_text"; to_y: "padding_top"; }
					rel2 { relative: 0.0 0.0; to_x: "padding_right"; to_y:"padding_bottom"; }
					align: 0.5 0.5;
					color: BUTTON_NAVIBAR_FUNCTION_BUTTON_TEXT_NORMAL_COLOR_INC;
					color2: BUTTON_NAVIBAR_FUNCTION_BUTTON_TEXT_NORMAL_SHADOW_COLOR_INC;
					text {
						font: "SLP:style=Medium";
						size: 24;
						min:  0 0;
						align: 0.5 0.5;
					}
				}
				description { state: "visible" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					min: 90 40;
				}
				description { state: "clicked" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					min: 0 0;
					color: BUTTON_NAVIBAR_FUNCTION_BUTTON_TEXT_PRESSED_COLOR_INC;
					color2: BUTTON_NAVIBAR_FUNCTION_BUTTON_TEXT_PRESSED_SHADOW_COLOR_INC;
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					color: 0 0 0 128;
					color3: 0 0 0 0;
				}
				description { state: "disabled_visible" 0.0;
					inherit: "default" 0.0;
					color: BUTTON_NAVIBAR_FUNCTION_BUTTON_TEXT_DISABLED_COLOR_INC;
					color2: BUTTON_NAVIBAR_FUNCTION_BUTTON_TEXT_DISABLED_SHADOW_COLOR_INC; 
					color3: 0 0 0 0;
					visible: 1;
				}
				description { state: "focused" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					min: 0 0;
					color: BUTTON_NAVIBAR_FUNCTION_BUTTON_TEXT_FOCUSED_COLOR_INC;
					color2: BUTTON_NAVIBAR_FUNCTION_BUTTON_TEXT_FOCUSED_SHADOW_COLOR_INC;
				}
			}
			part { name: "over2";
				type: RECT;
				mouse_events: 1;
				repeat_events: 1;
				ignore_flags: ON_HOLD;
				description { state: "default" 0.0;
					color: 0 0 0 0;
				}
				description { state: "disabled" 0.0;
					inherit:  "default" 0.0;
					visible: 0;
				}
			}
			part { name: "over3";
				type: RECT;
				mouse_events: 1;
				repeat_events: 1;
				description { state: "default" 0.0;
					color: 0 0 0 0;
				}
				description { state: "clicked" 0.0;
					inherit:  "default" 0.0;
					visible: 1;
				}
			}
			part { name: "disabler";
				type: RECT;
				description { state: "default" 0.0;
					color: 0 0 0 0;
					visible: 0;
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
			}
		}
		programs {
			program { name: "button_click";
				signal: "mouse,down,1";
				source: "over2";
				action: SIGNAL_EMIT "elm,action,press" "";
				after: "button_click_anim";
			}
			program { name: "button_click_anim";
				action: STATE_SET "clicked" 0.0;
				target: "button_image";
				after: "text_clicked";
			}
			program { name: "text_clicked";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "visible"))
						set_state(PART:"elm.text", "clicked", 0.0);
				}
			}
			program { name: "button_unpress";
				action: SIGNAL_EMIT "elm,action,unpress" "";
			}
			program { name: "button_mouseout_clicked";
				signal: "mouse,up,1";
				source: "over3";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.swallow.content", st, 30, vl);
					if (strcmp(st, "icononly"))
					{
						emit("elm,action,default,text,set", "");
						set_state(PART:"elm.text", "visible", 0.0);
					}
					if(get_int(button_state) !=1)
						set_state(PART:"button_image", "default", 0.0);
				}
				after: button_unpress;
			}
			program { name: "button_click2";
				signal: "mouse,down,1";
				source: "over3";
				action: STATE_SET "clicked" 0.0;
				target: "over3";
			}
			program { name: "button_unclick2";
				signal: "mouse,clicked,1";
				source: "over3";
				action: STATE_SET "default" 0.0;
				target: "over3";
			}
			program { name: "button_unclick3";
				signal: "mouse,clicked,1";
				source: "over2";
				action: SIGNAL_EMIT "elm,action,click" "";
			}
			program { name: "text_show";
				signal: "elm,state,text,visible";
				source: "elm";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.swallow.content", st, 30, vl);
					if (!strcmp(st, "icononly"))
					{
						set_state(PART:"elm.swallow.content", "visible", 0.0);
						set_state(PART:"padding_icon_text", "visible", 0.0);
					}
					set_state(PART:"elm.text", "visible", 0.0);
				}
			}
			program { name: "text_hide";
				signal: "elm,state,text,hidden";
				source: "elm";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.swallow.content", st, 30, vl);
					if (!strcmp(st, "visible"))
					{
						set_state(PART:"elm.swallow.content", "icononly", 0.0);
						set_state(PART:"padding_icon_text", "icononly", 0.0);
					}
					set_state(PART:"elm.text", "default", 0.0);
				}
			}
			program { name: "icon_show";
				signal: "elm,state,icon,visible";
				source: "elm";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "visible"))
					{
						set_state(PART:"elm.swallow.content", "visible", 0.0);
						set_state(PART:"padding_icon_text", "visible", 0.0);
					}
					else
					{
						set_state(PART:"elm.swallow.content", "icononly", 0.0);
						set_state(PART:"padding_icon_text", "icononly", 0.0);
					}
				}
			}
			program { name: "icon_hide";
				signal: "elm,state,icon,hidden";
				source: "elm";
				action:  STATE_SET "default" 0.0;
				target: "elm.swallow.content";
			}
			program { name: "disable";
				signal: "elm,state,disabled";
				source: "elm";
				action: STATE_SET "disabled" 0.0;
				target: "button_image";
				target: "over2";
				target: "disabler";
				after: "disable_text";
			}
			program { name: "disable_text";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "visible"))
						set_state(PART:"elm.text", "disabled_visible", 0.0);
					else
						set_state(PART:"elm.text", "disabled", 0.0);
					set_int(button_state, 1);
				}
			}
			program { name: "enable";
				signal: "elm,state,enabled";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "button_image";
				target: "over2";
				target: "disabler";
				after: "enable_text";
			}
			program { name: "enable_text";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "disabled_visible"))
						set_state(PART:"elm.text", "visible", 0.0);
					else
						set_state(PART:"elm.text", "default", 0.0);
					set_int(button_state, 0);
					}
			}
			program { name: "focused";
				//signal: "elm,action,focus";
				//source: "elm";
				action: STATE_SET "focused" 0.0;
				target: "button_image";
				target: "elm.text";
			}
			program { name: "unfocused";
				//signal: "elm,action,unfocus";
				//source: "elm";
				action: STATE_SET "default" 0.0;
				target: "button_image";
				after: "unfocus_text";
			}
			program { name: "unfocus_text";
				action: STATE_SET "visible" 0.0;
				target: "elm.text";
			}
		}
	}

///////////////////////////////////////////////////////////////////////////////////////
	group { name: "elm/button/base/edit";
		alias: "elm/button/base/navigationbar_functionbutton/edit";
		images {
			image: "00_button_edit_normal.png" COMP;
			image: "00_button_edit_press.png" COMP;
			image: "00_button_edit_focus.png" COMP;
			image: "00_button_edit_dim.png" COMP;
		}
		script {
			public button_state = 0; //0:enabled, 1: disabled
		}
		parts {
			part { name: "button_image";
				mouse_events: 1;
				scale: 1;
				description { state: "default" 0.0;
					min: 16 50;
					image {
						normal: "00_button_edit_normal.png";
						border: 7 7 7 7;
						border_scale: 1;
					}
				}
				description { state: "clicked" 0.0;
					inherit: "default" 0.0;
					image.normal: "00_button_edit_press.png";
				}
				description { state: "disabled" 0.0;
					inherit:  "default" 0.0;
					image.normal: "00_button_edit_dim.png";
				}
				description { state: "focused" 0.0;
					inherit: "default" 0.0;
					image.normal: "00_button_edit_focus.png";
				}
			}
			part {
				name: "padding_left";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					align: 0.0 0.0;
					rel1.relative: 0.0 0.0;
					rel2.relative: 0.0 1.0;
					min: 5 5;
					fixed: 1 0;
					color: 0 0 0 0;
				}
			}
			part {
				name: "padding_right";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					align: 1.0 0.0;
					rel1.relative: 1.0 0.0;
					rel2.relative: 1.0 1.0;
					min: 5 5;
					fixed: 1 0;
					color: 0 0 0 0;
				}
			}
			part {
				name: "padding_top";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					align: 0.0 0.0;
					rel1.relative: 0.0 0.0;
					rel2.relative: 1.0 0.0;
					min: 5 5;
					fixed: 0 1;
					color: 0 0 0 0;
				}
			}
			part {
				name: "padding_bottom";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					align: 1.0 1.0;
					rel1.relative: 0.0 1.0;
					rel2.relative: 1.0 1.0;
					min: 5 5;
					fixed: 0 1;
					color: 0 0 0 0;
				}
			}
			part {
				name: "icon_rect";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					visible: 1;
					min: 0 40;
					fixed: 1 0;
					rel1 {relative: 0.0 1.0; to_x: "elm.swallow.content"; to_y: "padding_top"; }
					rel2 {relative: 1.0 0.0; to_x: "elm.swallow.content"; to_y: "padding_bottom"; }
					align: 0.0 0.5;
					color: 0 0 0 0;
				}
			} 
			part {
				name: "padding_icon_text";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0; //when only icon or no icon is there
					align: 0.0 0.0;
					rel1 { relative: 1.0 0.0; to: "icon_rect"; }
					rel2 { relative: 1.0 1.0; to: "icon_rect"; } 			
					fixed: 1 0;
					min: 0 0;
					color: 0 0 0 0;
				}
				description { state: "icononly" 0.0;
					inherit: "default" 0.0;
				}
				description { state: "visible" 0.0; //when icon is visible
					align: 0.0 0.0;
					rel1 { relative: 1.0 0.0; to: "icon_rect"; }
					rel2 { relative: 1.0 1.0; to: "icon_rect"; } 			
					fixed: 1 0;
					min: 5 0;
					color: 0 0 0 0;
				}
			}					
			part { name: "elm.swallow.content";
				type: SWALLOW;
				scale: 1;
				description { state: "default" 0.0;
					visible: 0;
					align: 0.0 0.5;
					rel1 {relative: 1.0 1.0; to_x: "padding_left"; to_y: "padding_top"; }
					rel2 {relative: 1.0 0.0; to_x: "padding_left"; to_y: "padding_bottom"; }
					fixed: 1 0;
				}
				description { state: "visible" 0.0;
					fixed: 1 0;
					visible: 1;
					align: 0.0 0.5;
					rel1 {relative: 1.0 1.0; to_x: "padding_left"; to_y: "padding_top"; }
					rel2 {relative: 1.0 0.0; to_x: "padding_left"; to_y: "padding_bottom"; }
					aspect: 1.0 1.0;
					aspect_preference: VERTICAL;
				}
				description { state: "icononly" 0.0;;
					visible: 1;
					min: 40 40;
					rel1 {relative: 1.0 1.0; to_x: "padding_left"; to_y: "padding_top"; }
					rel2 {relative: 0.0 0.0; to_x: "padding_right"; to_y: "padding_bottom"; }
					align: 0.5 0.5;
					aspect: 1.0 1.0;
					aspect_preference: VERTICAL;
				}
			}
			part { name: "elm.text";
				type: TEXT;
				effect: SHADOW;
				mouse_events:  0;
				scale: 1;
				description { state: "default" 0.0;
					visible: 0;
					rel1 { relative: 1.0 1.0; to_x: "padding_icon_text"; to_y: "padding_top"; }
					rel2 { relative: 0.0 0.0; to_x: "padding_right"; to_y:"padding_bottom"; }
					align: 0.5 0.5;
					color: BUTTON_NAVIBAR_FUNCTION_BUTTON_TEXT_NORMAL_COLOR_INC;
					color2: BUTTON_NAVIBAR_FUNCTION_BUTTON_TEXT_NORMAL_SHADOW_COLOR_INC;
					text {
						font: "SLP:style=Medium";
						size: 24;
						min:  1 0;
						align: 0.5 0.5;
					}
				}
				description { state: "visible" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					min: 90 40;
				}
				description { state: "clicked" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					min: 0 0;
					color: BUTTON_NAVIBAR_FUNCTION_BUTTON_TEXT_PRESSED_COLOR_INC;
					color2: BUTTON_NAVIBAR_FUNCTION_BUTTON_TEXT_PRESSED_SHADOW_COLOR_INC;
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					color: 0 0 0 128;
					color3: 0 0 0 0;
				}
				description { state: "disabled_visible" 0.0;
					inherit: "default" 0.0;
					color: BUTTON_NAVIBAR_FUNCTION_BUTTON_TEXT_DISABLED_COLOR_INC;
					color2: BUTTON_NAVIBAR_FUNCTION_BUTTON_TEXT_DISABLED_SHADOW_COLOR_INC;
					color3: 0 0 0 0;
					visible: 1;
				}
				description { state: "focused" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					min: 0 0;
					color: BUTTON_NAVIBAR_FUNCTION_BUTTON_TEXT_FOCUSED_COLOR_INC;
					color2: BUTTON_NAVIBAR_FUNCTION_BUTTON_TEXT_FOCUSED_SHADOW_COLOR_INC;
				}
			}
			part { name: "over2";
				type: RECT;
				mouse_events: 1;
				repeat_events: 1;
				ignore_flags: ON_HOLD;
				description { state: "default" 0.0;
					color: 0 0 0 0;
				}
				description { state: "disabled" 0.0;
					inherit:  "default" 0.0;
					visible: 0;
				}
			}
			part { name: "over3";
				type: RECT;
				mouse_events: 1;
				repeat_events: 1;
				description { state: "default" 0.0;
					color: 0 0 0 0;
				}
				description { state: "clicked" 0.0;
					inherit:  "default" 0.0;
					visible: 1;
				}
			}
			part { name: "disabler";
				type: RECT;
				description { state: "default" 0.0;
					color: 0 0 0 0;
					visible: 0;
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
			}
		}
		programs {
			program { name: "button_click";
				signal: "mouse,down,1";
				source: "over2";
				action: SIGNAL_EMIT "elm,action,press" "";
				after: "button_click_anim";
			}
			program { name: "button_click_anim";
				action: STATE_SET "clicked" 0.0;
				target: "button_image";
				after: "text_clicked";
			}
			program { name: "text_clicked";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "visible"))
						set_state(PART:"elm.text", "clicked", 0.0);
				}
			}
			program { name: "button_unpress";
				action: SIGNAL_EMIT "elm,action,unpress" "";
			}
			program { name: "button_mouseout_clicked";
				signal: "mouse,up,1";
				source: "over3";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.swallow.content", st, 30, vl);
					if (strcmp(st, "icononly"))
					{
						emit("elm,action,default,text,set", "");
						set_state(PART:"elm.text", "visible", 0.0);
					}
					if(get_int(button_state) !=1)
						set_state(PART:"button_image", "default", 0.0);
				}
				after: button_unpress;
			}
			program { name: "button_click2";
				signal: "mouse,down,1";
				source: "over3";
				action: STATE_SET "clicked" 0.0;
				target: "over3";
			}
			program { name: "button_unclick2";
				signal: "mouse,clicked,1";
				source: "over3";
				action: STATE_SET "default" 0.0;
				target: "over3";
			}
			program { name: "button_unclick3";
				signal: "mouse,clicked,1";
				source: "over2";
				action: SIGNAL_EMIT "elm,action,click" "";
			}
			program { name: "text_show";
				signal: "elm,state,text,visible";
				source: "elm";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.swallow.content", st, 30, vl);
					if (!strcmp(st, "icononly"))
					{
						set_state(PART:"elm.swallow.content", "visible", 0.0);
						set_state(PART:"padding_icon_text", "visible", 0.0);
					}
					set_state(PART:"elm.text", "visible", 0.0);
				}
			}
			program { name: "text_hide";
				signal: "elm,state,text,hidden";
				source: "elm";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.swallow.content", st, 30, vl);
					if (!strcmp(st, "visible"))
					{
						set_state(PART:"elm.swallow.content", "icononly", 0.0);
						set_state(PART:"padding_icon_text", "icononly", 0.0);
					}
					set_state(PART:"elm.text", "default", 0.0);
				}
			}
			program { name: "icon_show";
				signal: "elm,state,icon,visible";
				source: "elm";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "visible"))
					{
						set_state(PART:"elm.swallow.content", "visible", 0.0);
						set_state(PART:"padding_icon_text", "visible", 0.0);
					}
					else
					{
						set_state(PART:"elm.swallow.content", "icononly", 0.0);
						set_state(PART:"padding_icon_text", "icononly", 0.0);
					}
				}
			}
			program { name: "icon_hide";
				signal: "elm,state,icon,hidden";
				source: "elm";
				action:  STATE_SET "default" 0.0;
				target: "elm.swallow.content";
			}
			program { name: "disable";
				signal: "elm,state,disabled";
				source: "elm";
				action: STATE_SET "disabled" 0.0;
				target: "button_image";
				target: "over2";
				target: "disabler";
				after: "disable_text";
			}
			program { name: "disable_text";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "visible"))
						set_state(PART:"elm.text", "disabled_visible", 0.0);
					else
						set_state(PART:"elm.text", "disabled", 0.0);
					set_int(button_state, 1);
				}
			}
			program { name: "enable";
				signal: "elm,state,enabled";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "button_image";
				target: "over2";
				target: "disabler";
				after: "enable_text";
			}
			program { name: "enable_text";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "disabled_visible"))
						set_state(PART:"elm.text", "visible", 0.0);
					else
						set_state(PART:"elm.text", "default", 0.0);
					set_int(button_state, 0);
					}
			}
			program { name: "focused";
				//signal: "elm,action,focus";
				//source: "elm";
				action: STATE_SET "focused" 0.0;
				target: "button_image";
				target: "elm.text";
			}
			program { name: "unfocused";
				//signal: "elm,action,unfocus";
				//source: "elm";
				action: STATE_SET "default" 0.0;
				target: "button_image";
				after: "unfocus_text";
			}
			program { name: "unfocus_text";
				action: STATE_SET "visible" 0.0;
				target: "elm.text";
			}
		}
	}

///////////////////////////////////////////////////////////////////////////////////////
   group { name: "elm/button/base/popup_button/default";
      alias: "elm/button/base/popup_button/menustyle";
      alias: "elm/button/base/popup_button/liststyle";
      alias: "elm/button/base/popup_button/volumebarstyle";
      alias: "elm/button/base/popup_button/customstyle";
      images {
         image: "00_button_popup_normal.png" COMP;
         image: "00_button_popup_press.png" COMP;
         image: "00_button_popup_focus.png" COMP;
         image: "00_button_popup_dim.png" COMP;
      }
      script {
         public button_state = 0; //0:enabled, 1: disabled
      }
      parts {
         part { name: "button_image";
            mouse_events: 1;
            scale: 1;
            description { state: "default" 0.0;
               min: 18 46;
               max: 400 46;
               image {
                  normal: "00_button_popup_normal.png";
                  border: 4 4 4 4;
                  border_scale: 1;
               }
            }
            description { state: "clicked" 0.0;
               inherit: "default" 0.0;
               image.normal: "00_button_popup_press.png";
            }
            description { state: "disabled" 0.0;
               inherit:  "default" 0.0;
               image.normal: "00_button_popup_dim.png";
            }
            description { state: "focused" 0.0;
               inherit: "default" 0.0;
               image.normal: "00_button_popup_focus.png";
            }
         }
      part {
         name: "padding_left";
         type: RECT;
         scale: 1;
         mouse_events: 0;
         description { state: "default" 0.0;
            align: 0.0 0.0;
            rel1.relative: 0.0 0.0;
            rel2.relative: 0.0 1.0;
            min: 10 5;
            fixed: 1 0;
            color: 0 0 0 0;
         }
      }
      part {
         name: "padding_right";
         type: RECT;
         scale: 1;
         mouse_events: 0;
         description { state: "default" 0.0;
            align: 1.0 0.0;
            rel1.relative: 1.0 0.0;
            rel2.relative: 1.0 1.0;
            min: 10 5;
            fixed: 1 0;
            color: 0 0 0 0;
         }
      }
      part {
         name: "padding_top";
         type: RECT;
         scale: 1;
         mouse_events: 0;
         description { state: "default" 0.0;
            align: 0.0 0.0;
            rel1.relative: 0.0 0.0;
            rel2.relative: 1.0 0.0;
            min: 5 10;
            fixed: 0 1;
            color: 0 0 0 0;
         }
      }
      part {
         name: "padding_bottom";
         type: RECT;
         scale: 1;
         mouse_events: 0;
         description { state: "default" 0.0;
            align: 1.0 1.0;
            rel1.relative: 0.0 1.0;
            rel2.relative: 1.0 1.0;
            min: 5 10;
            fixed: 0 1;
            color: 0 0 0 0;
         }
      }
      part {
         name: "icon_rect";
         type: RECT;
         scale: 1;
         mouse_events: 0;
         description { state: "default" 0.0;
            visible: 1;
            min: 0 40;
            fixed: 1 0;
            rel1 {relative: 0.0 1.0; to_x: "elm.swallow.content"; to_y: "padding_top"; }
            rel2 {relative: 1.0 0.0; to_x: "elm.swallow.content"; to_y: "padding_bottom"; }
            align: 0.0 0.5;
            color: 0 0 0 0;
         }
      } 
      part {
         name: "padding_icon_text";
         type: RECT;
         scale: 1;
         mouse_events: 0;
         description { state: "default" 0.0; //when only icon or no icon is there
            align: 0.0 0.0;
            rel1 { relative: 1.0 0.0; to: "icon_rect"; }
            rel2 { relative: 1.0 1.0; to: "icon_rect"; }
            fixed: 1 0;
            min: 0 0;
            color: 0 0 0 0;
         }
         description { state: "icononly" 0.0;
            inherit: "default" 0.0;
         }
         description { state: "visible" 0.0; //when icon is visible
            align: 0.0 0.0;
            rel1 { relative: 1.0 0.0; to: "icon_rect"; }
            rel2 { relative: 1.0 1.0; to: "icon_rect"; }
            fixed: 1 0;
            min: 10 0;
            color: 0 0 0 0;
         }
      }              
      part { name: "elm.swallow.content";
         type: SWALLOW;
         scale: 1;
         description { state: "default" 0.0;
            visible: 0;
            align: 0.0 0.5;
            rel1 {relative: 1.0 1.0; to_x: "padding_left"; to_y: "padding_top"; }
            rel2 {relative: 1.0 0.0; to_x: "padding_left"; to_y: "padding_bottom"; }
            fixed: 1 0;
         }
         description { state: "visible" 0.0;
            fixed: 1 0;
            visible: 1;
            align: 0.0 0.5;
            rel1 {relative: 1.0 1.0; to_x: "padding_left"; to_y: "padding_top"; }
            rel2 {relative: 1.0 0.0; to_x: "padding_left"; to_y: "padding_bottom"; }
            aspect: 1.0 1.0;
            aspect_preference: VERTICAL;
         }
         description { state: "icononly" 0.0;;
            visible: 1;
            min: 24 24;
            rel1 {relative: 1.0 1.0; to_x: "padding_left"; to_y: "padding_top"; }
            rel2 {relative: 0.0 0.0; to_x: "padding_right"; to_y: "padding_bottom"; }
            align: 0.5 0.5;
            aspect: 1.0 1.0;
            aspect_preference: VERTICAL;
         }
      }
      part { name: "elm.text";
         type:          TEXT;
         effect:        SHADOW;
         mouse_events:  0;
         scale: 1;
         description { state: "default" 0.0;
            visible: 0;
            rel1 { relative: 1.0 1.0; to_x: "padding_icon_text"; to_y: "padding_top"; }
            rel2 { relative: 0.0 0.0; to_x: "padding_right"; to_y:"padding_bottom"; }
            align: 0.5 0.5;
            color: BUTTON_POPUP_BUTTON_TEXT_NORMAL_COLOR_INC;
            color2: BUTTON_POPUP_BUTTON_TEXT_NORMAL_SHAWDOW_COLOR_INC;
            text {
               font: "SLP:style=Medium";
               size: 20;
               min:  0 0;
               align: 0.5 0.5;
               max: 1 0;
            }
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            visible: 1;
            min: 90 20;
         }
         description { state: "clicked" 0.0;
            inherit: "default" 0.0;
            visible: 1;
            min: 0 0;
            color: BUTTON_POPUP_BUTTON_TEXT_PRESSED_COLOR_INC;
            color2: BUTTON_POPUP_BUTTON_TEXT_PRESSED_SHAWDOW_COLOR_INC;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            color: 0 0 0 128;
            color3: 0 0 0 0;
         }
         description { state: "disabled_visible" 0.0;
            inherit: "default" 0.0;
            color: BUTTON_POPUP_BUTTON_TEXT_DISABLED_COLOR_INC;
            color2: BUTTON_POPUP_BUTTON_TEXT_DISABLED_SHAWDOW_COLOR_INC;
            color3: 0 0 0 0;
            visible: 1;
         }
         description { state: "focused" 0.0;
            inherit: "default" 0.0;
            visible: 1;
            min: 0 0;
            color: BUTTON_POPUP_BUTTON_TEXT_FOCUSED_COLOR_INC;
            color2: BUTTON_POPUP_BUTTON_TEXT_FOCUSED_SHAWDOW_COLOR_INC;
         }
      }
      part { name: "over2";
         type: RECT;
         mouse_events: 1;
         repeat_events: 1;
         ignore_flags: ON_HOLD;
         description { state: "default" 0.0;
            color: 0 0 0 0;
         }
         description { state: "disabled" 0.0;
            inherit:  "default" 0.0;
            visible: 0;
         }
      }
      part { name: "over3";
         type: RECT;
         mouse_events: 1;
         repeat_events: 1;
         description { state: "default" 0.0;
            color: 0 0 0 0;
         }
         description { state: "clicked" 0.0;
            inherit:  "default" 0.0;
            visible: 1;
         }
      }
      part { name: "disabler";
         type: RECT;
         description { state: "default" 0.0;
            color: 0 0 0 0;
            visible: 0;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
      }
   }
   programs {
      program { name: "button_click";
         signal: "mouse,down,1";
         source: "over2";
         action: SIGNAL_EMIT "elm,action,press" "";
         after: "button_click_anim";
      }
      program { name: "button_click_anim";
         action: STATE_SET "clicked" 0.0;
         target: "button_image";
         after: "text_clicked";
      }
      program { name: "text_clicked";
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"elm.text", st, 30, vl);
            if (!strcmp(st, "visible"))
               set_state(PART:"elm.text", "clicked", 0.0);
         }
      }
      program { name: "button_unpress";
         action: SIGNAL_EMIT "elm,action,unpress" "";
      }
      program { name: "button_mouseout_clicked";
         signal: "mouse,up,1";
         source: "over3";
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"elm.swallow.content", st, 30, vl);
            if (strcmp(st, "icononly"))
            {
               emit("elm,action,default,text,set", "");
               set_state(PART:"elm.text", "visible", 0.0);
            }
            if(get_int(button_state) !=1)
               set_state(PART:"button_image", "default", 0.0);
         }
         after: button_unpress;
      }
      program { name: "button_click2";
         signal: "mouse,down,1";
         source: "over3";
         action: STATE_SET "clicked" 0.0;
         target: "over3";
      }
      program { name: "button_unclick2";
         signal: "mouse,clicked,1";
         source: "over3";
         action: STATE_SET "default" 0.0;
         target: "over3";
      }
      program { name: "button_unclick3";
         signal: "mouse,clicked,1";
         source: "over2";
         action: SIGNAL_EMIT "elm,action,click" "";
      }
      program { name: "text_show";
         signal: "elm,state,text,visible";
         source: "elm";
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"elm.swallow.content", st, 30, vl);
            if (!strcmp(st, "icononly"))
            {
               set_state(PART:"elm.swallow.content", "visible", 0.0);
               set_state(PART:"padding_icon_text", "visible", 0.0);
            }
            set_state(PART:"elm.text", "visible", 0.0);
         }
      }
      program { name: "text_hide";
         signal: "elm,state,text,hidden";
         source: "elm";
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"elm.swallow.content", st, 30, vl);
            if (!strcmp(st, "visible"))
            {
               set_state(PART:"elm.swallow.content", "icononly", 0.0);
               set_state(PART:"padding_icon_text", "icononly", 0.0);
            }
            set_state(PART:"elm.text", "default", 0.0);
         }
      }
      program { name: "icon_show";
         signal: "elm,state,icon,visible";
         source: "elm";
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"elm.text", st, 30, vl);
            if (!strcmp(st, "visible"))
            {
               set_state(PART:"elm.swallow.content", "visible", 0.0);
               set_state(PART:"padding_icon_text", "visible", 0.0);
            }
            else
            {
               set_state(PART:"elm.swallow.content", "icononly", 0.0);
               set_state(PART:"padding_icon_text", "icononly", 0.0);
            }
         }
      }
      program { name: "icon_hide";
         signal: "elm,state,icon,hidden";
         source: "elm";
         action:  STATE_SET "default" 0.0;
         target: "elm.swallow.content";
      }
      program { name: "disable";
         signal: "elm,state,disabled";
         source: "elm";
         action: STATE_SET "disabled" 0.0;
         target: "button_image";
         target: "over2";
         target: "disabler";
         after: "disable_text";
      }
      program { name: "disable_text";
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"elm.text", st, 30, vl);
            if (!strcmp(st, "visible"))
               set_state(PART:"elm.text", "disabled_visible", 0.0);
            else
               set_state(PART:"elm.text", "disabled", 0.0);
            set_int(button_state, 1);
         }
      }
      program { name: "enable";
         signal: "elm,state,enabled";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "button_image";
         target: "over2";
         target: "disabler";
         after: "enable_text";
      }
      program { name: "enable_text";
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"elm.text", st, 30, vl);
            if (!strcmp(st, "disabled_visible"))
               set_state(PART:"elm.text", "visible", 0.0);
            else
               set_state(PART:"elm.text", "default", 0.0);
            set_int(button_state, 0);
         }
      }
      program { name: "focused";
         action: STATE_SET "focused" 0.0;
         target: "button_image";
         target: "elm.text";
      }
      program { name: "unfocused";
         action: STATE_SET "default" 0.0;
         target: "button_image";
         after: "unfocus_text";
      }
      program { name: "unfocus_text";
         action: STATE_SET "visible" 0.0;
         target: "elm.text";
      }
   }
}

///////////////////////////////////////////////////////////////////////////////////////
	group { name: "elm/button/base/expand/opened";
		images {
			image: "00_button_expand_opened.png" COMP;
			image: "00_button_expand_opened_press.png" COMP;
			image: "00_button_expand_opened_dim.png" COMP;
		}
		parts {
			part { name: "button_image";
				mouse_events: 1;
				scale: 1;
				description { state: "default" 0.0;
					min: 40 40;
					max: 40 40;
					image {
						normal: "00_button_expand_opened.png";
					}
				}
				description {
					state: "clicked" 0.0;
					inherit: "default" 0.0;
					image.normal: "00_button_expand_opened_press.png";
				}
				description {
					state: "disabled" 0.0;
					inherit: "default" 0.0;
					image.normal: "00_button_expand_opened_dim.png";
				}
			}
			part { name: "over1";
				type: RECT;
				mouse_events: 1;
				repeat_events: 1;
				ignore_flags: ON_HOLD;
				description { state: "default" 0.0;
					color: 0 0 0 0;
				}
			}
			part { name: "over2";
				mouse_events: 1;
				repeat_events: 1;
				description { state: "default" 0.0;
					color: 255 255 255 0;
				}
				description { state: "clicked" 0.0;
					inherit:  "default" 0.0;
					visible: 1;
					color: 255 255 255 0;
				}
			}
			part { name: "disabler";
				type: RECT;
				description { state: "default" 0.0;
					color: 0 0 0 0;
					visible: 0;
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
			}
		}
		programs {
			program { name: "button_click";
				signal: "mouse,down,1";
				source: "over1";
				action: SIGNAL_EMIT "elm,action,press" "";
				after: "button_click_anim";
			}
			program { name: "button_click_anim";
				action: STATE_SET "clicked" 0.0;
				target: "button_image";
			}
			program { name: "button_unclick";
				signal: "mouse,up,1";
				source: "over2";
				action: SIGNAL_EMIT "elm,action,unpress" "";
				after: "button_unclick_anim";
			}
			program { name: "button_unclick_anim";
				action: STATE_SET "default" 0.0;
				target: "button_image";
				after: "button_mouseout_clicked";
			}	 
			program { name: "button_mouseout_clicked";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"button_image", st, 30, vl);
					if (!strcmp(st, "clicked"))
						set_state(PART:"button_image", "default", 0.0);
				}
			}
			program { name: "button_click2";
				signal: "mouse,down,1";
				source: "over2";
				action: STATE_SET "clicked" 0.0;
				target: "over2";
			}
			program { name: "button_unclick2";
				signal: "mouse,clicked,1";
				source: "over1";
				action: STATE_SET "default" 0.0;
				target: "over1";
				after: "button_unclick3";
			}
			program { name: "button_unclick3";
				action: SIGNAL_EMIT "elm,action,click" "";
			}
			program { name: "disable";
				signal: "elm,state,disabled";
				source: "elm";
				action: STATE_SET "disabled" 0.0;
				target: "disabler";
				target: "button_image";
			}
			program { name: "enable";
				signal: "elm,state,enabled";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "disabler";
				target: "button_image";
			}
		}
	}

	group { name: "elm/button/base/expand/opened/extended";
		images {
			image: "00_button_expand_opened.png" COMP;
			image: "00_button_expand_opened_press.png" COMP;
			image: "00_button_expand_opened_dim.png" COMP;
		}
		parts {		
			part { name: "button_image";
				mouse_events: 1;
				scale: 1;
				description { state: "default" 0.0;
					min: 40 40;
					max: 40 40;
					image {
						normal: "00_button_expand_opened.png";
					}
				}
				description {
					state: "clicked" 0.0;
					inherit: "default" 0.0;
					image.normal: "00_button_expand_opened_press.png";
				}
				description {
					state: "disabled" 0.0;
					inherit: "default" 0.0;
					image.normal: "00_button_expand_opened_dim.png";
				}
			}
			part { name: "over1";
				type: RECT;
				mouse_events: 1;
				repeat_events: 1;
				ignore_flags: ON_HOLD;
				description { state: "default" 0.0;
					min: 60 75;
					max: 60 75;				
					color: 0 0 0 0;
				}
			}
			part { name: "over2";
				mouse_events: 1;
				repeat_events: 1;
				description { state: "default" 0.0;
					color: 255 255 255 0;
				}
				description { state: "clicked" 0.0;
					inherit:  "default" 0.0;
					visible: 1;
					color: 255 255 255 0;
				}
			}
			part { name: "disabler";
				type: RECT;
				description { state: "default" 0.0;
					color: 0 0 0 0;
					visible: 0;
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
			}
		}
		programs {
			program { name: "button_click";
				signal: "mouse,down,1";
				source: "over1";
				action: SIGNAL_EMIT "elm,action,press" "";
				after: "button_click_anim";
			}
			program { name: "button_click_anim";
				action: STATE_SET "clicked" 0.0;
				target: "button_image";
			}
			program { name: "button_unclick";
				signal: "mouse,up,1";
				source: "over2";
				action: SIGNAL_EMIT "elm,action,unpress" "";
				after: "button_unclick_anim";
			}
			program { name: "button_unclick_anim";
				action: STATE_SET "default" 0.0;
				target: "button_image";
				after: "button_mouseout_clicked";
			}	 
			program { name: "button_mouseout_clicked";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"button_image", st, 30, vl);
					if (!strcmp(st, "clicked"))
						set_state(PART:"button_image", "default", 0.0);
				}
			}
			program { name: "button_click2";
				signal: "mouse,down,1";
				source: "over2";
				action: STATE_SET "clicked" 0.0;
				target: "over2";
			}
			program { name: "button_unclick2";
				signal: "mouse,clicked,1";
				source: "over1";
				action: STATE_SET "default" 0.0;
				target: "over1";
				after: "button_unclick3";
			}
			program { name: "button_unclick3";
				action: SIGNAL_EMIT "elm,action,click" "";
			}
			program { name: "disable";
				signal: "elm,state,disabled";
				source: "elm";
				action: STATE_SET "disabled" 0.0;
				target: "disabler";
				target: "button_image";
			}
			program { name: "enable";
				signal: "elm,state,enabled";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "disabler";
				target: "button_image";
			}
		}
	}	
///////////////////////////////////////////////////////////////////////////////////////
	group { name: "elm/button/base/expand/closed";
		images {
			image: "00_button_expand_closed.png" COMP;
			image: "00_button_expand_closed_press.png" COMP;
			image: "00_button_expand_closed_dim.png" COMP;
		}
		parts {
			part { name: "button_image";
				mouse_events: 1;
				scale: 1;
				description { state: "default" 0.0;
					min: 40 40;
					max: 40 40;
					image {
						normal: "00_button_expand_closed.png";
					}
				}
				description {
					state: "clicked" 0.0;
					inherit: "default" 0.0;
					image.normal: "00_button_expand_closed_press.png";
				}
				description {
					state: "disabled" 0.0;
					inherit: "default" 0.0;
					image.normal: "00_button_expand_closed_dim.png";
				}
			}
			part { name: "over1";
				type: RECT;
				mouse_events: 1;
				repeat_events: 1;
				ignore_flags: ON_HOLD;
				description { state: "default" 0.0;
					color: 0 0 0 0;
				}
			}
			part { name: "over2";
				mouse_events: 1;
				repeat_events: 1;
				description { state: "default" 0.0;
					color: 255 255 255 0;
				}
				description { state: "clicked" 0.0;
					inherit:  "default" 0.0;
					visible: 1;
					color: 255 255 255 0;
				}
			}
			part { name: "disabler";
				type: RECT;
				description { state: "default" 0.0;
					color: 0 0 0 0;
					visible: 0;
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
			}
		}
		programs {
			program { name: "button_click";
				signal: "mouse,down,1";
				source: "over1";
				action: SIGNAL_EMIT "elm,action,press" "";
				after: "button_click_anim";
			}
			program { name: "button_click_anim";
				action: STATE_SET "clicked" 0.0;
				target: "button_image";
			}
			program { name: "button_unclick";
				signal: "mouse,up,1";
				source: "over2";
				action: SIGNAL_EMIT "elm,action,unpress" "";
				after: "button_unclick_anim";
			}
			program { name: "button_unclick_anim";
				action: STATE_SET "default" 0.0;
				target: "button_image";
				after: "button_mouseout_clicked";
			}	 
			program { name: "button_mouseout_clicked";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"button_image", st, 30, vl);
					if (!strcmp(st, "clicked"))
						set_state(PART:"button_image", "default", 0.0);
				}
			}
			program { name: "button_click2";
				signal: "mouse,down,1";
				source: "over2";
				action: STATE_SET "clicked" 0.0;
				target: "over2";
			}
			program { name: "button_unclick2";
				signal: "mouse,clicked,1";
				source: "over1";
				action: STATE_SET "default" 0.0;
				target: "over1";
				after: "button_unclick3";
			}
			program { name: "button_unclick3";
				action: SIGNAL_EMIT "elm,action,click" "";
			}
			program { name: "disable";
				signal: "elm,state,disabled";
				source: "elm";
				action: STATE_SET "disabled" 0.0;
				target: "disabler";
				target: "button_image";
			}
			program { name: "enable";
				signal: "elm,state,enabled";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "disabler";
				target: "button_image";
			}
		}
	}

	group { name: "elm/button/base/expand/closed/extended";
		images {
			image: "00_button_expand_closed.png" COMP;
			image: "00_button_expand_closed_press.png" COMP;
			image: "00_button_expand_closed_dim.png" COMP;
		}
		parts {		
			part { name: "button_image";
				mouse_events: 1;
				scale: 1;
				description { state: "default" 0.0;
					min: 40 40;
					max: 40 40;
					image {
						normal: "00_button_expand_closed.png";
					}
				}
				description {
					state: "clicked" 0.0;
					inherit: "default" 0.0;
					image.normal: "00_button_expand_closed_press.png";
				}
				description {
					state: "disabled" 0.0;
					inherit: "default" 0.0;
					image.normal: "00_button_expand_closed_dim.png";
				}
			}
			part { name: "over1";
				type: RECT;
				mouse_events: 1;
				repeat_events: 1;
				ignore_flags: ON_HOLD;
				description { state: "default" 0.0;
					min: 60 75;
					max: 60 75;				
					color: 0 0 0 0;
				}
			}
			part { name: "over2";
				mouse_events: 1;
				repeat_events: 1;
				description { state: "default" 0.0;
					color: 255 255 255 0;
				}
				description { state: "clicked" 0.0;
					inherit:  "default" 0.0;
					visible: 1;
					color: 255 255 255 0;
				}
			}
			part { name: "disabler";
				type: RECT;
				description { state: "default" 0.0;
					color: 0 0 0 0;
					visible: 0;
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
			}
		}
		programs {
			program { name: "button_click";
				signal: "mouse,down,1";
				source: "over1";
				action: SIGNAL_EMIT "elm,action,press" "";
				after: "button_click_anim";
			}
			program { name: "button_click_anim";
				action: STATE_SET "clicked" 0.0;
				target: "button_image";
			}
			program { name: "button_unclick";
				signal: "mouse,up,1";
				source: "over2";
				action: SIGNAL_EMIT "elm,action,unpress" "";
				after: "button_unclick_anim";
			}
			program { name: "button_unclick_anim";
				action: STATE_SET "default" 0.0;
				target: "button_image";
				after: "button_mouseout_clicked";
			}	 
			program { name: "button_mouseout_clicked";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"button_image", st, 30, vl);
					if (!strcmp(st, "clicked"))
						set_state(PART:"button_image", "default", 0.0);
				}
			}
			program { name: "button_click2";
				signal: "mouse,down,1";
				source: "over2";
				action: STATE_SET "clicked" 0.0;
				target: "over2";
			}
			program { name: "button_unclick2";
				signal: "mouse,clicked,1";
				source: "over1";
				action: STATE_SET "default" 0.0;
				target: "over1";
				after: "button_unclick3";
			}
			program { name: "button_unclick3";
				action: SIGNAL_EMIT "elm,action,click" "";
			}
			program { name: "disable";
				signal: "elm,state,disabled";
				source: "elm";
				action: STATE_SET "disabled" 0.0;
				target: "disabler";
				target: "button_image";
			}
			program { name: "enable";
				signal: "elm,state,enabled";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "disabler";
				target: "button_image";
			}
		}
	}	
///////////////////////////////////////////////////////////////////////////////////////
	group { name: "elm/button/base/expand_2/opened";
		images {
			image: "00_button_expand_2_opened.png" COMP;
			image: "00_button_expand_2_opened_press.png" COMP;
			image: "00_button_expand_2_opened_dim.png" COMP;
		}
		parts {
			part { name: "button_image";
				mouse_events: 1;
				scale: 1;
				description { state: "default" 0.0;
					min: 40 40;
					max: 40 40;
					image {
						normal: "00_button_expand_2_opened.png";
					}
				}
				description {
					state: "clicked" 0.0;
					inherit: "default" 0.0;
					image.normal: "00_button_expand_2_opened_press.png";
				}
				description {
					state: "disabled" 0.0;
					inherit: "default" 0.0;
					image.normal: "00_button_expand_2_opened_dim.png";
				}
			}
			part { name: "over1";
				type: RECT;
				mouse_events: 1;
				repeat_events: 1;
				ignore_flags: ON_HOLD;
				description { state: "default" 0.0;
					color: 0 0 0 0;
				}
			}
			part { name: "over2";
				mouse_events: 1;
				repeat_events: 1;
				description { state: "default" 0.0;
					color: 255 255 255 0;
				}
				description { state: "clicked" 0.0;
					inherit:  "default" 0.0;
					visible: 1;
					color: 255 255 255 0;
				}
			}
			part { name: "disabler";
				type: RECT;
				description { state: "default" 0.0;
					color: 0 0 0 0;
					visible: 0;
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
			}
		}
		programs {
			program { name: "button_click";
				signal: "mouse,down,1";
				source: "over1";
				action: SIGNAL_EMIT "elm,action,press" "";
				after: "button_click_anim";
			}
			program { name: "button_click_anim";
				action: STATE_SET "clicked" 0.0;
				target: "button_image";
			}
			program { name: "button_unclick";
				signal: "mouse,up,1";
				source: "over2";
				action: SIGNAL_EMIT "elm,action,unpress" "";
				after: "button_unclick_anim";
			}
			program { name: "button_unclick_anim";
				action: STATE_SET "default" 0.0;
				target: "button_image";
				after: "button_mouseout_clicked";
			}	 
			program { name: "button_mouseout_clicked";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"button_image", st, 30, vl);
					if (!strcmp(st, "clicked"))
						set_state(PART:"button_image", "default", 0.0);
				}
			}
			program { name: "button_click2";
				signal: "mouse,down,1";
				source: "over2";
				action: STATE_SET "clicked" 0.0;
				target: "over2";
			}
			program { name: "button_unclick2";
				signal: "mouse,clicked,1";
				source: "over1";
				action: STATE_SET "default" 0.0;
				target: "over1";
				after: "button_unclick3";
			}
			program { name: "button_unclick3";
				action: SIGNAL_EMIT "elm,action,click" "";
			}
			program { name: "disable";
				signal: "elm,state,disabled";
				source: "elm";
				action: STATE_SET "disabled" 0.0;
				target: "disabler";
				target: "button_image";
			}
			program { name: "enable";
				signal: "elm,state,enabled";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "disabler";
				target: "button_image";
			}
		}
	}

	group { name: "elm/button/base/expand_2/opened/extended";
		images {
			image: "00_button_expand_2_opened.png" COMP;
			image: "00_button_expand_2_opened_press.png" COMP;
			image: "00_button_expand_2_opened_dim.png" COMP;
		}
		parts {		
			part { name: "button_image";
				mouse_events: 1;
				scale: 1;
				description { state: "default" 0.0;
					min: 40 40;
					max: 40 40;
					image {
						normal: "00_button_expand_2_opened.png";
					}
				}
				description {
					state: "clicked" 0.0;
					inherit: "default" 0.0;
					image.normal: "00_button_expand_2_opened_press.png";
				}
				description {
					state: "disabled" 0.0;
					inherit: "default" 0.0;
					image.normal: "00_button_expand_2_opened_dim.png";
				}
			}
			part { name: "over1";
				type: RECT;
				mouse_events: 1;
				repeat_events: 1;
				ignore_flags: ON_HOLD;
				description { state: "default" 0.0;
					min: 60 75;
					max: 60 75;				
					color: 0 0 0 0;
				}
			}
			part { name: "over2";
				mouse_events: 1;
				repeat_events: 1;
				description { state: "default" 0.0;
					color: 255 255 255 0;
				}
				description { state: "clicked" 0.0;
					inherit:  "default" 0.0;
					visible: 1;
					color: 255 255 255 0;
				}
			}
			part { name: "disabler";
				type: RECT;
				description { state: "default" 0.0;
					color: 0 0 0 0;
					visible: 0;
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
			}
		}
		programs {
			program { name: "button_click";
				signal: "mouse,down,1";
				source: "over1";
				action: SIGNAL_EMIT "elm,action,press" "";
				after: "button_click_anim";
			}
			program { name: "button_click_anim";
				action: STATE_SET "clicked" 0.0;
				target: "button_image";
			}
			program { name: "button_unclick";
				signal: "mouse,up,1";
				source: "over2";
				action: SIGNAL_EMIT "elm,action,unpress" "";
				after: "button_unclick_anim";
			}
			program { name: "button_unclick_anim";
				action: STATE_SET "default" 0.0;
				target: "button_image";
				after: "button_mouseout_clicked";
			}	 
			program { name: "button_mouseout_clicked";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"button_image", st, 30, vl);
					if (!strcmp(st, "clicked"))
						set_state(PART:"button_image", "default", 0.0);
				}
			}
			program { name: "button_click2";
				signal: "mouse,down,1";
				source: "over2";
				action: STATE_SET "clicked" 0.0;
				target: "over2";
			}
			program { name: "button_unclick2";
				signal: "mouse,clicked,1";
				source: "over1";
				action: STATE_SET "default" 0.0;
				target: "over1";
				after: "button_unclick3";
			}
			program { name: "button_unclick3";
				action: SIGNAL_EMIT "elm,action,click" "";
			}
			program { name: "disable";
				signal: "elm,state,disabled";
				source: "elm";
				action: STATE_SET "disabled" 0.0;
				target: "disabler";
				target: "button_image";
			}
			program { name: "enable";
				signal: "elm,state,enabled";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "disabler";
				target: "button_image";
			}
		}
	}	
///////////////////////////////////////////////////////////////////////////////////////
	group { name: "elm/button/base/expand_2/closed";
		images {
			image: "00_button_expand_2_closed.png" COMP;
			image: "00_button_expand_2_closed_press.png" COMP;
			image: "00_button_expand_2_closed_dim.png" COMP;
		}
		parts {
			part { name: "button_image";
				mouse_events: 1;
				scale: 1;
				description { state: "default" 0.0;
					min: 40 40;
					max: 40 40;
					image {
						normal: "00_button_expand_2_closed.png";
					}
				}
				description {
					state: "clicked" 0.0;
					inherit: "default" 0.0;
					image.normal: "00_button_expand_2_closed_press.png";
				}
				description {
					state: "disabled" 0.0;
					inherit: "default" 0.0;
					image.normal: "00_button_expand_2_closed_dim.png";
				}
			}
			part { name: "over1";
				type: RECT;
				mouse_events: 1;
				repeat_events: 1;
				ignore_flags: ON_HOLD;
				description { state: "default" 0.0;
					color: 0 0 0 0;
				}
			}
			part { name: "over2";
				mouse_events: 1;
				repeat_events: 1;
				description { state: "default" 0.0;
					color: 255 255 255 0;
				}
				description { state: "clicked" 0.0;
					inherit:  "default" 0.0;
					visible: 1;
					color: 255 255 255 0;
				}
			}
			part { name: "disabler";
				type: RECT;
				description { state: "default" 0.0;
					color: 0 0 0 0;
					visible: 0;
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
			}
		}
		programs {
			program { name: "button_click";
				signal: "mouse,down,1";
				source: "over1";
				action: SIGNAL_EMIT "elm,action,press" "";
				after: "button_click_anim";
			}
			program { name: "button_click_anim";
				action: STATE_SET "clicked" 0.0;
				target: "button_image";
			}
			program { name: "button_unclick";
				signal: "mouse,up,1";
				source: "over2";
				action: SIGNAL_EMIT "elm,action,unpress" "";
				after: "button_unclick_anim";
			}
			program { name: "button_unclick_anim";
				action: STATE_SET "default" 0.0;
				target: "button_image";
				after: "button_mouseout_clicked";
			}	 
			program { name: "button_mouseout_clicked";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"button_image", st, 30, vl);
					if (!strcmp(st, "clicked"))
						set_state(PART:"button_image", "default", 0.0);
				}
			}
			program { name: "button_click2";
				signal: "mouse,down,1";
				source: "over2";
				action: STATE_SET "clicked" 0.0;
				target: "over2";
			}
			program { name: "button_unclick2";
				signal: "mouse,clicked,1";
				source: "over1";
				action: STATE_SET "default" 0.0;
				target: "over1";
				after: "button_unclick3";
			}
			program { name: "button_unclick3";
				action: SIGNAL_EMIT "elm,action,click" "";
			}
			program { name: "disable";
				signal: "elm,state,disabled";
				source: "elm";
				action: STATE_SET "disabled" 0.0;
				target: "disabler";
				target: "button_image";
			}
			program { name: "enable";
				signal: "elm,state,enabled";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "disabler";
				target: "button_image";
			}
		}
	}

	group { name: "elm/button/base/expand_2/closed/extended";
		images {
			image: "00_button_expand_2_closed.png" COMP;
			image: "00_button_expand_2_closed_press.png" COMP;
			image: "00_button_expand_2_closed_dim.png" COMP;
		}
		parts {		
			part { name: "button_image";
				mouse_events: 1;
				scale: 1;
				description { state: "default" 0.0;
					min: 40 40;
					max: 40 40;
					image {
						normal: "00_button_expand_2_closed.png";
					}
				}
				description {
					state: "clicked" 0.0;
					inherit: "default" 0.0;
					image.normal: "00_button_expand_2_closed_press.png";
				}
				description {
					state: "disabled" 0.0;
					inherit: "default" 0.0;
					image.normal: "00_button_expand_2_closed_dim.png";
				}
			}
			part { name: "over1";
				type: RECT;
				mouse_events: 1;
				repeat_events: 1;
				ignore_flags: ON_HOLD;
				description { state: "default" 0.0;
					min: 60 75;
					max: 60 75;				
					color: 0 0 0 0;
				}
			}
			part { name: "over2";
				mouse_events: 1;
				repeat_events: 1;
				description { state: "default" 0.0;
					color: 255 255 255 0;
				}
				description { state: "clicked" 0.0;
					inherit:  "default" 0.0;
					visible: 1;
					color: 255 255 255 0;
				}
			}
			part { name: "disabler";
				type: RECT;
				description { state: "default" 0.0;
					color: 0 0 0 0;
					visible: 0;
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
			}
		}
		programs {
			program { name: "button_click";
				signal: "mouse,down,1";
				source: "over1";
				action: SIGNAL_EMIT "elm,action,press" "";
				after: "button_click_anim";
			}
			program { name: "button_click_anim";
				action: STATE_SET "clicked" 0.0;
				target: "button_image";
			}
			program { name: "button_unclick";
				signal: "mouse,up,1";
				source: "over2";
				action: SIGNAL_EMIT "elm,action,unpress" "";
				after: "button_unclick_anim";
			}
			program { name: "button_unclick_anim";
				action: STATE_SET "default" 0.0;
				target: "button_image";
				after: "button_mouseout_clicked";
			}	 
			program { name: "button_mouseout_clicked";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"button_image", st, 30, vl);
					if (!strcmp(st, "clicked"))
						set_state(PART:"button_image", "default", 0.0);
				}
			}
			program { name: "button_click2";
				signal: "mouse,down,1";
				source: "over2";
				action: STATE_SET "clicked" 0.0;
				target: "over2";
			}
			program { name: "button_unclick2";
				signal: "mouse,clicked,1";
				source: "over1";
				action: STATE_SET "default" 0.0;
				target: "over1";
				after: "button_unclick3";
			}
			program { name: "button_unclick3";
				action: SIGNAL_EMIT "elm,action,click" "";
			}
			program { name: "disable";
				signal: "elm,state,disabled";
				source: "elm";
				action: STATE_SET "disabled" 0.0;
				target: "disabler";
				target: "button_image";
			}
			program { name: "enable";
				signal: "elm,state,enabled";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "disabler";
				target: "button_image";
			}
		}
	}	


///////////////////////////////////////////////////////////////////////////////////////
	group { name: "elm/button/base/reveal";
		images {
			image: "00_button_reveal.png" COMP;
			image: "00_button_reveal_press.png" COMP;
			image: "00_button_reveal_dim.png" COMP;
		}
		parts {
			part { name: "button_image";
				mouse_events: 1;
				scale: 1;
				description { state: "default" 0.0;
					min: 40 40;
					max: 40 40;
					image {
						normal: "00_button_reveal.png";
					}
				}
				description {
					state: "clicked" 0.0;
					inherit: "default" 0.0;
					image.normal: "00_button_reveal_press.png";
				}
				description {
					state: "disabled" 0.0;
					inherit: "default" 0.0;
					image.normal: "00_button_reveal_dim.png";
				}
			}
			part { name: "over1";
				type: RECT;
				mouse_events: 1;
				repeat_events: 1;
				ignore_flags: ON_HOLD;
				description { state: "default" 0.0;
					color: 0 0 0 0;
				}
			}
			part { name: "over2";
				mouse_events: 1;
				repeat_events: 1;
				description { state: "default" 0.0;
					color: 255 255 255 0;
				}
				description { state: "clicked" 0.0;
					inherit:  "default" 0.0;
					visible: 1;
					color: 255 255 255 0;
				}
			}
			part { name: "disabler";
				type: RECT;
				description { state: "default" 0.0;
					color: 0 0 0 0;
					visible: 0;
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
			}
		}
		programs {
			program { name: "button_click";
				signal: "mouse,down,1";
				source: "over1";
				action: SIGNAL_EMIT "elm,action,press" "";
				after: "button_click_anim";
			}
			program { name: "button_click_anim";
				action: STATE_SET "clicked" 0.0;
				target: "button_image";
			}
			program { name: "button_unclick";
				signal: "mouse,up,1";
				source: "over2";
				action: SIGNAL_EMIT "elm,action,unpress" "";
				after: "button_unclick_anim";
			}
			program { name: "button_unclick_anim";
				action: STATE_SET "default" 0.0;
				target: "button_image";
				after: "button_mouseout_clicked";
			}	 
			program { name: "button_mouseout_clicked";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"button_image", st, 30, vl);
					if (!strcmp(st, "clicked"))
						set_state(PART:"button_image", "default", 0.0);
				}
			}
			program { name: "button_click2";
				signal: "mouse,down,1";
				source: "over2";
				action: STATE_SET "clicked" 0.0;
				target: "over2";
			}
			program { name: "button_unclick2";
				signal: "mouse,clicked,1";
				source: "over1";
				action: STATE_SET "default" 0.0;
				target: "over1";
				after: "button_unclick3";
			}
			program { name: "button_unclick3";
				action: SIGNAL_EMIT "elm,action,click" "";
			}
			program { name: "disable";
				signal: "elm,state,disabled";
				source: "elm";
				action: STATE_SET "disabled" 0.0;
				target: "disabler";
				target: "button_image";
			}
			program { name: "enable";
				signal: "elm,state,enabled";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "disabler";
				target: "button_image";
			}
		}
	}

	group { name: "elm/button/base/reveal/extended";
		images {
			image: "00_button_reveal.png" COMP;
			image: "00_button_reveal_press.png" COMP;
			image: "00_button_reveal_dim.png" COMP;
		}
		parts {		
			part { name: "button_image";
				mouse_events: 1;
				scale: 1;
				description { state: "default" 0.0;
					min: 40 40;
					max: 40 40;
					image {
						normal: "00_button_reveal.png";
					}
				}
				description {
					state: "clicked" 0.0;
					inherit: "default" 0.0;
					image.normal: "00_button_reveal_press.png";
				}
				description {
					state: "disabled" 0.0;
					inherit: "default" 0.0;
					image.normal: "00_button_reveal_dim.png";
				}
			}
			part { name: "over1";
				type: RECT;
				mouse_events: 1;
				repeat_events: 1;
				ignore_flags: ON_HOLD;
				description { state: "default" 0.0;
					min: 60 75;
					max: 60 75;				
					color: 0 0 0 0;
				}
			}
			part { name: "over2";
				mouse_events: 1;
				repeat_events: 1;
				description { state: "default" 0.0;
					color: 255 255 255 0;
				}
				description { state: "clicked" 0.0;
					inherit:  "default" 0.0;
					visible: 1;
					color: 255 255 255 0;
				}
			}
			part { name: "disabler";
				type: RECT;
				description { state: "default" 0.0;
					color: 0 0 0 0;
					visible: 0;
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
			}
		}
		programs {
			program { name: "button_click";
				signal: "mouse,down,1";
				source: "over1";
				action: SIGNAL_EMIT "elm,action,press" "";
				after: "button_click_anim";
			}
			program { name: "button_click_anim";
				action: STATE_SET "clicked" 0.0;
				target: "button_image";
			}
			program { name: "button_unclick";
				signal: "mouse,up,1";
				source: "over2";
				action: SIGNAL_EMIT "elm,action,unpress" "";
				after: "button_unclick_anim";
			}
			program { name: "button_unclick_anim";
				action: STATE_SET "default" 0.0;
				target: "button_image";
				after: "button_mouseout_clicked";
			}	 
			program { name: "button_mouseout_clicked";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"button_image", st, 30, vl);
					if (!strcmp(st, "clicked"))
						set_state(PART:"button_image", "default", 0.0);
				}
			}
			program { name: "button_click2";
				signal: "mouse,down,1";
				source: "over2";
				action: STATE_SET "clicked" 0.0;
				target: "over2";
			}
			program { name: "button_unclick2";
				signal: "mouse,clicked,1";
				source: "over1";
				action: STATE_SET "default" 0.0;
				target: "over1";
				after: "button_unclick3";
			}
			program { name: "button_unclick3";
				action: SIGNAL_EMIT "elm,action,click" "";
			}
			program { name: "disable";
				signal: "elm,state,disabled";
				source: "elm";
				action: STATE_SET "disabled" 0.0;
				target: "disabler";
				target: "button_image";
			}
			program { name: "enable";
				signal: "elm,state,enabled";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "disabler";
				target: "button_image";
			}
		}
	}
	
   group { name: "elm/button/base/call/extended";
      images {
         image: "00_button_call.png" COMP;
         image: "00_button_call_press.png" COMP;
         image: "00_button_call_dim.png" COMP;
      }
      parts {     
         part { name: "button_image";
            mouse_events: 1;
            scale: 1;
            description { state: "default" 0.0;
               min: 40 40;
               max: 40 40;
               image {
                  normal: "00_button_call.png";
               }
            }
            description {
               state: "clicked" 0.0;
               inherit: "default" 0.0;
               image.normal: "00_button_call_press.png";
            }
            description {
               state: "disabled" 0.0;
               inherit: "default" 0.0;
               image.normal: "00_button_call_dim.png";
            }
         }
         part { name: "over1";
            type: RECT;
            mouse_events: 1;
            repeat_events: 1;
            ignore_flags: ON_HOLD;
            description { state: "default" 0.0;
               min: 60 75;
               max: 60 75;          
               color: 0 0 0 0;
            }
         }
         part { name: "over2";
            mouse_events: 1;
            repeat_events: 1;
            description { state: "default" 0.0;
               color: 255 255 255 0;
            }
            description { state: "clicked" 0.0;
               inherit:  "default" 0.0;
               visible: 1;
               color: 255 255 255 0;
            }
         }
         part { name: "disabler";
            type: RECT;
            description { state: "default" 0.0;
               color: 0 0 0 0;
               visible: 0;
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
      }
      programs {
         program { name: "button_click";
            signal: "mouse,down,1";
            source: "over1";
            action: SIGNAL_EMIT "elm,action,press" "";
            after: "button_click_anim";
         }
         program { name: "button_click_anim";
            action: STATE_SET "clicked" 0.0;
            target: "button_image";
         }
         program { name: "button_unclick";
            signal: "mouse,up,1";
            source: "over2";
            action: SIGNAL_EMIT "elm,action,unpress" "";
            after: "button_unclick_anim";
         }
         program { name: "button_unclick_anim";
            action: STATE_SET "default" 0.0;
            target: "button_image";
            after: "button_mouseout_clicked";
         }   
         program { name: "button_mouseout_clicked";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"button_image", st, 30, vl);
               if (!strcmp(st, "clicked"))
                  set_state(PART:"button_image", "default", 0.0);
            }
         }
         program { name: "button_click2";
            signal: "mouse,down,1";
            source: "over2";
            action: STATE_SET "clicked" 0.0;
            target: "over2";
         }
         program { name: "button_unclick2";
            signal: "mouse,clicked,1";
            source: "over1";
            action: STATE_SET "default" 0.0;
            target: "over1";
            after: "button_unclick3";
         }
         program { name: "button_unclick3";
            action: SIGNAL_EMIT "elm,action,click" "";
         }
         program { name: "disable";
            signal: "elm,state,disabled";
            source: "elm";
            action: STATE_SET "disabled" 0.0;
            target: "disabler";
            target: "button_image";
         }
         program { name: "enable";
            signal: "elm,state,enabled";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "disabler";
            target: "button_image";
         }
      }
   }

///////////////////////////////////////////////////////////////////////////////////////
	group { name: "elm/button/base/add";
		images {
			image: "00_button_add.png" COMP;
			image: "00_button_add_press.png" COMP;
			image: "00_button_add_dim.png" COMP;
		}
		parts {
			part { name: "button_image";
				mouse_events: 1;
				scale: 1;
				description { state: "default" 0.0;
					min: 40 40;
					max: 40 40;
					image {
						normal: "00_button_add.png";
					}
				}
				description {
					state: "clicked" 0.0;
					inherit: "default" 0.0;
					image.normal: "00_button_add_press.png";
				}
				description {
					state: "disabled" 0.0;
					inherit: "default" 0.0;
					image.normal: "00_button_add_dim.png";
				}
			}
			part { name: "over1";
				type: RECT;
				mouse_events: 1;
				repeat_events: 1;
				ignore_flags: ON_HOLD;
				description { state: "default" 0.0;
					color: 0 0 0 0;
				}
			}
			part { name: "over2";
				mouse_events: 1;
				repeat_events: 1;
				description { state: "default" 0.0;
					color: 255 255 255 0;
				}
				description { state: "clicked" 0.0;
					inherit:  "default" 0.0;
					visible: 1;
					color: 255 255 255 0;
				}
			}
			part { name: "disabler";
				type: RECT;
				description { state: "default" 0.0;
					color: 0 0 0 0;
					visible: 0;
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
			}
		}
		programs {
			program { name: "button_click";
				signal: "mouse,down,1";
				source: "over1";
				action: SIGNAL_EMIT "elm,action,press" "";
				after: "button_click_anim";
			}
			program { name: "button_click_anim";
				action: STATE_SET "clicked" 0.0;
				target: "button_image";
			}
			program { name: "button_unclick";
				signal: "mouse,up,1";
				source: "over2";
				action: SIGNAL_EMIT "elm,action,unpress" "";
				after: "button_unclick_anim";
			}
			program { name: "button_unclick_anim";
				action: STATE_SET "default" 0.0;
				target: "button_image";
				after: "button_mouseout_clicked";
			}	 
			program { name: "button_mouseout_clicked";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"button_image", st, 30, vl);
					if (!strcmp(st, "clicked"))
						set_state(PART:"button_image", "default", 0.0);
				}
			}
			program { name: "button_click2";
				signal: "mouse,down,1";
				source: "over2";
				action: STATE_SET "clicked" 0.0;
				target: "over2";
			}
			program { name: "button_unclick2";
				signal: "mouse,clicked,1";
				source: "over1";
				action: STATE_SET "default" 0.0;
				target: "over1";
				after: "button_unclick3";
			}
			program { name: "button_unclick3";
				action: SIGNAL_EMIT "elm,action,click" "";
			}
			program { name: "disable";
				signal: "elm,state,disabled";
				source: "elm";
				action: STATE_SET "disabled" 0.0;
				target: "disabler";
				target: "button_image";
			}
			program { name: "enable";
				signal: "elm,state,enabled";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "disabler";
				target: "button_image";
			}
		}
	}

	group { name: "elm/button/base/add/extended";
		images {
			image: "00_button_add.png" COMP;
			image: "00_button_add_press.png" COMP;
			image: "00_button_add_dim.png" COMP;
		}
		parts {
			part { name: "button_image";
				mouse_events: 1;
				scale: 1;
				description { state: "default" 0.0;
					min: 40 40;
					max: 40 40;
					image {
						normal: "00_button_add.png";
					}
				}
				description {
					state: "clicked" 0.0;
					inherit: "default" 0.0;
					image.normal: "00_button_add_press.png";
				}
				description {
					state: "disabled" 0.0;
					inherit: "default" 0.0;
					image.normal: "00_button_add_dim.png";
				}
			}
			part { name: "over1";
				type: RECT;
				mouse_events: 1;
				repeat_events: 1;
				ignore_flags: ON_HOLD;
				description { state: "default" 0.0;
					min: 60 75;
					max: 60 75;				
					color: 0 0 0 0;
				}
			}
			part { name: "over2";
				mouse_events: 1;
				repeat_events: 1;
				description { state: "default" 0.0;
					color: 255 255 255 0;
				}
				description { state: "clicked" 0.0;
					inherit:  "default" 0.0;
					visible: 1;
					color: 255 255 255 0;
				}
			}
			part { name: "disabler";
				type: RECT;
				description { state: "default" 0.0;
					color: 0 0 0 0;
					visible: 0;
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
			}
		}
		programs {
			program { name: "button_click";
				signal: "mouse,down,1";
				source: "over1";
				action: SIGNAL_EMIT "elm,action,press" "";
				after: "button_click_anim";
			}
			program { name: "button_click_anim";
				action: STATE_SET "clicked" 0.0;
				target: "button_image";
			}
			program { name: "button_unclick";
				signal: "mouse,up,1";
				source: "over2";
				action: SIGNAL_EMIT "elm,action,unpress" "";
				after: "button_unclick_anim";
			}
			program { name: "button_unclick_anim";
				action: STATE_SET "default" 0.0;
				target: "button_image";
				after: "button_mouseout_clicked";
			}	 
			program { name: "button_mouseout_clicked";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"button_image", st, 30, vl);
					if (!strcmp(st, "clicked"))
						set_state(PART:"button_image", "default", 0.0);
				}
			}
			program { name: "button_click2";
				signal: "mouse,down,1";
				source: "over2";
				action: STATE_SET "clicked" 0.0;
				target: "over2";
			}
			program { name: "button_unclick2";
				signal: "mouse,clicked,1";
				source: "over1";
				action: STATE_SET "default" 0.0;
				target: "over1";
				after: "button_unclick3";
			}
			program { name: "button_unclick3";
				action: SIGNAL_EMIT "elm,action,click" "";
			}
			program { name: "disable";
				signal: "elm,state,disabled";
				source: "elm";
				action: STATE_SET "disabled" 0.0;
				target: "disabler";
				target: "button_image";
			}
			program { name: "enable";
				signal: "elm,state,enabled";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "disabler";
				target: "button_image";
			}
		}
	}	
///////////////////////////////////////////////////////////////////////////////////////
	group { name: "elm/button/base/rename";
		images {
			image: "00_button_rename.png" COMP;
			image: "00_button_rename_press.png" COMP;
			image: "00_button_rename_dim.png" COMP;
		}
		parts {
			part { name: "button_image";
				mouse_events: 1;
				scale: 1;
				description { state: "default" 0.0;
					min: 40 40;
					max: 40 40;
					image {
						normal: "00_button_rename.png";
					}
				}
				description {
					state: "clicked" 0.0;
					inherit: "default" 0.0;
					image.normal: "00_button_rename_press.png";
				}
				description {
					state: "disabled" 0.0;
					inherit: "default" 0.0;
					image.normal: "00_button_rename_dim.png";
				}
			}
			part { name: "over1";
				type: RECT;
				mouse_events: 1;
				repeat_events: 1;
				ignore_flags: ON_HOLD;
				description { state: "default" 0.0;
					color: 0 0 0 0;
				}
			}
			part { name: "over2";
				mouse_events: 1;
				repeat_events: 1;
				description { state: "default" 0.0;
					color: 255 255 255 0;
				}
				description { state: "clicked" 0.0;
					inherit:  "default" 0.0;
					visible: 1;
					color: 255 255 255 0;
				}
			}
			part { name: "disabler";
				type: RECT;
				description { state: "default" 0.0;
					color: 0 0 0 0;
					visible: 0;
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
			}
		}
		programs {
			program { name: "button_click";
				signal: "mouse,down,1";
				source: "over1";
				action: SIGNAL_EMIT "elm,action,press" "";
				after: "button_click_anim";
			}
			program { name: "button_click_anim";
				action: STATE_SET "clicked" 0.0;
				target: "button_image";
			}
			program { name: "button_unclick";
				signal: "mouse,up,1";
				source: "over2";
				action: SIGNAL_EMIT "elm,action,unpress" "";
				after: "button_unclick_anim";
			}
			program { name: "button_unclick_anim";
				action: STATE_SET "default" 0.0;
				target: "button_image";
				after: "button_mouseout_clicked";
			}	 
			program { name: "button_mouseout_clicked";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"button_image", st, 30, vl);
					if (!strcmp(st, "clicked"))
						set_state(PART:"button_image", "default", 0.0);
				}
			}
			program { name: "button_click2";
				signal: "mouse,down,1";
				source: "over2";
				action: STATE_SET "clicked" 0.0;
				target: "over2";
			}
			program { name: "button_unclick2";
				signal: "mouse,clicked,1";
				source: "over1";
				action: STATE_SET "default" 0.0;
				target: "over1";
				after: "button_unclick3";
			}
			program { name: "button_unclick3";
				action: SIGNAL_EMIT "elm,action,click" "";
			}
			program { name: "disable";
				signal: "elm,state,disabled";
				source: "elm";
				action: STATE_SET "disabled" 0.0;
				target: "disabler";
				target: "button_image";
			}
			program { name: "enable";
				signal: "elm,state,enabled";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "disabler";
				target: "button_image";
			}
		}
	}

	group { name: "elm/button/base/rename/extended";
		images {
			image: "00_button_rename.png" COMP;
			image: "00_button_rename_press.png" COMP;
			image: "00_button_rename_dim.png" COMP;
		}
		parts {
			part { name: "button_image";
				mouse_events: 1;
				scale: 1;
				description { state: "default" 0.0;
					min: 40 40;
					max: 40 40;
					image {
						normal: "00_button_rename.png";
					}
				}
				description {
					state: "clicked" 0.0;
					inherit: "default" 0.0;
					image.normal: "00_button_rename_press.png";
				}
				description {
					state: "disabled" 0.0;
					inherit: "default" 0.0;
					image.normal: "00_button_rename_dim.png";
				}
			}
			part { name: "over1";
				type: RECT;
				mouse_events: 1;
				repeat_events: 1;
				ignore_flags: ON_HOLD;
				description { state: "default" 0.0;
					min: 60 75;
					max: 60 75;				
					color: 0 0 0 0;
				}
			}
			part { name: "over2";
				mouse_events: 1;
				repeat_events: 1;
				description { state: "default" 0.0;
					color: 255 255 255 0;
				}
				description { state: "clicked" 0.0;
					inherit:  "default" 0.0;
					visible: 1;
					color: 255 255 255 0;
				}
			}
			part { name: "disabler";
				type: RECT;
				description { state: "default" 0.0;
					color: 0 0 0 0;
					visible: 0;
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
			}
		}
		programs {
			program { name: "button_click";
				signal: "mouse,down,1";
				source: "over1";
				action: SIGNAL_EMIT "elm,action,press" "";
				after: "button_click_anim";
			}
			program { name: "button_click_anim";
				action: STATE_SET "clicked" 0.0;
				target: "button_image";
			}
			program { name: "button_unclick";
				signal: "mouse,up,1";
				source: "over2";
				action: SIGNAL_EMIT "elm,action,unpress" "";
				after: "button_unclick_anim";
			}
			program { name: "button_unclick_anim";
				action: STATE_SET "default" 0.0;
				target: "button_image";
				after: "button_mouseout_clicked";
			}	 
			program { name: "button_mouseout_clicked";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"button_image", st, 30, vl);
					if (!strcmp(st, "clicked"))
						set_state(PART:"button_image", "default", 0.0);
				}
			}
			program { name: "button_click2";
				signal: "mouse,down,1";
				source: "over2";
				action: STATE_SET "clicked" 0.0;
				target: "over2";
			}
			program { name: "button_unclick2";
				signal: "mouse,clicked,1";
				source: "over1";
				action: STATE_SET "default" 0.0;
				target: "over1";
				after: "button_unclick3";
			}
			program { name: "button_unclick3";
				action: SIGNAL_EMIT "elm,action,click" "";
			}
			program { name: "disable";
				signal: "elm,state,disabled";
				source: "elm";
				action: STATE_SET "disabled" 0.0;
				target: "disabler";
				target: "button_image";
			}
			program { name: "enable";
				signal: "elm,state,enabled";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "disabler";
				target: "button_image";
			}
		}
	}		
///////////////////////////////////////////////////////////////////////////////////////
	group { name: "elm/button/base/warning";
		images {
			image: "00_button_warning.png" COMP;
			image: "00_button_warning_press.png" COMP;
			image: "00_button_warning_dim.png" COMP;
		}
		parts {
			part { name: "button_image";
				mouse_events: 1;
				scale: 1;
				description { state: "default" 0.0;
					min: 40 40;
					max: 40 40;
					image {
						normal: "00_button_warning.png";
					}
				}
				description {
					state: "clicked" 0.0;
					inherit: "default" 0.0;
					image.normal: "00_button_warning_press.png";
				}
				description {
					state: "disabled" 0.0;
					inherit: "default" 0.0;
					image.normal: "00_button_warning_dim.png";
				}
			}
			part { name: "over1";
				type: RECT;
				mouse_events: 1;
				repeat_events: 1;
				ignore_flags: ON_HOLD;
				description { state: "default" 0.0;
					color: 0 0 0 0;
				}
			}
			part { name: "over2";
				mouse_events: 1;
				repeat_events: 1;
				description { state: "default" 0.0;
					color: 255 255 255 0;
				}
				description { state: "clicked" 0.0;
					inherit:  "default" 0.0;
					visible: 1;
					color: 255 255 255 0;
				}
			}
			part { name: "disabler";
				type: RECT;
				description { state: "default" 0.0;
					color: 0 0 0 0;
					visible: 0;
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
			}
		}
		programs {
			program { name: "button_click";
				signal: "mouse,down,1";
				source: "over1";
				action: SIGNAL_EMIT "elm,action,press" "";
				after: "button_click_anim";
			}
			program { name: "button_click_anim";
				action: STATE_SET "clicked" 0.0;
				target: "button_image";
			}
			program { name: "button_unclick";
				signal: "mouse,up,1";
				source: "over2";
				action: SIGNAL_EMIT "elm,action,unpress" "";
				after: "button_unclick_anim";
			}
			program { name: "button_unclick_anim";
				action: STATE_SET "default" 0.0;
				target: "button_image";
				after: "button_mouseout_clicked";
			}	 
			program { name: "button_mouseout_clicked";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"button_image", st, 30, vl);
					if (!strcmp(st, "clicked"))
						set_state(PART:"button_image", "default", 0.0);
				}
			}
			program { name: "button_click2";
				signal: "mouse,down,1";
				source: "over2";
				action: STATE_SET "clicked" 0.0;
				target: "over2";
			}
			program { name: "button_unclick2";
				signal: "mouse,clicked,1";
				source: "over1";
				action: STATE_SET "default" 0.0;
				target: "over1";
				after: "button_unclick3";
			}
			program { name: "button_unclick3";
				action: SIGNAL_EMIT "elm,action,click" "";
			}
			program { name: "disable";
				signal: "elm,state,disabled";
				source: "elm";
				action: STATE_SET "disabled" 0.0;
				target: "disabler";
				target: "button_image";
			}
			program { name: "enable";
				signal: "elm,state,enabled";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "disabler";
				target: "button_image";
			}
		}
	}

	group { name: "elm/button/base/warning/extended";
		images {
			image: "00_button_warning.png" COMP;
			image: "00_button_warning_press.png" COMP;
			image: "00_button_warning_dim.png" COMP;
		}
		parts {
			part { name: "button_image";
				mouse_events: 1;
				scale: 1;
				description { state: "default" 0.0;
					min: 40 40;
					max: 40 40;
					image {
						normal: "00_button_warning.png";
					}
				}
				description {
					state: "clicked" 0.0;
					inherit: "default" 0.0;
					image.normal: "00_button_warning_press.png";
				}
				description {
					state: "disabled" 0.0;
					inherit: "default" 0.0;
					image.normal: "00_button_warning_dim.png";
				}
			}
			part { name: "over1";
				type: RECT;
				mouse_events: 1;
				repeat_events: 1;
				ignore_flags: ON_HOLD;
				description { state: "default" 0.0;
					min: 60 75;
					max: 60 75;				
					color: 0 0 0 0;
				}
			}
			part { name: "over2";
				mouse_events: 1;
				repeat_events: 1;
				description { state: "default" 0.0;
					color: 255 255 255 0;
				}
				description { state: "clicked" 0.0;
					inherit:  "default" 0.0;
					visible: 1;
					color: 255 255 255 0;
				}
			}
			part { name: "disabler";
				type: RECT;
				description { state: "default" 0.0;
					color: 0 0 0 0;
					visible: 0;
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
			}
		}
		programs {
			program { name: "button_click";
				signal: "mouse,down,1";
				source: "over1";
				action: SIGNAL_EMIT "elm,action,press" "";
				after: "button_click_anim";
			}
			program { name: "button_click_anim";
				action: STATE_SET "clicked" 0.0;
				target: "button_image";
			}
			program { name: "button_unclick";
				signal: "mouse,up,1";
				source: "over2";
				action: SIGNAL_EMIT "elm,action,unpress" "";
				after: "button_unclick_anim";
			}
			program { name: "button_unclick_anim";
				action: STATE_SET "default" 0.0;
				target: "button_image";
				after: "button_mouseout_clicked";
			}	 
			program { name: "button_mouseout_clicked";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"button_image", st, 30, vl);
					if (!strcmp(st, "clicked"))
						set_state(PART:"button_image", "default", 0.0);
				}
			}
			program { name: "button_click2";
				signal: "mouse,down,1";
				source: "over2";
				action: STATE_SET "clicked" 0.0;
				target: "over2";
			}
			program { name: "button_unclick2";
				signal: "mouse,clicked,1";
				source: "over1";
				action: STATE_SET "default" 0.0;
				target: "over1";
				after: "button_unclick3";
			}
			program { name: "button_unclick3";
				action: SIGNAL_EMIT "elm,action,click" "";
			}
			program { name: "disable";
				signal: "elm,state,disabled";
				source: "elm";
				action: STATE_SET "disabled" 0.0;
				target: "disabler";
				target: "button_image";
			}
			program { name: "enable";
				signal: "elm,state,enabled";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "disabler";
				target: "button_image";
			}
		}
	}	
///////////////////////////////////////////////////////////////////////////////////////
	group { name: "elm/button/base/info";
		images {
			image: "00_button_info.png" COMP;
			image: "00_button_info_press.png" COMP;
			image: "00_button_info_dim.png" COMP;
		}
		parts {
			part { name: "button_image";
				mouse_events: 1;
				scale: 1;
				description { state: "default" 0.0;
					min: 40 40;
					max: 40 40;
					image {
						normal: "00_button_info.png";
					}
				}
				description {
					state: "clicked" 0.0;
					inherit: "default" 0.0;
					image.normal: "00_button_info_press.png";
				}
				description {
					state: "disabled" 0.0;
					inherit: "default" 0.0;
					image.normal: "00_button_info_dim.png";
				}
			}
			part { name: "over1";
				type: RECT;
				mouse_events: 1;
				repeat_events: 1;
				ignore_flags: ON_HOLD;
				description { state: "default" 0.0;
					color: 0 0 0 0;
				}
			}
			part { name: "over2";
				mouse_events: 1;
				repeat_events: 1;
				description { state: "default" 0.0;
					color: 255 255 255 0;
				}
				description { state: "clicked" 0.0;
					inherit:  "default" 0.0;
					visible: 1;
					color: 255 255 255 0;
				}
			}
			part { name: "disabler";
				type: RECT;
				description { state: "default" 0.0;
					color: 0 0 0 0;
					visible: 0;
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
			}
		}
		programs {
			program { name: "button_click";
				signal: "mouse,down,1";
				source: "over1";
				action: SIGNAL_EMIT "elm,action,press" "";
				after: "button_click_anim";
			}
			program { name: "button_click_anim";
				action: STATE_SET "clicked" 0.0;
				target: "button_image";
			}
			program { name: "button_unclick";
				signal: "mouse,up,1";
				source: "over2";
				action: SIGNAL_EMIT "elm,action,unpress" "";
				after: "button_unclick_anim";
			}
			program { name: "button_unclick_anim";
				action: STATE_SET "default" 0.0;
				target: "button_image";
				after: "button_mouseout_clicked";
			}	 
			program { name: "button_mouseout_clicked";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"button_image", st, 30, vl);
					if (!strcmp(st, "clicked"))
						set_state(PART:"button_image", "default", 0.0);
				}
			}
			program { name: "button_click2";
				signal: "mouse,down,1";
				source: "over2";
				action: STATE_SET "clicked" 0.0;
				target: "over2";
			}
			program { name: "button_unclick2";
				signal: "mouse,clicked,1";
				source: "over1";
				action: STATE_SET "default" 0.0;
				target: "over1";
				after: "button_unclick3";
			}
			program { name: "button_unclick3";
				action: SIGNAL_EMIT "elm,action,click" "";
			}
			program { name: "disable";
				signal: "elm,state,disabled";
				source: "elm";
				action: STATE_SET "disabled" 0.0;
				target: "disabler";
				target: "button_image";
			}
			program { name: "enable";
				signal: "elm,state,enabled";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "disabler";
				target: "button_image";
			}
		}
	}

	group { name: "elm/button/base/info/extended";
		images {
			image: "00_button_info.png" COMP;
			image: "00_button_info_press.png" COMP;
			image: "00_button_info_dim.png" COMP;
		}
		parts {
			part { name: "button_image";
				mouse_events: 1;
				scale: 1;
				description { state: "default" 0.0;
					min: 40 40;
					max: 40 40;
					image {
						normal: "00_button_info.png";
					}
				}
				description {
					state: "clicked" 0.0;
					inherit: "default" 0.0;
					image.normal: "00_button_info_press.png";
				}
				description {
					state: "disabled" 0.0;
					inherit: "default" 0.0;
					image.normal: "00_button_info_dim.png";
				}
			}
			part { name: "over1";
				type: RECT;
				mouse_events: 1;
				repeat_events: 1;
				ignore_flags: ON_HOLD;
				description { state: "default" 0.0;
					min: 60 75;
					max: 60 75;				
					color: 0 0 0 0;
				}
			}
			part { name: "over2";
				mouse_events: 1;
				repeat_events: 1;
				description { state: "default" 0.0;
					color: 255 255 255 0;
				}
				description { state: "clicked" 0.0;
					inherit:  "default" 0.0;
					visible: 1;
					color: 255 255 255 0;
				}
			}
			part { name: "disabler";
				type: RECT;
				description { state: "default" 0.0;
					color: 0 0 0 0;
					visible: 0;
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
			}
		}
		programs {
			program { name: "button_click";
				signal: "mouse,down,1";
				source: "over1";
				action: SIGNAL_EMIT "elm,action,press" "";
				after: "button_click_anim";
			}
			program { name: "button_click_anim";
				action: STATE_SET "clicked" 0.0;
				target: "button_image";
			}
			program { name: "button_unclick";
				signal: "mouse,up,1";
				source: "over2";
				action: SIGNAL_EMIT "elm,action,unpress" "";
				after: "button_unclick_anim";
			}
			program { name: "button_unclick_anim";
				action: STATE_SET "default" 0.0;
				target: "button_image";
				after: "button_mouseout_clicked";
			}	 
			program { name: "button_mouseout_clicked";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"button_image", st, 30, vl);
					if (!strcmp(st, "clicked"))
						set_state(PART:"button_image", "default", 0.0);
				}
			}
			program { name: "button_click2";
				signal: "mouse,down,1";
				source: "over2";
				action: STATE_SET "clicked" 0.0;
				target: "over2";
			}
			program { name: "button_unclick2";
				signal: "mouse,clicked,1";
				source: "over1";
				action: STATE_SET "default" 0.0;
				target: "over1";
				after: "button_unclick3";
			}
			program { name: "button_unclick3";
				action: SIGNAL_EMIT "elm,action,click" "";
			}
			program { name: "disable";
				signal: "elm,state,disabled";
				source: "elm";
				action: STATE_SET "disabled" 0.0;
				target: "disabler";
				target: "button_image";
			}
			program { name: "enable";
				signal: "elm,state,enabled";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "disabler";
				target: "button_image";
			}
		}
	}
	
///////////////////////////////////////////////////////////////////////////////////////
   group { name: "elm/button/base/call";
      images {
         image: "00_button_call.png" COMP;
         image: "00_button_call_press.png" COMP;
         image: "00_button_call_dim.png" COMP;
      }
      parts {
         part { name: "button_image";
            mouse_events: 1;
            scale: 1;
            description { state: "default" 0.0;
               min: 40 40;
               max: 40 40;
               image {
                  normal: "00_button_call.png";
               }
            }
            description {
               state: "clicked" 0.0;
               inherit: "default" 0.0;
               image.normal: "00_button_call_press.png";
            }
            description {
               state: "disabled" 0.0;
               inherit: "default" 0.0;
               image.normal: "00_button_call_dim.png";
            }
         }
         part { name: "over1";
            type: RECT;
            mouse_events: 1;
            repeat_events: 1;
            ignore_flags: ON_HOLD;
            description { state: "default" 0.0;
               color: 0 0 0 0;
            }
         }
         part { name: "over2";
            mouse_events: 1;
            repeat_events: 1;
            description { state: "default" 0.0;
               color: 255 255 255 0;
            }
            description { state: "clicked" 0.0;
               inherit:  "default" 0.0;
               visible: 1;
               color: 255 255 255 0;
            }
         }
         part { name: "disabler";
            type: RECT;
            description { state: "default" 0.0;
               color: 0 0 0 0;
               visible: 0;
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
      }
      programs {
         program { name: "button_click";
            signal: "mouse,down,1";
            source: "over1";
            action: SIGNAL_EMIT "elm,action,press" "";
            after: "button_click_anim";
         }
         program { name: "button_click_anim";
            action: STATE_SET "clicked" 0.0;
            target: "button_image";
         }
         program { name: "button_unclick";
            signal: "mouse,up,1";
            source: "over2";
            action: SIGNAL_EMIT "elm,action,unpress" "";
            after: "button_unclick_anim";
         }
         program { name: "button_unclick_anim";
            action: STATE_SET "default" 0.0;
            target: "button_image";
            after: "button_mouseout_clicked";
         }   
         program { name: "button_mouseout_clicked";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"button_image", st, 30, vl);
               if (!strcmp(st, "clicked"))
                  set_state(PART:"button_image", "default", 0.0);
            }
         }
         program { name: "button_click2";
            signal: "mouse,down,1";
            source: "over2";
            action: STATE_SET "clicked" 0.0;
            target: "over2";
         }
         program { name: "button_unclick2";
            signal: "mouse,clicked,1";
            source: "over1";
            action: STATE_SET "default" 0.0;
            target: "over1";
            after: "button_unclick3";
         }
         program { name: "button_unclick3";
            action: SIGNAL_EMIT "elm,action,click" "";
         }
         program { name: "disable";
            signal: "elm,state,disabled";
            source: "elm";
            action: STATE_SET "disabled" 0.0;
            target: "disabler";
            target: "button_image";
         }
         program { name: "enable";
            signal: "elm,state,enabled";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "disabler";
            target: "button_image";
         }
      }
   }

///////////////////////////////////////////////////////////////////////////////////////
	group { name: "elm/button/base/text_only/multiline";
		alias: "elm/button/base/navigationbar_functionbutton/multiline_title_subtitle";
		images {
			image: "00_button_02_normal.png" COMP;
			image: "00_button_02_press.png" COMP;
			image: "00_button_02_focus.png" COMP;
			image: "00_button_02_dim.png" COMP;
		}
		script {
			public button_state = 0; //0:enabled, 1: disabled
		}
		styles{
			style { name: "btn_back_navi_style";
				base: "font=SLP:style=Medium font_size=18 align=center color=#ffffff wrap=char";
				tag:  "br" "\n";
				tag:  "ps" "ps";
				tag:  "hilight" "+ font=SLP:style=Bold";
				tag:  "b" "+ font=SLP:style=Bold";
				tag:  "tab" "\t";
			}
		}
		parts {
			part { name: "button_image";
				mouse_events: 1;
				scale: 1;
				description { state: "default" 0.0;
					min: 16 50;
					image {
						normal: "00_button_02_normal.png";
						border: 7 7 7 7;
						border_scale: 1;
					}
				}
				description { state: "clicked" 0.0;
					inherit: "default" 0.0;
					image.normal: "00_button_02_press.png";
				}
				description { state: "disabled" 0.0;
					inherit:  "default" 0.0;
				}
				description { state: "focused" 0.0;
					inherit: "default" 0.0;
					image.normal: "00_button_02_focus.png";
				}
			}
			part {
				name: "padding_left";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					align: 0.0 0.0;
					rel1.relative: 0.0 0.0;
					rel2.relative: 0.0 1.0;
					min: 5 5;
					fixed: 1 0;
					color: 0 0 0 0;
				}
			}
			part {
				name: "padding_right";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					align: 1.0 0.0;
					rel1.relative: 1.0 0.0;
					rel2.relative: 1.0 1.0;
					min: 5 5;
					fixed: 1 0;
					color: 0 0 0 0;
				}
			}
			part {
				name: "padding_top";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					align: 0.0 0.0;
					rel1.relative: 0.0 0.0;
					rel2.relative: 1.0 0.0;
					min: 5 5;
					fixed: 0 1;
					color: 0 0 0 0;
				}
			}
			part {
				name: "padding_bottom";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					align: 1.0 1.0;
					rel1.relative: 0.0 1.0;
					rel2.relative: 1.0 1.0;
					min: 5 5;
					fixed: 0 1;
					color: 0 0 0 0;
				}
			}
			part {
				name: "icon_rect";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					visible: 1;
					min: 0 40;
					fixed: 1 0;
					rel1 {relative: 0.0 1.0; to_x: "elm.swallow.content"; to_y: "padding_top"; }
					rel2 {relative: 1.0 0.0; to_x: "elm.swallow.content"; to_y: "padding_bottom"; }
					align: 0.0 0.5;
					color: 0 0 0 0;
				}
			} 
			part {
				name: "padding_icon_text";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0; //when only icon or no icon is there
					align: 0.0 0.0;
					rel1 { relative: 1.0 0.0; to: "icon_rect"; }
					rel2 { relative: 1.0 1.0; to: "icon_rect"; } 			
					fixed: 1 0;
					min: 0 0;
					color: 0 0 0 0;
				}
				description { state: "icononly" 0.0;
					inherit: "default" 0.0;
				}
				description { state: "visible" 0.0; //when icon is visible
					align: 0.0 0.0;
					rel1 { relative: 1.0 0.0; to: "icon_rect"; }
					rel2 { relative: 1.0 1.0; to: "icon_rect"; } 			
					fixed: 1 0;
					min: 5 0;
					color: 0 0 0 0;
				}
			}					
			part { name: "elm.swallow.content";
				type: SWALLOW;
				scale: 1;
				description { state: "default" 0.0;
					visible: 0;
					align: 0.0 0.5;
					rel1 {relative: 1.0 1.0; to_x: "padding_left"; to_y: "padding_top"; }
					rel2 {relative: 1.0 0.0; to_x: "padding_left"; to_y: "padding_bottom"; }
					fixed: 1 0;
				}
				description { state: "visible" 0.0;
					fixed: 1 0;
					visible: 1;
					align: 0.0 0.5;
					rel1 {relative: 1.0 1.0; to_x: "padding_left"; to_y: "padding_top"; }
					rel2 {relative: 1.0 0.0; to_x: "padding_left"; to_y: "padding_bottom"; }
					aspect: 1.0 1.0;
					aspect_preference: VERTICAL;
				}
				description { state: "icononly" 0.0;;
					visible: 1;
					min: 40 40;
					rel1 {relative: 1.0 1.0; to_x: "padding_left"; to_y: "padding_top"; }
					rel2 {relative: 0.0 0.0; to_x: "padding_right"; to_y: "padding_bottom"; }
					align: 0.5 0.5;
					aspect: 1.0 1.0;
					aspect_preference: VERTICAL;
				}
			}
			part { name: "elm.text";
				type:          TEXTBLOCK;
				effect:        SHADOW;
				mouse_events:  0;
				scale: 1;
				description { state: "default" 0.0;
					visible: 0;
					rel1 { relative: 1.0 1.0; to_x: "padding_icon_text"; to_y: "padding_top"; }
					rel2 { relative: 0.0 0.0; to_x: "padding_right"; to_y:"padding_bottom"; }
					align: 0.5 0.5;
					color: BUTTON_NAVIBAR_FUNCTION_BUTTON_TEXT_NORMAL_COLOR_INC;
					color2: BUTTON_NAVIBAR_FUNCTION_BUTTON_TEXT_NORMAL_SHADOW_COLOR_INC;
					text {
						style: "btn_back_navi_style";
						min:  0 0;
						max: 0 1;
					}
				}
				description { state: "visible" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					min: 90 40;
				}
				description { state: "clicked" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					min: 0 0;
					color: BUTTON_NAVIBAR_FUNCTION_BUTTON_TEXT_PRESSED_COLOR_INC;
					color2: BUTTON_NAVIBAR_FUNCTION_BUTTON_TEXT_PRESSED_SHADOW_COLOR_INC;
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					color: 0 0 0 128;
					color3: 0 0 0 0;
				}
				description { state: "disabled_visible" 0.0;
					inherit: "default" 0.0;
					color: BUTTON_NAVIBAR_FUNCTION_BUTTON_TEXT_DISABLED_COLOR_INC;
					color2: BUTTON_NAVIBAR_FUNCTION_BUTTON_TEXT_DISABLED_SHADOW_COLOR_INC;
					color3: 0 0 0 0;
					visible: 1;
				}
				description { state: "focused" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					min: 0 0;
					color: BUTTON_NAVIBAR_FUNCTION_BUTTON_TEXT_FOCUSED_COLOR_INC;
					color2: BUTTON_NAVIBAR_FUNCTION_BUTTON_TEXT_FOCUSED_SHADOW_COLOR_INC;
				}
			}
			part { name: "over2";
				type: RECT;
				mouse_events: 1;
				repeat_events: 1;
				ignore_flags: ON_HOLD;
				description { state: "default" 0.0;
					color: 0 0 0 0;
				}
				description { state: "disabled" 0.0;
					inherit:  "default" 0.0;
					visible: 0;
				}
			}
			part { name: "over3";
				type: RECT;
				mouse_events: 1;
				repeat_events: 1;
				description { state: "default" 0.0;
					color: 0 0 0 0;
				}
				description { state: "clicked" 0.0;
					inherit:  "default" 0.0;
					visible: 1;
				}
			}
			part { name: "disabler";
				type: RECT;
				description { state: "default" 0.0;
					color: 0 0 0 0;
					visible: 0;
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
			}
		}
		programs {
			program { name: "button_click";
				signal: "mouse,down,1";
				source: "over2";
				action: SIGNAL_EMIT "elm,action,press" "";
				after: "button_click_anim";
			}
			program { name: "button_click_anim";
				action: STATE_SET "clicked" 0.0;
				target: "button_image";
				after: "text_clicked";
			}
			program { name: "text_clicked";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "visible"))
						set_state(PART:"elm.text", "clicked", 0.0);
				}
			}
			program { name: "button_unpress";
				action: SIGNAL_EMIT "elm,action,unpress" "";
			}
			program { name: "button_mouseout_clicked";
				signal: "mouse,up,1";
				source: "over3";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.swallow.content", st, 30, vl);
					if (strcmp(st, "icononly"))
					{
						emit("elm,action,default,text,set", "");
						set_state(PART:"elm.text", "visible", 0.0);
					}
					if(get_int(button_state) !=1)
						set_state(PART:"button_image", "default", 0.0);
				}
				after: button_unpress;
			}
			program { name: "button_click2";
				signal: "mouse,down,1";
				source: "over3";
				action: STATE_SET "clicked" 0.0;
				target: "over3";
			}
			program { name: "button_unclick2";
				signal: "mouse,clicked,1";
				source: "over3";
				action: STATE_SET "default" 0.0;
				target: "over3";
			}
			program { name: "button_unclick3";
				signal: "mouse,clicked,1";
				source: "over2";
				action: SIGNAL_EMIT "elm,action,click" "";
			}
			program { name: "text_show";
				signal: "elm,state,text,visible";
				source: "elm";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.swallow.content", st, 30, vl);
					if (!strcmp(st, "icononly"))
					{
						set_state(PART:"elm.swallow.content", "visible", 0.0);
						set_state(PART:"padding_icon_text", "visible", 0.0);
					}
					set_state(PART:"elm.text", "visible", 0.0);
				}
			}
			program { name: "text_hide";
				signal: "elm,state,text,hidden";
				source: "elm";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.swallow.content", st, 30, vl);
					if (!strcmp(st, "visible"))
					{
						set_state(PART:"elm.swallow.content", "icononly", 0.0);
						set_state(PART:"padding_icon_text", "icononly", 0.0);
					}
					set_state(PART:"elm.text", "default", 0.0);
				}
			}
			program { name: "icon_show";
				signal: "elm,state,icon,visible";
				source: "elm";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "visible"))
					{
						set_state(PART:"elm.swallow.content", "visible", 0.0);
						set_state(PART:"padding_icon_text", "visible", 0.0);
					}
					else
					{
						set_state(PART:"elm.swallow.content", "icononly", 0.0);
						set_state(PART:"padding_icon_text", "icononly", 0.0);
					}
				}
			}
			program { name: "icon_hide";
				signal: "elm,state,icon,hidden";
				source: "elm";
				action:  STATE_SET "default" 0.0;
				target: "elm.swallow.content";
			}
			program { name: "disable";
				signal: "elm,state,disabled";
				source: "elm";
				action: STATE_SET "disabled" 0.0;
				target: "button_image";
				target: "over2";
				target: "disabler";
				after: "disable_text";
			}
			program { name: "disable_text";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "visible"))
						set_state(PART:"elm.text", "disabled_visible", 0.0);
					else
						set_state(PART:"elm.text", "disabled", 0.0);
					set_int(button_state, 1);
				}
			}
			program { name: "enable";
				signal: "elm,state,enabled";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "button_image";
				target: "over2";
				target: "disabler";
				after: "enable_text";
			}
			program { name: "enable_text";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "disabled_visible"))
						set_state(PART:"elm.text", "visible", 0.0);
					else
						set_state(PART:"elm.text", "default", 0.0);
					set_int(button_state, 0);
				}
			}
			program { name: "focused";
				//signal: "elm,action,focus";
				//source: "elm";
				action: STATE_SET "focused" 0.0;
				target: "button_image";
				target: "elm.text";
			}
			program { name: "unfocused";
				//signal: "elm,action,unfocus";
				//source: "elm";
				action: STATE_SET "default" 0.0;
				target: "button_image";
				after: "unfocus_text";
			}
			program { name: "unfocus_text";
				action: STATE_SET "visible" 0.0;
				target: "elm.text";
			}
		}
	}

///////////////////////////////////////////////////////////////////////////////////////
	group { name: "elm/button/base/icon_only/default";
		images {
			image: "00_button_03_normal.png" COMP;
			image: "00_button_03_press.png" COMP;
			image: "00_button_03_focus.png" COMP;
			image: "00_button_03_dim.png" COMP;
		}
		script {
			public button_state = 0; //0:enabled, 1: disabled
		}
		parts {
			part { name: "button_image";
				mouse_events: 1;
				scale: 1;
				description { state: "default" 0.0;
					min: 50 50;
					max: 50 50;
					image {
						normal: "00_button_03_normal.png";
						border: 7 7 7 7;
						border_scale: 1;
					}
				}
				description { state: "clicked" 0.0;
					inherit: "default" 0.0;
					image.normal: "00_button_03_press.png";
				}
				description { state: "disabled" 0.0;
					inherit:  "default" 0.0;
					image.normal: "00_button_03_dim.png";
				}		
				description { state: "focused" 0.0;
					inherit: "default" 0.0;
					image.normal: "00_button_03_focus.png";
				}
			}
			part {
				name: "padding_left";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					align: 0.0 0.0;
					rel1.relative: 0.0 0.0;
					rel2.relative: 0.0 1.0;
					min: 5 5;
					fixed: 1 0;
					color: 0 0 0 0;
				}
			}
			part {
				name: "padding_right";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					align: 1.0 0.0;
					rel1.relative: 1.0 0.0;
					rel2.relative: 1.0 1.0;
					min: 5 5;
					fixed: 1 0;
					color: 0 0 0 0;
				}
			}
			part {
				name: "padding_top";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					align: 0.0 0.0;
					rel1.relative: 0.0 0.0;
					rel2.relative: 1.0 0.0;
					min: 5 5;
					fixed: 0 1;
					color: 0 0 0 0;
				}
			}
			part {
				name: "padding_bottom";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					align: 1.0 1.0;
					rel1.relative: 0.0 1.0;
					rel2.relative: 1.0 1.0;
					min: 5 5;
					fixed: 0 1;
					color: 0 0 0 0;
				}
			}
			part { name: "elm.swallow.content";
				type: SWALLOW;
				mouse_events: 0;
				scale: 1;
				description { state: "default" 0.0;
					max: 40 40;
					visible: 0;
					aspect: 1.0 1.0;
					aspect_preference: VERTICAL;
					rel1 { relative: 1.0 1.0; to_x: "padding_left"; to_y: "padding_top"; }
					rel2 { relative: 0.0 0.0; to_x: "padding_right"; to_y: "padding_bottom"; }
					align: 0.5 0.5;
				}
				description { state: "visible" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
			}
			part { name: "over1";
				mouse_events: 1;
				repeat_events: 1;
				ignore_flags: ON_HOLD;
				description { state: "default" 0.0;
				rel1.to: "button_image";
				rel2.to: "button_image";
				}
				description { state: "disabled" 0.0;
					inherit:  "default" 0.0;
					visible: 0;
				}
			}
			part { name: "over2";
				mouse_events: 1;
				repeat_events: 1;
				description { state: "default" 0.0;
				rel1.to: "button_image";
				rel2.to: "button_image";
					color: 0 0 0 0;
				}
				description { state: "clicked" 0.0;
					inherit:  "default" 0.0;
					visible: 1;
					color: 0 0 0 0;
				}
			}
			part { name: "disabler";
				type: RECT;
				description { state: "default" 0.0;
					rel1.to: "button_image";
					rel2.to: "button_image";
					color: 0 0 0 0;
					visible: 0;
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
			}
		}
		programs {
			program { name: "button_click";
				signal: "mouse,down,1";
				source: "over1";
				action: SIGNAL_EMIT "elm,action,press" "";
				after: "button_click_anim";
			}
			program { name: "button_click_anim";
				action: STATE_SET "clicked" 0.0;
				target: "button_image";
			}
			program { name: "button_unclick";
				signal: "mouse,up,1";
				source: "over2";
				action: SIGNAL_EMIT "elm,action,unpress" "";
				after: "button_unclick_anim";
			}
			program { name: "button_unclick_anim";
				action: STATE_SET "default" 0.0;
				target: "button_image";
				after: "button_mouseout_clicked";
			}	 
			program { name: "button_mouseout_clicked";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"button_image", st, 30, vl);
					if (!strcmp(st, "clicked"))
						set_state(PART:"button_image", "default", 0.0);
				}
			}
			program { name: "button_click2";
				signal: "mouse,down,1";
				source: "over2";
				action: STATE_SET "clicked" 0.0;
				target: "over2";
			}
			program { name: "button_unclick2";
				signal: "mouse,clicked,1";
				source: "over1";
				action: STATE_SET "default" 0.0;
				target: "over1";
				after: "button_unclick3";
			}
			program { name: "button_unclick3";
				action: SIGNAL_EMIT "elm,action,click" "";
			}
			program { name: "disable";
				signal: "elm,state,disabled";
				source: "elm";
				action: STATE_SET "disabled" 0.0;
				target: "button_image";
				target: "over1";
				target: "disabler";
				after : "state_set_disable";
			}
			program { name: "state_set_disable";
				script {
					set_int(button_state, 1);
				}
			}
			program { name: "enable";
				signal: "elm,state,enabled";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "button_image";
				target: "over1";
				target: "disabler";
				after : "state_set_enable";
			}
			program { name: "state_set_enable";
				script {
					set_int(button_state, 0);
				}
			}
			program { name: "icon_show";
				signal: "elm,state,icon,visible";
				source: "elm";
				action:  STATE_SET "visible" 0.0;
				target: "elm.swallow.content";
			}
			program { name: "icon_hide";
				signal: "elm,state,icon,hidden";
				source: "elm";
				action:  STATE_SET "default" 0.0;
				target: "elm.swallow.content";
			}
			program { name: "focused";
				//signal: "elm,action,focus";
				//source: "elm";
				action: STATE_SET "focused" 0.0;
				target: "button_image";
			}
			program { name: "unfocused";
				//signal: "elm,action,unfocus";
				//source: "elm";
				action: STATE_SET "default" 0.0;
				target: "button_image";
			}
		}
	}
	
///////////////////////////////////////////////////////////////////////////////////////
	group { name: "elm/button/base/dark";
		alias: "elm/button/base/sound_dark";
		alias: "elm/button/base/sound_haptic_multiline";
		images {
			image: "00_button_02_normal.png" COMP;
			image: "00_button_02_press.png" COMP;
			image: "00_button_02_focus.png" COMP;
		}
		script {
			public button_state = 0; //0:enabled, 1: disabled
		}
		parts {
			part { name: "button_image";
				mouse_events: 1;
				scale: 1;
				description { state: "default" 0.0;
					min: 16 50;
					image {
						normal: "00_button_02_normal.png";
						border: 7 7 7 7;
						border_scale: 1;
					}
				}
				description { state: "clicked" 0.0;
					inherit: "default" 0.0;
					image.normal: "00_button_02_press.png";
				}
				description { state: "disabled" 0.0;
					inherit:  "default" 0.0;
				}
				description { state: "focused" 0.0;
					inherit: "default" 0.0;
					image.normal: "00_button_02_focus.png";
				}
			}
			part {
				name: "padding_left";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					align: 0.0 0.0;
					rel1.relative: 0.0 0.0;
					rel2.relative: 0.0 1.0;
					min: 5 5;
					fixed: 1 0;
					color: 0 0 0 0;
				}
			}
			part {
				name: "padding_right";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					align: 1.0 0.0;
					rel1.relative: 1.0 0.0;
					rel2.relative: 1.0 1.0;
					min: 5 5;
					fixed: 1 0;
					color: 0 0 0 0;
				}
			}
			part {
				name: "padding_top";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					align: 0.0 0.0;
					rel1.relative: 0.0 0.0;
					rel2.relative: 1.0 0.0;
					min: 5 5;
					fixed: 0 1;
					color: 0 0 0 0;
				}
			}
			part {
				name: "padding_bottom";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					align: 1.0 1.0;
					rel1.relative: 0.0 1.0;
					rel2.relative: 1.0 1.0;
					min: 5 5;
					fixed: 0 1;
					color: 0 0 0 0;
				}
			}
			part {
				name: "icon_rect";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					visible: 1;
					min: 0 40;
					fixed: 1 0;
					rel1 {relative: 0.0 1.0; to_x: "elm.swallow.content"; to_y: "padding_top"; }
					rel2 {relative: 1.0 0.0; to_x: "elm.swallow.content"; to_y: "padding_bottom"; }
					align: 0.0 0.5;
					color: 0 0 0 0;
				}
			} 
			part {
				name: "padding_icon_text";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0; //when only icon or no icon is there
					align: 0.0 0.0;
					rel1 { relative: 1.0 0.0; to: "icon_rect"; }
					rel2 { relative: 1.0 1.0; to: "icon_rect"; } 			
					fixed: 1 0;
					min: 0 0;
					color: 0 0 0 0;
				}
				description { state: "icononly" 0.0;
					inherit: "default" 0.0;
				}
				description { state: "visible" 0.0; //when icon is visible
					align: 0.0 0.0;
					rel1 { relative: 1.0 0.0; to: "icon_rect"; }
					rel2 { relative: 1.0 1.0; to: "icon_rect"; } 			
					fixed: 1 0;
					min: 5 0;
					color: 0 0 0 0;
				}
			}					
			part { name: "elm.swallow.content";
				type: SWALLOW;
				scale: 1;
				description { state: "default" 0.0;
					visible: 0;
					align: 0.0 0.5;
					rel1 {relative: 1.0 1.0; to_x: "padding_left"; to_y: "padding_top"; }
					rel2 {relative: 1.0 0.0; to_x: "padding_left"; to_y: "padding_bottom"; }
					fixed: 1 0;
				}
				description { state: "visible" 0.0;
					fixed: 1 0;
					visible: 1;
					align: 0.0 0.5;
					rel1 {relative: 1.0 1.0; to_x: "padding_left"; to_y: "padding_top"; }
					rel2 {relative: 1.0 0.0; to_x: "padding_left"; to_y: "padding_bottom"; }
					aspect: 1.0 1.0;
					aspect_preference: VERTICAL;
				}
				description { state: "icononly" 0.0;;
					visible: 1;
					min: 40 40;
					rel1 {relative: 1.0 1.0; to_x: "padding_left"; to_y: "padding_top"; }
					rel2 {relative: 0.0 0.0; to_x: "padding_right"; to_y: "padding_bottom"; }
					align: 0.5 0.5;
					aspect: 1.0 1.0;
					aspect_preference: VERTICAL;
				}
			}
			part { name: "elm.text";
				type:          TEXT;
				effect:        SHADOW;
				mouse_events:  0;
				scale: 1;
				description { state: "default" 0.0;
					visible: 0;
					rel1 { relative: 1.0 1.0; to_x: "padding_icon_text"; to_y: "padding_top"; }
					rel2 { relative: 0.0 0.0; to_x: "padding_right"; to_y:"padding_bottom"; }
					align: 0.5 0.5;
					color: 255 255 255 255;
					color2: 0 0 0 0;
					text {
						font: "SLP:style=Medium";
						size: 24;
						min:  0 0;
						align: 0.5 0.5;
						max: 1 0;
					}
				}
				description { state: "visible" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					min: 90 40;
				}
				description { state: "clicked" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					min: 0 0;
					color: 255 255 255 255;
					color2: 0 0 0 102;
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					color: 0 0 0 128;
					color3: 0 0 0 0;
				}
				description { state: "disabled_visible" 0.0;
					inherit: "default" 0.0;
					color: 0 0 0 128;
					color3: 0 0 0 0;
					visible: 1;
				}
				description { state: "focused" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					min: 0 0;
					color: 255 255 255 255;
					color2: 0 0 0 102;
				}
			}
			part { name: "over2";
				type: RECT;
				mouse_events: 1;
				repeat_events: 1;
				ignore_flags: ON_HOLD;
				description { state: "default" 0.0;
					color: 0 0 0 0;
				}
				description { state: "disabled" 0.0;
					inherit:  "default" 0.0;
					visible: 0;
				}
			}
			part { name: "over3";
				type: RECT;
				mouse_events: 1;
				repeat_events: 1;
				description { state: "default" 0.0;
					color: 0 0 0 0;
				}
				description { state: "clicked" 0.0;
					inherit:  "default" 0.0;
					visible: 1;
				}
			}
			part { name: "disabler";
				type: RECT;
				description { state: "default" 0.0;
					color: 0 0 0 0;
					visible: 0;
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
			}
		}
		programs {
			program { name: "button_click";
				signal: "mouse,down,1";
				source: "over2";
				action: SIGNAL_EMIT "elm,action,press" "";
				after: "button_click_anim";
			}
			program { name: "button_click_anim";
				action: STATE_SET "clicked" 0.0;
				target: "button_image";
				after: "text_clicked";
			}
			program { name: "text_clicked";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "visible"))
						set_state(PART:"elm.text", "clicked", 0.0);
				}
			}
			program { name: "button_unpress";
				action: SIGNAL_EMIT "elm,action,unpress" "";
			}
			program { name: "button_mouseout_clicked";
				signal: "mouse,up,1";
				source: "over3";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.swallow.content", st, 30, vl);
					if (strcmp(st, "icononly"))
					{
						emit("elm,action,default,text,set", "");
						set_state(PART:"elm.text", "visible", 0.0);
					}
					if(get_int(button_state) !=1)
						set_state(PART:"button_image", "default", 0.0);
				}
				after: button_unpress;
			}
			program { name: "button_click2";
				signal: "mouse,down,1";
				source: "over3";
				action: STATE_SET "clicked" 0.0;
				target: "over3";
			}
			program { name: "button_unclick2";
				signal: "mouse,clicked,1";
				source: "over3";
				action: STATE_SET "default" 0.0;
				target: "over3";
			}
			program { name: "button_unclick3";
				signal: "mouse,clicked,1";
				source: "over2";
				action: SIGNAL_EMIT "elm,action,click" "";
			}
			program { name: "text_show";
				signal: "elm,state,text,visible";
				source: "elm";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.swallow.content", st, 30, vl);
					if (!strcmp(st, "icononly"))
					{
						set_state(PART:"elm.swallow.content", "visible", 0.0);
						set_state(PART:"padding_icon_text", "visible", 0.0);
					}
					set_state(PART:"elm.text", "visible", 0.0);
				}
			}
			program { name: "text_hide";
				signal: "elm,state,text,hidden";
				source: "elm";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.swallow.content", st, 30, vl);
					if (!strcmp(st, "visible"))
					{
						set_state(PART:"elm.swallow.content", "icononly", 0.0);
						set_state(PART:"padding_icon_text", "icononly", 0.0);
					}
					set_state(PART:"elm.text", "default", 0.0);
				}
			}
			program { name: "icon_show";
				signal: "elm,state,icon,visible";
				source: "elm";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "visible"))
					{
						set_state(PART:"elm.swallow.content", "visible", 0.0);
						set_state(PART:"padding_icon_text", "visible", 0.0);
					}
					else
					{
						set_state(PART:"elm.swallow.content", "icononly", 0.0);
						set_state(PART:"padding_icon_text", "icononly", 0.0);
					}
				}
			}
			program { name: "icon_hide";
				signal: "elm,state,icon,hidden";
				source: "elm";
				action:  STATE_SET "default" 0.0;
				target: "elm.swallow.content";
			}
			program { name: "disable";
				signal: "elm,state,disabled";
				source: "elm";
				action: STATE_SET "disabled" 0.0;
				target: "button_image";
				target: "over2";
				target: "disabler";
				after: "disable_text";
			}
			program { name: "disable_text";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "visible"))
						set_state(PART:"elm.text", "disabled_visible", 0.0);
					else
						set_state(PART:"elm.text", "disabled", 0.0);
					set_int(button_state, 1);
				}
			}
			program { name: "enable";
				signal: "elm,state,enabled";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "button_image";
				target: "over2";
				target: "disabler";
				after: "enable_text";
			}
			program { name: "enable_text";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "disabled_visible"))
						set_state(PART:"elm.text", "visible", 0.0);
					else
						set_state(PART:"elm.text", "default", 0.0);
					set_int(button_state, 0);
				}
			}
			program { name: "focused";
				//signal: "elm,action,focus";
				//source: "elm";
				action: STATE_SET "focused" 0.0;
				target: "button_image";
				target: "elm.text";
			}
			program { name: "unfocused";
				//signal: "elm,action,unfocus";
				//source: "elm";
				action: STATE_SET "default" 0.0;
				target: "button_image";
				after: "unfocus_text";
			}
			program { name: "unfocus_text";
				action: STATE_SET "visible" 0.0;
				target: "elm.text";
			}
		}
	}

///////////////////////////////////////////////////////////////////////////////////////
	group { name: "elm/button/base/default";
		images {
			image: "00_button_03_normal.png" COMP;
			image: "00_button_03_press.png" COMP;
			image: "00_button_03_focus.png" COMP;
		}
		script {
			public button_state = 0; //0:enabled, 1: disabled
		}
		parts {
			part { name: "button_image";
				mouse_events: 1;
				scale: 1;
				description { state: "default" 0.0;
					min: 16 50;
					image {
						normal: "00_button_03_normal.png";
						border: 7 7 7 7;
						border_scale: 1;
					}
				}
				description { state: "clicked" 0.0;
					inherit: "default" 0.0;
					image.normal: "00_button_03_press.png";
				}
				description { state: "disabled" 0.0;
					inherit:  "default" 0.0;
				}
				description { state: "focused" 0.0;
					inherit: "default" 0.0;
					image.normal: "00_button_03_focus.png";
				}
			}
			part {
				name: "padding_left";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					align: 0.0 0.0;
					rel1.relative: 0.0 0.0;
					rel2.relative: 0.0 1.0;
					min: 5 5;
					fixed: 1 0;
					color: 0 0 0 0;
				}
			}
			part {
				name: "padding_right";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					align: 1.0 0.0;
					rel1.relative: 1.0 0.0;
					rel2.relative: 1.0 1.0;
					min: 5 5;
					fixed: 1 0;
					color: 0 0 0 0;
				}
			}
			part {
				name: "padding_top";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					align: 0.0 0.0;
					rel1.relative: 0.0 0.0;
					rel2.relative: 1.0 0.0;
					min: 5 5;
					fixed: 0 1;
					color: 0 0 0 0;
				}
			}
			part {
				name: "padding_bottom";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					align: 1.0 1.0;
					rel1.relative: 0.0 1.0;
					rel2.relative: 1.0 1.0;
					min: 5 5;
					fixed: 0 1;
					color: 0 0 0 0;
				}
			}
			part {
				name: "icon_rect";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					visible: 1;
					min: 0 40;
					fixed: 1 0;
					rel1 {relative: 0.0 1.0; to_x: "elm.swallow.content"; to_y: "padding_top"; }
					rel2 {relative: 1.0 0.0; to_x: "elm.swallow.content"; to_y: "padding_bottom"; }
					align: 0.0 0.5;
					color: 0 0 0 0;
				}
			} 
			part {
				name: "padding_icon_text";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0; //when only icon or no icon is there
					align: 0.0 0.0;
					rel1 { relative: 1.0 0.0; to: "icon_rect"; }
					rel2 { relative: 1.0 1.0; to: "icon_rect"; } 			
					fixed: 1 0;
					min: 0 0;
					color: 0 0 0 0;
				}
				description { state: "icononly" 0.0;
					inherit: "default" 0.0;
				}
				description { state: "visible" 0.0; //when icon is visible
					align: 0.0 0.0;
					rel1 { relative: 1.0 0.0; to: "icon_rect"; }
					rel2 { relative: 1.0 1.0; to: "icon_rect"; } 			
					fixed: 1 0;
					min: 5 0;
					color: 0 0 0 0;
				}
			}					
			part { name: "elm.swallow.content";
				type: SWALLOW;
				scale: 1;
				description { state: "default" 0.0;
					visible: 0;
					align: 0.0 0.5;
					rel1 {relative: 1.0 1.0; to_x: "padding_left"; to_y: "padding_top"; }
					rel2 {relative: 1.0 0.0; to_x: "padding_left"; to_y: "padding_bottom"; }
					fixed: 1 0;
				}
				description { state: "visible" 0.0;
					fixed: 1 0;
					visible: 1;
					align: 0.0 0.5;
					rel1 {relative: 1.0 1.0; to_x: "padding_left"; to_y: "padding_top"; }
					rel2 {relative: 1.0 0.0; to_x: "padding_left"; to_y: "padding_bottom"; }
					aspect: 1.0 1.0;
					aspect_preference: VERTICAL;
				}
				description { state: "icononly" 0.0;;
					visible: 1;
					min: 40 40;
					rel1 {relative: 1.0 1.0; to_x: "padding_left"; to_y: "padding_top"; }
					rel2 {relative: 0.0 0.0; to_x: "padding_right"; to_y: "padding_bottom"; }
					align: 0.5 0.5;
					aspect: 1.0 1.0;
					aspect_preference: VERTICAL;
				}
			}
			part { name: "elm.text";
				type:          TEXT;
				effect:        SHADOW;
				mouse_events:  0;
				scale: 1;
				description { state: "default" 0.0;
					visible: 0;
					rel1 { relative: 1.0 1.0; to_x: "padding_icon_text"; to_y: "padding_top"; }
					rel2 { relative: 0.0 0.0; to_x: "padding_right"; to_y:"padding_bottom"; }
					align: 0.5 0.5;
					color: 90 73 40 255;
					color2: 255 255 255 255;				
					text {
						font: "SLP:style=Medium";
						size: 24;
						min:  0 0;
						align: 0.5 0.5;
						max: 1 0;
					}
				}
				description { state: "visible" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					min: 90 40;
				}
				description { state: "clicked" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					min: 0 0;
					color: 255 255 255 255;
					color2: 0 0 0 102;
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					color: 0 0 0 128;
					color3: 0 0 0 0;
				}
				description { state: "disabled_visible" 0.0;
					inherit: "default" 0.0;
					color: 0 0 0 128;
					color3: 0 0 0 0;
					visible: 1;
				}
				description { state: "focused" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					min: 0 0;
					color: 255 255 255 255;
					color2: 0 0 0 102;
				}
			}
			part { name: "over2";
				type: RECT;
				mouse_events: 1;
				repeat_events: 1;
				ignore_flags: ON_HOLD;
				description { state: "default" 0.0;
					color: 0 0 0 0;
				}
				description { state: "disabled" 0.0;
					inherit:  "default" 0.0;
					visible: 0;
				}
			}
			part { name: "over3";
				type: RECT;
				mouse_events: 1;
				repeat_events: 1;
				description { state: "default" 0.0;
					color: 0 0 0 0;
				}
				description { state: "clicked" 0.0;
					inherit:  "default" 0.0;
					visible: 1;
				}
			}
			part { name: "disabler";
				type: RECT;
				description { state: "default" 0.0;
					color: 0 0 0 0;
					visible: 0;
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
			}
		}
		programs {
			program { name: "button_click";
				signal: "mouse,down,1";
				source: "over2";
				action: SIGNAL_EMIT "elm,action,press" "";
				after: "button_click_anim";
			}
			program { name: "button_click_anim";
				action: STATE_SET "clicked" 0.0;
				target: "button_image";
				after: "text_clicked";
			}
			program { name: "text_clicked";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "visible"))
						set_state(PART:"elm.text", "clicked", 0.0);
				}
			}
			program { name: "button_unpress";
				action: SIGNAL_EMIT "elm,action,unpress" "";
			}
			program { name: "button_mouseout_clicked";
				signal: "mouse,up,1";
				source: "over3";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.swallow.content", st, 30, vl);
					if (strcmp(st, "icononly"))
					{
						emit("elm,action,default,text,set", "");
						set_state(PART:"elm.text", "visible", 0.0);
					}
					if(get_int(button_state) !=1)
						set_state(PART:"button_image", "default", 0.0);
				}
				after: button_unpress;
			}
			program { name: "button_click2";
				signal: "mouse,down,1";
				source: "over3";
				action: STATE_SET "clicked" 0.0;
				target: "over3";
			}
			program { name: "button_unclick2";
				signal: "mouse,clicked,1";
				source: "over3";
				action: STATE_SET "default" 0.0;
				target: "over3";
			}
			program { name: "button_unclick3";
				signal: "mouse,clicked,1";
				source: "over2";
				action: SIGNAL_EMIT "elm,action,click" "";
			}
			program { name: "text_show";
				signal: "elm,state,text,visible";
				source: "elm";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.swallow.content", st, 30, vl);
					if (!strcmp(st, "icononly"))
					{
						set_state(PART:"elm.swallow.content", "visible", 0.0);
						set_state(PART:"padding_icon_text", "visible", 0.0);
					}
					set_state(PART:"elm.text", "visible", 0.0);
				}
			}
			program { name: "text_hide";
				signal: "elm,state,text,hidden";
				source: "elm";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.swallow.content", st, 30, vl);
					if (!strcmp(st, "visible"))
					{
						set_state(PART:"elm.swallow.content", "icononly", 0.0);
						set_state(PART:"padding_icon_text", "icononly", 0.0);
					}
					set_state(PART:"elm.text", "default", 0.0);
				}
			}
			program { name: "icon_show";
				signal: "elm,state,icon,visible";
				source: "elm";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "visible"))
					{
						set_state(PART:"elm.swallow.content", "visible", 0.0);
						set_state(PART:"padding_icon_text", "visible", 0.0);
					}
					else
					{
						set_state(PART:"elm.swallow.content", "icononly", 0.0);
						set_state(PART:"padding_icon_text", "icononly", 0.0);
					}
				}
			}
			program { name: "icon_hide";
				signal: "elm,state,icon,hidden";
				source: "elm";
				action:  STATE_SET "default" 0.0;
				target: "elm.swallow.content";
			}
			program { name: "disable";
				signal: "elm,state,disabled";
				source: "elm";
				action: STATE_SET "disabled" 0.0;
				target: "button_image";
				target: "over2";
				target: "disabler";
				after: "disable_text";
			}
			program { name: "disable_text";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "visible"))
						set_state(PART:"elm.text", "disabled_visible", 0.0);
					else
						set_state(PART:"elm.text", "disabled", 0.0);
					set_int(button_state, 1);
				}
			}
			program { name: "enable";
				signal: "elm,state,enabled";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "button_image";
				target: "over2";
				target: "disabler";
				after: "enable_text";
			}
			program { name: "enable_text";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "disabled_visible"))
						set_state(PART:"elm.text", "visible", 0.0);
					else
						set_state(PART:"elm.text", "default", 0.0);
					set_int(button_state, 0);
				}
			}
			program { name: "focused";
				//signal: "elm,action,focus";
				//source: "elm";
				action: STATE_SET "focused" 0.0;
				target: "button_image";
				target: "elm.text";
			}
			program { name: "unfocused";
				//signal: "elm,action,unfocus";
				//source: "elm";
				action: STATE_SET "default" 0.0;
				target: "button_image";
				after: "unfocus_text";
			}
			program { name: "unfocus_text";
				action: STATE_SET "visible" 0.0;
				target: "elm.text";
			}
		}
	}
	
///////////////////////////////////////////////////////////////////////////////////////
	group { name: "elm/button/base/hidden";
		images {
			image: "00_button_03_normal.png" COMP;
			image: "00_button_03_press.png" COMP;
			image: "00_button_03_focus.png" COMP;
		}
		script {
			public button_state = 0; //0:enabled, 1: disabled
		}
		parts {
			part { name: "button_image";
				mouse_events: 1;
				scale: 1;
				description { state: "default" 0.0;
					min: 16 50;
					image {
						normal: "00_button_03_normal.png";
						border: 7 7 7 7;
						border_scale: 1;
					}
				}
				description { state: "clicked" 0.0;
					inherit: "default" 0.0;
					image.normal: "00_button_03_press.png";
				}
				description { state: "disabled" 0.0;
					inherit:  "default" 0.0;
				}
				description { state: "focused" 0.0;
					inherit: "default" 0.0;
					image.normal: "00_button_03_focus.png";
				}
			}
			part {
				name: "padding_left";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					align: 0.0 0.0;
					rel1.relative: 0.0 0.0;
					rel2.relative: 0.0 1.0;
					min: 5 5;
					fixed: 1 0;
					color: 0 0 0 0;
				}
			}
			part {
				name: "padding_right";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					align: 1.0 0.0;
					rel1.relative: 1.0 0.0;
					rel2.relative: 1.0 1.0;
					min: 5 5;
					fixed: 1 0;
					color: 0 0 0 0;
				}
			}
			part {
				name: "padding_top";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					align: 0.0 0.0;
					rel1.relative: 0.0 0.0;
					rel2.relative: 1.0 0.0;
					min: 5 5;
					fixed: 0 1;
					color: 0 0 0 0;
				}
			}
			part {
				name: "padding_bottom";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					align: 1.0 1.0;
					rel1.relative: 0.0 1.0;
					rel2.relative: 1.0 1.0;
					min: 5 5;
					fixed: 0 1;
					color: 0 0 0 0;
				}
			}
			part {
				name: "icon_rect";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					visible: 1;
					min: 0 40;
					fixed: 1 0;
					rel1 {relative: 0.0 1.0; to_x: "elm.swallow.content"; to_y: "padding_top"; }
					rel2 {relative: 1.0 0.0; to_x: "elm.swallow.content"; to_y: "padding_bottom"; }
					align: 0.0 0.5;
					color: 0 0 0 0;
				}
			} 
			part {
				name: "padding_icon_text";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0; //when only icon or no icon is there
					align: 0.0 0.0;
					rel1 { relative: 1.0 0.0; to: "icon_rect"; }
					rel2 { relative: 1.0 1.0; to: "icon_rect"; } 			
					fixed: 1 0;
					min: 0 0;
					color: 0 0 0 0;
				}
				description { state: "icononly" 0.0;
					inherit: "default" 0.0;
				}
				description { state: "visible" 0.0; //when icon is visible
					align: 0.0 0.0;
					rel1 { relative: 1.0 0.0; to: "icon_rect"; }
					rel2 { relative: 1.0 1.0; to: "icon_rect"; } 			
					fixed: 1 0;
					min: 5 0;
					color: 0 0 0 0;
				}
			}					
			part { name: "elm.swallow.content";
				type: SWALLOW;
				scale: 1;
				description { state: "default" 0.0;
					visible: 0;
					align: 0.0 0.5;
					rel1 {relative: 1.0 1.0; to_x: "padding_left"; to_y: "padding_top"; }
					rel2 {relative: 1.0 0.0; to_x: "padding_left"; to_y: "padding_bottom"; }
					fixed: 1 0;
				}
				description { state: "visible" 0.0;
					fixed: 1 0;
					visible: 1;
					align: 0.0 0.5;
					rel1 {relative: 1.0 1.0; to_x: "padding_left"; to_y: "padding_top"; }
					rel2 {relative: 1.0 0.0; to_x: "padding_left"; to_y: "padding_bottom"; }
					aspect: 1.0 1.0;
					aspect_preference: VERTICAL;
				}
				description { state: "icononly" 0.0;;
					visible: 1;
					min: 40 40;
					rel1 {relative: 1.0 1.0; to_x: "padding_left"; to_y: "padding_top"; }
					rel2 {relative: 0.0 0.0; to_x: "padding_right"; to_y: "padding_bottom"; }
					align: 0.5 0.5;
					aspect: 1.0 1.0;
					aspect_preference: VERTICAL;
				}
			}
			part { name: "elm.text";
				type:          TEXT;
				effect:        SHADOW;
				mouse_events:  0;
				scale: 1;
				description { state: "default" 0.0;
					visible: 0;
					rel1 { relative: 1.0 1.0; to_x: "padding_icon_text"; to_y: "padding_top"; }
					rel2 { relative: 0.0 0.0; to_x: "padding_right"; to_y:"padding_bottom"; }
					align: 0.5 0.5;
					color: BUTTON_HIDDEN_BUTTON_TEXT_NORMAL_COLOR_INC;
					color2: BUTTON_HIDDEN_BUTTON_TEXT_NORMAL_SHAWDOW_COLOR_INC;			
					text {
						font: "SLP:style=Medium";
						size: 24;
						min:  0 0;
						align: 0.5 0.5;
						max: 1 0;
					}
				}
				description { state: "visible" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					min: 90 40;
				}
				description { state: "clicked" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					min: 0 0;
					color: BUTTON_HIDDEN_BUTTON_TEXT_PRESSED_COLOR_INC;
					color2: BUTTON_HIDDEN_BUTTON_TEXT_PRESSED_SHAWDOW_COLOR_INC;
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					color: 0 0 0 128;
					color3: 0 0 0 0;
				}
				description { state: "disabled_visible" 0.0;
					inherit: "default" 0.0;
					color: BUTTON_HIDDEN_BUTTON_TEXT_DISABLED_COLOR_INC;
					color2: BUTTON_HIDDEN_BUTTON_TEXT_DISABLED_SHAWDOW_COLOR_INC;
					color3: 0 0 0 0;
					visible: 1;
				}
				description { state: "focused" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					min: 0 0;
					color: BUTTON_HIDDEN_BUTTON_TEXT_FOCUSED_COLOR_INC;
					color2: BUTTON_HIDDEN_BUTTON_TEXT_FOCUSED_SHAWDOW_COLOR_INC;
				}
			}
			part { name: "over2";
				type: RECT;
				mouse_events: 1;
				repeat_events: 1;
				ignore_flags: ON_HOLD;
				description { state: "default" 0.0;
					color: 0 0 0 0;
				}
				description { state: "disabled" 0.0;
					inherit:  "default" 0.0;
					visible: 0;
				}
			}
			part { name: "over3";
				type: RECT;
				mouse_events: 1;
				repeat_events: 1;
				description { state: "default" 0.0;
					color: 0 0 0 0;
				}
				description { state: "clicked" 0.0;
					inherit:  "default" 0.0;
					visible: 1;
				}
			}
			part { name: "disabler";
				type: RECT;
				description { state: "default" 0.0;
					color: 0 0 0 0;
					visible: 0;
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
			}
		}
		programs {
			program { name: "button_click";
				signal: "mouse,down,1";
				source: "over2";
				action: SIGNAL_EMIT "elm,action,press" "";
				after: "button_click_anim";
			}
			program { name: "button_click_anim";
				action: STATE_SET "clicked" 0.0;
				target: "button_image";
				after: "text_clicked";
			}
			program { name: "text_clicked";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "visible"))
						set_state(PART:"elm.text", "clicked", 0.0);
				}
			}
			program { name: "button_unpress";
				action: SIGNAL_EMIT "elm,action,unpress" "";
			}
			program { name: "button_mouseout_clicked";
				signal: "mouse,up,1";
				source: "over3";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.swallow.content", st, 30, vl);
					if (strcmp(st, "icononly"))
					{
						emit("elm,action,default,text,set", "");
						set_state(PART:"elm.text", "visible", 0.0);
					}
					if(get_int(button_state) !=1)
						set_state(PART:"button_image", "default", 0.0);
				}
				after: button_unpress;
			}
			program { name: "button_click2";
				signal: "mouse,down,1";
				source: "over3";
				action: STATE_SET "clicked" 0.0;
				target: "over3";
			}
			program { name: "button_unclick2";
				signal: "mouse,clicked,1";
				source: "over3";
				action: STATE_SET "default" 0.0;
				target: "over3";
			}
			program { name: "button_unclick3";
				signal: "mouse,clicked,1";
				source: "over2";
				action: SIGNAL_EMIT "elm,action,click" "";
			}
			program { name: "text_show";
				signal: "elm,state,text,visible";
				source: "elm";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.swallow.content", st, 30, vl);
					if (!strcmp(st, "icononly"))
					{
						set_state(PART:"elm.swallow.content", "visible", 0.0);
						set_state(PART:"padding_icon_text", "visible", 0.0);
					}
					set_state(PART:"elm.text", "visible", 0.0);
				}
			}
			program { name: "text_hide";
				signal: "elm,state,text,hidden";
				source: "elm";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.swallow.content", st, 30, vl);
					if (!strcmp(st, "visible"))
					{
						set_state(PART:"elm.swallow.content", "icononly", 0.0);
						set_state(PART:"padding_icon_text", "icononly", 0.0);
					}
					set_state(PART:"elm.text", "default", 0.0);
				}
			}
			program { name: "icon_show";
				signal: "elm,state,icon,visible";
				source: "elm";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "visible"))
					{
						set_state(PART:"elm.swallow.content", "visible", 0.0);
						set_state(PART:"padding_icon_text", "visible", 0.0);
					}
					else
					{
						set_state(PART:"elm.swallow.content", "icononly", 0.0);
						set_state(PART:"padding_icon_text", "icononly", 0.0);
					}
				}
			}
			program { name: "icon_hide";
				signal: "elm,state,icon,hidden";
				source: "elm";
				action:  STATE_SET "default" 0.0;
				target: "elm.swallow.content";
			}
			program { name: "disable";
				signal: "elm,state,disabled";
				source: "elm";
				action: STATE_SET "disabled" 0.0;
				target: "button_image";
				target: "over2";
				target: "disabler";
				after: "disable_text";
			}
			program { name: "disable_text";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "visible"))
						set_state(PART:"elm.text", "disabled_visible", 0.0);
					else
						set_state(PART:"elm.text", "disabled", 0.0);
					set_int(button_state, 1);
				}
			}
			program { name: "enable";
				signal: "elm,state,enabled";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "button_image";
				target: "over2";
				target: "disabler";
				after: "enable_text";
			}
			program { name: "enable_text";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "disabled_visible"))
						set_state(PART:"elm.text", "visible", 0.0);
					else
						set_state(PART:"elm.text", "default", 0.0);
					set_int(button_state, 0);
				}
			}
			program { name: "focused";
				//signal: "elm,action,focus";
				//source: "elm";
				action: STATE_SET "focused" 0.0;
				target: "button_image";
				target: "elm.text";
			}
			program { name: "unfocused";
				//signal: "elm,action,unfocus";
				//source: "elm";
				action: STATE_SET "default" 0.0;
				target: "button_image";
				after: "unfocus_text";
			}
			program { name: "unfocus_text";
				action: STATE_SET "visible" 0.0;
				target: "elm.text";
			}
		}
	}
	
///////////////////////////////////////////////////////////////////////////////////////
   group { name: "elm/button/base/popup/contact";
      images {
         image: "00_button_03_normal.png" COMP;
         image: "00_button_03_press.png" COMP;
         image: "00_button_03_focus.png" COMP;
      }
      script {
         public button_state = 0; //0:enabled, 1: disabled
      }
      parts {
         part { name: "button_image";
            mouse_events: 1;
            scale: 1;
            description { state: "default" 0.0;
               min: 16 46;
               image {
                  normal: "00_button_01_normal.png";
                  border: 4 4 4 4;
                  border_scale: 1;
               }
            }
            description { state: "clicked" 0.0;
               inherit: "default" 0.0;
               image.normal: "00_button_01_press.png";
            }
            description { state: "disabled" 0.0;
               inherit:  "default" 0.0;
            }
            description { state: "focused" 0.0;
               inherit: "default" 0.0;
            // image.normal: "00_button_01_focus.png";
            }
         }
         part {
            name: "padding_left";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               align: 0.0 0.0;
               rel1.relative: 0.0 0.0;
               rel2.relative: 0.0 1.0;
               min: 10 5;
               fixed: 1 0;
               color: 0 0 0 0;
            }
         }
         part {
            name: "padding_right";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               align: 1.0 0.0;
               rel1.relative: 1.0 0.0;
               rel2.relative: 1.0 1.0;
               min: 10 5;
               fixed: 1 0;
               color: 0 0 0 0;
            }
         }
         part {
            name: "padding_top";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               align: 0.0 0.0;
               rel1.relative: 0.0 0.0;
               rel2.relative: 1.0 0.0;
               min: 5 10;
               fixed: 0 1;
               color: 0 0 0 0;
            }
         }
         part {
            name: "padding_bottom";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               align: 1.0 1.0;
               rel1.relative: 0.0 1.0;
               rel2.relative: 1.0 1.0;
               min: 5 10;
               fixed: 0 1;
               color: 0 0 0 0;
            }
         }
         part {
            name: "icon_rect";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               visible: 1;
               min: 0 40;
               fixed: 1 0;
               rel1 {relative: 0.0 1.0; to_x: "elm.swallow.content"; to_y: "padding_top"; }
               rel2 {relative: 1.0 0.0; to_x: "elm.swallow.content"; to_y: "padding_bottom"; }
               align: 0.0 0.5;
               color: 0 0 0 0;
            }
         } 
         part {
            name: "padding_icon_text";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0; //when only icon or no icon is there
               align: 0.0 0.0;
               rel1 { relative: 1.0 0.0; to: "icon_rect"; }
               rel2 { relative: 1.0 1.0; to: "icon_rect"; }
               fixed: 1 0;
               min: 0 0;
               color: 0 0 0 0;
            }
            description { state: "icononly" 0.0;
               inherit: "default" 0.0;
            }
            description { state: "visible" 0.0; //when icon is visible
               align: 0.0 0.0;
               rel1 { relative: 1.0 0.0; to: "icon_rect"; }
               rel2 { relative: 1.0 1.0; to: "icon_rect"; }
               fixed: 1 0;
               min: 10 0;
               color: 0 0 0 0;
            }
         }              
         part { name: "elm.swallow.content";
            type: SWALLOW;
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               align: 0.0 0.5;
               rel1 {relative: 1.0 1.0; to_x: "padding_left"; to_y: "padding_top"; }
               rel2 {relative: 1.0 0.0; to_x: "padding_left"; to_y: "padding_bottom"; }
               fixed: 1 0;
            }
            description { state: "visible" 0.0;
               fixed: 1 0;
               visible: 1;
               align: 0.0 0.5;
               rel1 {relative: 1.0 1.0; to_x: "padding_left"; to_y: "padding_top"; }
               rel2 {relative: 1.0 0.0; to_x: "padding_left"; to_y: "padding_bottom"; }
               aspect: 1.0 1.0;
               aspect_preference: VERTICAL;
            }
            description { state: "icononly" 0.0;;
               visible: 1;
               min: 24 24;
               rel1 {relative: 1.0 1.0; to_x: "padding_left"; to_y: "padding_top"; }
               rel2 {relative: 0.0 0.0; to_x: "padding_right"; to_y: "padding_bottom"; }
               align: 0.5 0.5;
               aspect: 1.0 1.0;
               aspect_preference: VERTICAL;
            }
         }
         part { name: "elm.text";
            type:          TEXT;
            effect:        SHADOW;
            mouse_events:  0;
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               rel1 { relative: 1.0 1.0; to_x: "padding_icon_text"; to_y: "padding_top"; }
               rel2 { relative: 0.0 0.0; to_x: "padding_right"; to_y:"padding_bottom"; }
               align: 0.0 0.5;
               color: 90 73 40 255;
               color2: 255 255 255 255;
               text {
                  font: "SLP:style=Medium";
                  size: 20;
                  min:  0 0;
                  align: 0.5 0.5;
                  max: 1 0;
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               min: 90 20;
            }
            description { state: "clicked" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               min: 0 0;
               color: 255 255 255 255;
               color2: 0 0 0 102;
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               color: 0 0 0 128;
               color3: 0 0 0 0;
            }
            description { state: "disabled_visible" 0.0;
               inherit: "default" 0.0;
               color: 0 0 0 128;
               color3: 0 0 0 0;
               visible: 1;
            }
            description { state: "focused" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               min: 0 0;
               color: 255 255 255 255;
               color2: 0 0 0 102;
            }
         }
         part { name: "over2";
            type: RECT;
            mouse_events: 1;
            repeat_events: 1;
            ignore_flags: ON_HOLD;
            description { state: "default" 0.0;
               color: 0 0 0 0;
            }
            description { state: "disabled" 0.0;
               inherit:  "default" 0.0;
               visible: 0;
            }
         }
         part { name: "over3";
            type: RECT;
            mouse_events: 1;
            repeat_events: 1;
            description { state: "default" 0.0;
               color: 0 0 0 0;
            }
            description { state: "clicked" 0.0;
               inherit:  "default" 0.0;
               visible: 1;
            }
         }
         part { name: "disabler";
            type: RECT;
            description { state: "default" 0.0;
               color: 0 0 0 0;
               visible: 0;
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
      }
      programs {
         program { name: "button_click";
            signal: "mouse,down,1";
            source: "over2";
            action: SIGNAL_EMIT "elm,action,press" "";
            after: "button_click_anim";
         }
         program { name: "button_click_anim";
            action: STATE_SET "clicked" 0.0;
            target: "button_image";
            after: "text_clicked";
         }
         program { name: "text_clicked";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"elm.text", st, 30, vl);
               if (!strcmp(st, "visible"))
                  set_state(PART:"elm.text", "clicked", 0.0);
            }
         }
         program { name: "button_unpress";
            action: SIGNAL_EMIT "elm,action,unpress" "";
         }
         program { name: "button_mouseout_clicked";
            signal: "mouse,up,1";
            source: "over3";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"elm.swallow.content", st, 30, vl);
               if (strcmp(st, "icononly"))
               {
                  emit("elm,action,default,text,set", "");
                  set_state(PART:"elm.text", "visible", 0.0);
               }
               if(get_int(button_state) !=1)
                  set_state(PART:"button_image", "default", 0.0);
            }
            after: button_unpress;
         }
         program { name: "button_click2";
            signal: "mouse,down,1";
            source: "over3";
            action: STATE_SET "clicked" 0.0;
            target: "over3";
         }
         program { name: "button_unclick2";
            signal: "mouse,clicked,1";
            source: "over3";
            action: STATE_SET "default" 0.0;
            target: "over3";
         }
         program { name: "button_unclick3";
            signal: "mouse,clicked,1";
            source: "over2";
            action: SIGNAL_EMIT "elm,action,click" "";
         }
         program { name: "text_show";
            signal: "elm,state,text,visible";
            source: "elm";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"elm.swallow.content", st, 30, vl);
               if (!strcmp(st, "icononly"))
               {
                  set_state(PART:"elm.swallow.content", "visible", 0.0);
                  set_state(PART:"padding_icon_text", "visible", 0.0);
               }
               set_state(PART:"elm.text", "visible", 0.0);
            }
         }
         program { name: "text_hide";
            signal: "elm,state,text,hidden";
            source: "elm";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"elm.swallow.content", st, 30, vl);
               if (!strcmp(st, "visible"))
               {
                  set_state(PART:"elm.swallow.content", "icononly", 0.0);
                  set_state(PART:"padding_icon_text", "icononly", 0.0);
               }
               set_state(PART:"elm.text", "default", 0.0);
            }
         }
         program { name: "icon_show";
            signal: "elm,state,icon,visible";
            source: "elm";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"elm.text", st, 30, vl);
               if (!strcmp(st, "visible"))
               {
                  set_state(PART:"elm.swallow.content", "visible", 0.0);
                  set_state(PART:"padding_icon_text", "visible", 0.0);
               }
               else
               {
                  set_state(PART:"elm.swallow.content", "icononly", 0.0);
                  set_state(PART:"padding_icon_text", "icononly", 0.0);
               }
            }
         }
         program { name: "icon_hide";
            signal: "elm,state,icon,hidden";
            source: "elm";
            action:  STATE_SET "default" 0.0;
            target: "elm.swallow.content";
         }
         program { name: "disable";
            signal: "elm,state,disabled";
            source: "elm";
            action: STATE_SET "disabled" 0.0;
            target: "button_image";
            target: "over2";
            target: "disabler";
            after: "disable_text";
         }
         program { name: "disable_text";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"elm.text", st, 30, vl);
               if (!strcmp(st, "visible"))
                  set_state(PART:"elm.text", "disabled_visible", 0.0);
               else
                  set_state(PART:"elm.text", "disabled", 0.0);
               set_int(button_state, 1);
            }
         }
         program { name: "enable";
            signal: "elm,state,enabled";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "button_image";
            target: "over2";
            target: "disabler";
            after: "enable_text";
         }
         program { name: "enable_text";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"elm.text", st, 30, vl);
               if (!strcmp(st, "disabled_visible"))
                  set_state(PART:"elm.text", "visible", 0.0);
               else
                  set_state(PART:"elm.text", "default", 0.0);
               set_int(button_state, 0);
            }
         }
         program { name: "focused";
            //signal: "elm,action,focus";
            //source: "elm";
            action: STATE_SET "focused" 0.0;
            target: "button_image";
            target: "elm.text";
         }
         program { name: "unfocused";
            //signal: "elm,action,unfocus";
            //source: "elm";
            action: STATE_SET "default" 0.0;
            target: "button_image";
            after: "unfocus_text";
         }
         program { name: "unfocus_text";
            action: STATE_SET "visible" 0.0;
            target: "elm.text";
         }
      }
   }

///////////////////////////////////////////////////////////////////////////////////////
	group { name: "elm/button/base/calendarpicker/bar";
		images {
			image: "00_calend_picker_bar_button.png" COMP;
			image: "00_calend_picker_bar_button_press.png" COMP;
			image: "00_calend_picker_bar_button_press.png" COMP;
		}
		script {
			public button_state = 0; //0:enabled, 1: disabled
		}
		parts {
			part { name: "button_image";
				mouse_events: 1;
				scale: 1;
				description { state: "default" 0.0;
					min: 16 50;
					image {
						normal: "00_calend_picker_bar_button.png";
						border: 7 7 7 7;
						border_scale: 1;
					}
				}
				description { state: "clicked" 0.0;
					inherit: "default" 0.0;
					image.normal: "00_calend_picker_bar_button_press.png";
				}
				description { state: "disabled" 0.0;
					inherit:  "default" 0.0;
				}
				description { state: "focused" 0.0;
					inherit: "default" 0.0;
					image.normal: "00_calend_picker_bar_button_press.png";
				}
			}
			part {
				name: "padding_left";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					align: 0.0 0.0;
					rel1.relative: 0.0 0.0;
					rel2.relative: 0.0 1.0;
					min: 5 5;
					fixed: 1 0;
					color: 0 0 0 0;
				}
			}
			part {
				name: "padding_right";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					align: 1.0 0.0;
					rel1.relative: 1.0 0.0;
					rel2.relative: 1.0 1.0;
					min: 5 5;
					fixed: 1 0;
					color: 0 0 0 0;
				}
			}
			part {
				name: "padding_top";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					align: 0.0 0.0;
					rel1.relative: 0.0 0.0;
					rel2.relative: 1.0 0.0;
					min: 5 5;
					fixed: 0 1;
					color: 0 0 0 0;
				}
			}
			part {
				name: "padding_bottom";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					align: 1.0 1.0;
					rel1.relative: 0.0 1.0;
					rel2.relative: 1.0 1.0;
					min: 5 5;
					fixed: 0 1;
					color: 0 0 0 0;
				}
			}
			part {
				name: "icon_rect";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					visible: 1;
					min: 0 40;
					fixed: 1 0;
					rel1 {relative: 0.0 1.0; to_x: "elm.swallow.content"; to_y: "padding_top"; }
					rel2 {relative: 1.0 0.0; to_x: "elm.swallow.content"; to_y: "padding_bottom"; }
					align: 0.0 0.5;
					color: 0 0 0 0;
				}
			} 
			part {
				name: "padding_icon_text";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0; //when only icon or no icon is there
					align: 0.0 0.0;
					rel1 { relative: 1.0 0.0; to: "icon_rect"; }
					rel2 { relative: 1.0 1.0; to: "icon_rect"; } 			
					fixed: 1 0;
					min: 0 0;
					color: 0 0 0 0;
				}
				description { state: "icononly" 0.0;
					inherit: "default" 0.0;
				}
				description { state: "visible" 0.0; //when icon is visible
					align: 0.0 0.0;
					rel1 { relative: 1.0 0.0; to: "icon_rect"; }
					rel2 { relative: 1.0 1.0; to: "icon_rect"; } 			
					fixed: 1 0;
					min: 5 0;
					color: 0 0 0 0;
				}
			}					
			part { name: "elm.swallow.content";
				type: SWALLOW;
				scale: 1;
				description { state: "default" 0.0;
					visible: 0;
					align: 0.0 0.5;
					rel1 {relative: 1.0 1.0; to_x: "padding_left"; to_y: "padding_top"; }
					rel2 {relative: 1.0 0.0; to_x: "padding_left"; to_y: "padding_bottom"; }
					fixed: 1 0;
				}
				description { state: "visible" 0.0;
					fixed: 1 0;
					visible: 1;
					align: 0.0 0.5;
					rel1 {relative: 1.0 1.0; to_x: "padding_left"; to_y: "padding_top"; }
					rel2 {relative: 1.0 0.0; to_x: "padding_left"; to_y: "padding_bottom"; }
					aspect: 1.0 1.0;
					aspect_preference: VERTICAL;
				}
				description { state: "icononly" 0.0;;
					visible: 1;
					min: 40 40;
					rel1 {relative: 1.0 1.0; to_x: "padding_left"; to_y: "padding_top"; }
					rel2 {relative: 0.0 0.0; to_x: "padding_right"; to_y: "padding_bottom"; }
					align: 0.5 0.5;
					aspect: 1.0 1.0;
					aspect_preference: VERTICAL;
				}
			}
			part { name: "elm.text";
				type:          TEXT;
				effect:        SHADOW;
				mouse_events:  0;
				scale: 1;
				description { state: "default" 0.0;
					visible: 0;
					rel1 { relative: 1.0 1.0; to_x: "padding_icon_text"; to_y: "padding_top"; }
					rel2 { relative: 0.0 0.0; to_x: "padding_right"; to_y:"padding_bottom"; }
					align: 0.5 0.5;
					color: 255 255 255 255;
					color2: 0 0 0 0;
					text {
						font: "SLP:style=Medium";
						size: 24;
						min:  0 0;
						align: 0.5 0.5;
						max: 1 0;
					}
				}
				description { state: "visible" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					min: 88 40;
				}
				description { state: "clicked" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					min: 0 0;
					color: 255 255 255 255;
					color2: 0 0 0 0;
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					color: 0 0 0 128;
					color3: 0 0 0 0;
				}
				description { state: "disabled_visible" 0.0;
					inherit: "default" 0.0;
					color: 0 0 0 128;
					color3: 0 0 0 0;
					visible: 1;
				}
				description { state: "focused" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					min: 0 0;
					color: 255 255 255 255;
					color2: 0 0 0 102;
				}
			}
			part { name: "over2";
				type: RECT;
				mouse_events: 1;
				repeat_events: 1;
				ignore_flags: ON_HOLD;
				description { state: "default" 0.0;
					color: 0 0 0 0;
				}
				description { state: "disabled" 0.0;
					inherit:  "default" 0.0;
					visible: 0;
				}
			}
			part { name: "over3";
				type: RECT;
				mouse_events: 1;
				repeat_events: 1;
				description { state: "default" 0.0;
					color: 0 0 0 0;
				}
				description { state: "clicked" 0.0;
					inherit:  "default" 0.0;
					visible: 1;
				}
			}
			part { name: "disabler";
				type: RECT;
				description { state: "default" 0.0;
					color: 0 0 0 0;
					visible: 0;
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
			}
		}
		programs {
			program { name: "button_click";
				signal: "mouse,down,1";
				source: "over2";
				action: SIGNAL_EMIT "elm,action,press" "";
				after: "button_click_anim";
			}
			program { name: "button_click_anim";
				action: STATE_SET "clicked" 0.0;
				target: "button_image";
				after: "text_clicked";
			}
			program { name: "text_clicked";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "visible"))
						set_state(PART:"elm.text", "clicked", 0.0);
				}
			}
			program { name: "button_unpress";
				action: SIGNAL_EMIT "elm,action,unpress" "";
			}
			program { name: "button_mouseout_clicked";
				signal: "mouse,up,1";
				source: "over3";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.swallow.content", st, 30, vl);
					if (strcmp(st, "icononly"))
					{
						emit("elm,action,default,text,set", "");
						set_state(PART:"elm.text", "visible", 0.0);
					}
					if(get_int(button_state) !=1)
						set_state(PART:"button_image", "default", 0.0);
				}
				after: button_unpress;
			}
			program { name: "button_click2";
				signal: "mouse,down,1";
				source: "over3";
				action: STATE_SET "clicked" 0.0;
				target: "over3";
			}
			program { name: "button_unclick2";
				signal: "mouse,clicked,1";
				source: "over3";
				action: STATE_SET "default" 0.0;
				target: "over3";
			}
			program { name: "button_unclick3";
				signal: "mouse,clicked,1";
				source: "over2";
				action: SIGNAL_EMIT "elm,action,click" "";
			}
			program { name: "text_show";
				signal: "elm,state,text,visible";
				source: "elm";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.swallow.content", st, 30, vl);
					if (!strcmp(st, "icononly"))
					{
						set_state(PART:"elm.swallow.content", "visible", 0.0);
						set_state(PART:"padding_icon_text", "visible", 0.0);
					}
					set_state(PART:"elm.text", "visible", 0.0);
				}
			}
			program { name: "text_hide";
				signal: "elm,state,text,hidden";
				source: "elm";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.swallow.content", st, 30, vl);
					if (!strcmp(st, "visible"))
					{
						set_state(PART:"elm.swallow.content", "icononly", 0.0);
						set_state(PART:"padding_icon_text", "icononly", 0.0);
					}
					set_state(PART:"elm.text", "default", 0.0);
				}
			}
			program { name: "icon_show";
				signal: "elm,state,icon,visible";
				source: "elm";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "visible"))
					{
						set_state(PART:"elm.swallow.content", "visible", 0.0);
						set_state(PART:"padding_icon_text", "visible", 0.0);
					}
					else
					{
						set_state(PART:"elm.swallow.content", "icononly", 0.0);
						set_state(PART:"padding_icon_text", "icononly", 0.0);
					}
				}
			}
			program { name: "icon_hide";
				signal: "elm,state,icon,hidden";
				source: "elm";
				action:  STATE_SET "default" 0.0;
				target: "elm.swallow.content";
			}
			program { name: "disable";
				signal: "elm,state,disabled";
				source: "elm";
				action: STATE_SET "disabled" 0.0;
				target: "button_image";
				target: "over2";
				target: "disabler";
				after: "disable_text";
			}
			program { name: "disable_text";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "visible"))
						set_state(PART:"elm.text", "disabled_visible", 0.0);
					else
						set_state(PART:"elm.text", "disabled", 0.0);
					set_int(button_state, 1);
				}
			}
			program { name: "enable";
				signal: "elm,state,enabled";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "button_image";
				target: "over2";
				target: "disabler";
				after: "enable_text";
			}
			program { name: "enable_text";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "disabled_visible"))
						set_state(PART:"elm.text", "visible", 0.0);
					else
						set_state(PART:"elm.text", "default", 0.0);
					set_int(button_state, 0);
				}
			}
			program { name: "focused";
				//signal: "elm,action,focus";
				//source: "elm";
				action: STATE_SET "focused" 0.0;
				target: "button_image";
				target: "elm.text";
			}
			program { name: "unfocused";
				//signal: "elm,action,unfocus";
				//source: "elm";
				action: STATE_SET "default" 0.0;
				target: "button_image";
				after: "unfocus_text";
			}
			program { name: "unfocus_text";
				action: STATE_SET "visible" 0.0;
				target: "elm.text";
			}
		}
	}
	
///////////////////////////////////////////////////////////////////////////////////////
   group { name: "elm/button/base/icon_and_text/center";
      images {
         image: "00_button_03_normal.png" COMP;
         image: "00_button_03_press.png" COMP;
         image: "00_button_03_focus.png" COMP;
         image: "00_button_03_dim.png" COMP;
      }
      script {
         public button_state = 0; //0:enabled, 1: disabled
      }
      parts {
         part { name: "button_image";
            mouse_events: 1;
            scale: 1;
            description { state: "default" 0.0;
               min: 16 46;
               image {
                  normal: "00_button_01_normal.png";
                  border: 4 4 4 4;
                  border_scale: 1;
               }
            }
            description { state: "clicked" 0.0;
               inherit: "default" 0.0;
               image.normal: "00_button_01_press.png";
            }
            description { state: "disabled" 0.0;
               inherit:  "default" 0.0;
               image.normal: "00_button_01_dim.png";
            }
            description { state: "focused" 0.0;
               inherit: "default" 0.0;
               image.normal: "00_button_01_focus.png";
            }
         }
         part {
            name: "padding_left";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               align: 0.0 0.0;
               rel1.relative: 0.0 0.0;
               rel2.relative: 0.0 1.0;
               min: 10 5;
               fixed: 1 0;
               color: 0 0 0 0;
            }
         }
         part {
            name: "padding_right";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               align: 1.0 0.0;
               rel1.relative: 1.0 0.0;
               rel2.relative: 1.0 1.0;
               min: 10 5;
               fixed: 1 0;
               color: 0 0 0 0;
            }
         }
         part {
            name: "padding_top";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               align: 0.0 0.0;
               rel1.relative: 0.0 0.0;
               rel2.relative: 1.0 0.0;
               min: 5 10;
               fixed: 0 1;
               color: 0 0 0 0;
            }
         }
         part {
            name: "padding_bottom";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               align: 1.0 1.0;
               rel1.relative: 0.0 1.0;
               rel2.relative: 1.0 1.0;
               min: 5 10;
               fixed: 0 1;
               color: 0 0 0 0;
            }
         }
         part {
            name: "icon_rect";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               visible: 1;
               min: 0 0;
               fixed: 1 0;
               rel1 { relative: 1.0 1.0; to_x: "padding_left"; to_y: "padding_top"; }
               rel2 { relative: 1.0 0.0; to_x: "padding_left"; to_y: "padding_bottom"; }
               align: 0.0 0.5;
               color: 0 0 0 0;
            }
            description { state: "visible" 0.0;
               visible: 1;
               min: 40 40;
               fixed: 1 0;
               rel1 {relative: 1.0 1.0; to_x: "padding_left"; to_y: "padding_top"; }
               rel2 {relative: 1.0 0.0; to_x: "padding_left"; to_y: "padding_bottom"; }
               aspect: 1.0 1.0;
               aspect_preference: VERTICAL;
               align: 0.0 0.5;
               color: 0 0 0 0;
            }
            description { state: "icononly" 0.0;
               inherit: "default" 0.0;
            }
         } 
         part {
            name: "padding_after_icon";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0; //when only icon or no icon is there
               align: 0.0 0.0;
               rel1 { relative: 1.0 0.0; to: "icon_rect"; }
               rel2 { relative: 1.0 1.0; to: "icon_rect"; }
               fixed: 1 0;
               min: 0 0;
               color: 0 255 0 100;
            }
            description { state: "visible" 0.0;
               visible: 1;
               align: 0.0 0.0;
               rel1 { relative: 1.0 0.0; to: "icon_rect"; }
               rel2 { relative: 1.0 1.0; to: "icon_rect"; }
               fixed: 1 0;
               min: 5 0;
               color: 0 0 0 0;
            }
            description { state: "icononly" 0.0;
               inherit: "default" 0.0;
            }
         }
         part {
            name: "padding_before_text";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0; //when only icon or no icon is there
               align: 1.0 0.5;
               rel1 { relative: 0.0 1.0; to_x: "elm.text"; to_y: "padding_top"; }
               rel2 { relative: 0.0 0.0; to_x: "elm.text"; to_y: "padding_bottom"; }
               fixed: 1 0;
               min: 5 0;
               color: 0 0 0 0;
            }
         }              
         part { name: "elm.swallow.content";
            type: SWALLOW;
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               align: 0.0 0.5;
               rel1 { relative: 1.0 1.0; to_x: "padding_left"; to_y: "padding_top"; }
               rel2 { relative: 1.0 0.0; to_x: "padding_left"; to_y: "padding_bottom"; }
               fixed: 1 0;
            }
            description { state: "visible" 0.0;
               fixed: 1 0;
               visible: 1;
               align: 1.0 0.5;
               rel1 { relative: 0.0 1.0; to_x: "padding_before_text"; to_y: "padding_top"; }
               rel2 { relative: 0.0 0.0; to_x: "padding_before_text"; to_y: "padding_bottom"; }
               aspect: 1.0 1.0;
               aspect_preference: VERTICAL;
            }
            description { state: "icononly" 0.0;;
               visible: 1;
               min: 24 24;
               rel1 { relative: 1.0 1.0; to_x: "padding_left"; to_y: "padding_top"; }
               rel2 { relative: 0.0 0.0; to_x: "padding_right"; to_y: "padding_bottom"; }
               align: 0.5 0.5;
               aspect: 1.0 1.0;
               aspect_preference: VERTICAL;
            }
         }
         part { name: "elm.text";
            type:          TEXT;
            effect:        SHADOW;
            mouse_events:  0;
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               rel1 { relative: 1.0 1.0; to_x: "padding_after_icon"; to_y: "padding_top"; }
               rel2 { relative: 0.0 0.0; to_x: "padding_right"; to_y:"padding_bottom"; }
               align: 0.5 0.5;
               color: BUTTON_ICON_TEXT_NORMAL_COLOR_INC;
               color2: BUTTON_ICON_TEXT_NORMAL_SHAWDOW_COLOR_INC;
               text {
                  font: "SLP:style=Medium";
                  size: 24;
                  min:  0 0;
                  align: 0.5 0.5;
                  max: 1 0;
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               min: 90 24;
            }
            description { state: "clicked" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               min: 0 0;
               color: BUTTON_ICON_TEXT_PRESSED_COLOR_INC;
               color2: BUTTON_ICON_TEXT_PRESSED_SHAWDOW_COLOR_INC;
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               color: 0 0 0 128;
               color3: 0 0 0 0;
            }
            description { state: "disabled_visible" 0.0;
               inherit: "default" 0.0;
               color: BUTTON_ICON_TEXT_DISABLED_COLOR_INC;
               color2: BUTTON_ICON_TEXT_DISABLED_SHAWDOW_COLOR_INC;
               color3: 0 0 0 0;
               visible: 1;
            }
            description { state: "focused" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               min: 0 0;
               color: BUTTON_ICON_TEXT_FOCUSED_COLOR_INC;
               color2: BUTTON_ICON_TEXT_FOCUSED_SHAWDOW_COLOR_INC;
            }
         }
         part { name: "over2";
            type: RECT;
            mouse_events: 1;
            repeat_events: 1;
            ignore_flags: ON_HOLD;
            description { state: "default" 0.0;
               color: 0 0 0 0;
            }
            description { state: "disabled" 0.0;
               inherit:  "default" 0.0;
               visible: 0;
            }
         }
         part { name: "over3";
            type: RECT;
            mouse_events: 1;
            repeat_events: 1;
            description { state: "default" 0.0;
               color: 0 0 0 0;
            }
            description { state: "clicked" 0.0;
               inherit:  "default" 0.0;
               visible: 1;
            }
         }
         part { name: "disabler";
            type: RECT;
            description { state: "default" 0.0;
               color: 0 0 0 0;
               visible: 0;
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
      }
      programs {
         program { name: "button_click";
            signal: "mouse,down,1";
            source: "over2";
            action: SIGNAL_EMIT "elm,action,press" "";
            after: "button_click_anim";
         }
         program { name: "button_click_anim";
            action: STATE_SET "clicked" 0.0;
            target: "button_image";
            after: "text_clicked";
         }
         program { name: "text_clicked";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"elm.text", st, 30, vl);
               if (!strcmp(st, "visible"))
                  set_state(PART:"elm.text", "clicked", 0.0);
            }
         }
         program { name: "button_unpress";
            action: SIGNAL_EMIT "elm,action,unpress" "";
         }
         program { name: "button_mouseout_clicked";
            signal: "mouse,up,1";
            source: "over3";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"elm.swallow.content", st, 30, vl);
               if (strcmp(st, "icononly"))
                 {
                    emit("elm,action,default,text,set", "");
                    set_state(PART:"elm.text", "visible", 0.0);
                 }
               if(get_int(button_state) !=1)
                  set_state(PART:"button_image", "default", 0.0);
            }
            after: button_unpress;
         }
         program { name: "button_click2";
            signal: "mouse,down,1";
            source: "over3";
            action: STATE_SET "clicked" 0.0;
            target: "over3";
         }
         program { name: "button_unclick2";
            signal: "mouse,clicked,1";
            source: "over3";
            action: STATE_SET "default" 0.0;
            target: "over3";
         }
         program { name: "button_unclick3";
            signal: "mouse,clicked,1";
            source: "over2";
            action: SIGNAL_EMIT "elm,action,click" "";
         }
         program { name: "text_show";
            signal: "elm,state,text,visible";
            source: "elm";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"elm.swallow.content", st, 30, vl);
               if (!strcmp(st, "icononly"))
               {
                  set_state(PART:"elm.swallow.content", "visible", 0.0);
                  set_state(PART:"icon_rect", "visible", 0.0);
                  set_state(PART:"padding_after_icon", "visible", 0.0);
               }
               set_state(PART:"elm.text", "visible", 0.0);
            }
         }
         program { name: "text_hide";
            signal: "elm,state,text,hidden";
            source: "elm";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"elm.swallow.content", st, 30, vl);
               if (!strcmp(st, "visible"))
               {
                  set_state(PART:"elm.swallow.content", "icononly", 0.0);
                  set_state(PART:"icon_rect", "icononly", 0.0);
                  set_state(PART:"padding_after_icon", "icononly", 0.0);
               }
               set_state(PART:"elm.text", "default", 0.0);
            }
         }
         program { name: "icon_show";
            signal: "elm,state,icon,visible";
            source: "elm";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"elm.text", st, 30, vl);
               if (!strcmp(st, "visible"))
               {
                  set_state(PART:"elm.swallow.content", "visible", 0.0);
                  set_state(PART:"icon_rect", "visible", 0.0);
                  set_state(PART:"padding_after_icon", "visible", 0.0);
               }
               else
               {
                  set_state(PART:"elm.swallow.content", "icononly", 0.0);
                  set_state(PART:"icon_rect", "icononly", 0.0);
                  set_state(PART:"padding_after_icon", "icononly", 0.0);
               }
            }
         }
         program { name: "icon_hide";
            signal: "elm,state,icon,hidden";
            source: "elm";
            action:  STATE_SET "default" 0.0;
            target: "elm.swallow.content";
         }
         program { name: "disable";
            signal: "elm,state,disabled";
            source: "elm";
            action: STATE_SET "disabled" 0.0;
            target: "button_image";
            target: "over2";
            target: "disabler";
            after: "disable_text";
         }
         program { name: "disable_text";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"elm.text", st, 30, vl);
               if (!strcmp(st, "visible"))
                  set_state(PART:"elm.text", "disabled_visible", 0.0);
               else
                  set_state(PART:"elm.text", "disabled", 0.0);
               set_int(button_state, 1);
            }
         }
         program { name: "enable";
            signal: "elm,state,enabled";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "button_image";
            target: "over2";
            target: "disabler";
            after: "enable_text";
         }
         program { name: "enable_text";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"elm.text", st, 30, vl);
               if (!strcmp(st, "disabled_visible"))
                  set_state(PART:"elm.text", "visible", 0.0);
               else
                  set_state(PART:"elm.text", "default", 0.0);
               set_int(button_state, 0);
            }
         }
         program { name: "focused";
            action: STATE_SET "focused" 0.0;
            target: "button_image";
            target: "elm.text";
         }
         program { name: "unfocused";
            action: STATE_SET "default" 0.0;
            target: "button_image";
            after: "unfocus_text";
         }
         program { name: "unfocus_text";
            action: STATE_SET "visible" 0.0;
            target: "elm.text";
         }
      }
   }

///////////////////////////////////////////////////////////////////////////////////////
	group { name: "elm/button/base/text_only/contact";
		alias: "elm/button/base/haptic";
		images {
			image: "00_message_button_add_recipient.png" COMP;
			image: "00_message_button_add_recipient_press.png" COMP;
			image: "00_message_button_add_recipient_focus.png" COMP;
			image: "00_message_button_add_recipient_dim.png" COMP;
		}
		script {
			public button_state = 0; //0:enabled, 1: disabled
		}
		parts {
			part { name: "button_image";
				mouse_events: 1;
				scale: 1;
				description { state: "default" 0.0;
					rel1 { to_x: "padding.left"; to_y: "elm.text";}
					rel2 { to_x: "padding.right"; to_y: "elm.text";}
					min: 44 41;
					image {
						normal: "00_message_button_add_recipient.png";
						border: 21 21 19 19;
						border_scale: 1;
					}
				}
				description { state: "clicked" 0.0;
					inherit: "default" 0.0;
					image.normal: "00_message_button_add_recipient_press.png";
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					image.normal: "00_message_button_add_recipient_dim.png";
				}		
				description { state: "focused" 0.0;
					inherit: "default" 0.0;
					image.normal: "00_message_button_add_recipient_focus.png";
				}
			}
			part { name: "padding.left";
				type: RECT;
				scale: 1;
				description { state: "default" 0.0;
					visible: 0;
					min: 10 1;
					fixed: 1 0;
					color: 0 0 0 0;
					rel1.relative: 0 0;
					rel2 { relative: 0.0 1.0; to_x: "elm.text";}
					align: 1 0;
				}
			}
			part { name: "padding.right";
				type: RECT;
				scale: 1;
				description { state: "default" 0.0;
					visible: 0;
					min: 10 1;
					fixed: 1 0;
					color: 0 0 0 0;
					rel1 { relative: 1.0 0.0; to_x: "elm.text";}
					rel2.relative: 1.0 1.0;
					align: 0 0;
				}
			}
			part {	name: "elm.text";
				type: TEXT;
				effect: SHADOW;
				mouse_events: 0;
				scale: 1;
				description { state: "default" 0.0;
					visible: 0;
					fixed: 1 1;
					align: 0.5 0.5;
					color: BUTTON_CONTACT_BUTTON_TEXT_NORMAL_COLOR_INC;
					color2: BUTTON_CONTACT_BUTTON_TEXT_NORMAL_SHAWDOW_COLOR_INC;
					text {
						font: "SLP:style=Medium";
						size: 28;
						min:  1 1;
						align: 0.5 0.5;
					}
				}
				description { state: "visible" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					min: 1 1;
				}
				description { state: "clicked" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					min: 1 1;
					color: BUTTON_CONTACT_BUTTON_TEXT_PRESSED_COLOR_INC;
					color2: BUTTON_CONTACT_BUTTON_TEXT_PRESSED_SHAWDOW_COLOR_INC;
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					color: 0 0 0 128;
					color3: 0 0 0 0;
				}
				description { state: "disabled_visible" 0.0;
					inherit: "default" 0.0;
					color: BUTTON_CONTACT_BUTTON_TEXT_DISABLED_COLOR_INC;
					color2: BUTTON_CONTACT_BUTTON_TEXT_DISABLED_SHAWDOW_COLOR_INC;
					color3: 0 0 0 0;
					visible: 1;
					min: 1 1;
				}
				description { state: "focused" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					min: 1 1;
					color: BUTTON_CONTACT_BUTTON_TEXT_FOCUSED_COLOR_INC;
					color2: BUTTON_CONTACT_BUTTON_TEXT_FOCUSED_SHAWDOW_COLOR_INC;
				}
			}
			part { name: "over1";
				mouse_events: 0;
				description { state: "default" 0.0;
					rel2.relative: 1.0 0.5;
				}
				description { state: "disabled" 0.0;
					inherit:  "default" 0.0;
				}
			}
			part { name: "over2";
				mouse_events: 1;
				repeat_events: 1;
				ignore_flags: ON_HOLD;
				description { state: "default" 0.0;
				rel1.to: "button_image";
				rel2.to: "button_image";
				}
				description { state: "disabled" 0.0;
					inherit:  "default" 0.0;
					visible: 0;
				}
			}
			part { name: "over3";
				mouse_events: 1;
				repeat_events: 1;
				description { state: "default" 0.0;
				rel1.to: "button_image";
				rel2.to: "button_image";
					color: 255 255 255 0;
				}
				description { state: "clicked" 0.0;
					inherit:  "default" 0.0;
					visible: 1;
					color: 255 255 255 0;
				}
			}
			part { name: "disabler";
				type: RECT;
				description { state: "default" 0.0;
					rel1.to: "button_image";
					rel2.to: "button_image";
					color: 0 0 0 0;
					visible: 0;
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
			}
		}
		programs {
			program { name: "button_click";
				signal: "mouse,down,1";
				source: "over2";
				action: SIGNAL_EMIT "elm,action,press" "";
				after: "button_click_anim";
			}
			program { name: "button_click_anim";
				action: STATE_SET "clicked" 0.0;
				target: "button_image";
				target: "elm.text";
			}
			program { name: "button_unpress";
				action: SIGNAL_EMIT "elm,action,unpress" "";
			}
			program { name: "button_mouseout_clicked";
				signal: "mouse,up,1";
				source: "over3";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "clicked") || !strcmp(st, "focused"))
					{
						emit("elm,action,default,text,set", "");
						set_state(PART:"elm.text", "visible", 0.0);
					}
					if(get_int(button_state) !=1)
						set_state(PART:"button_image", "default", 0.0);
				}
				after: button_unpress;
			}
			program { name: "button_click2";
				signal: "mouse,down,1";
				source: "over3";
				action: STATE_SET "clicked" 0.0;
				target: "over3";
			}
			program { name: "button_unclick2";
				signal: "mouse,clicked,1";
				source: "over3";
				action: STATE_SET "default" 0.0;
				target: "over3";
			}
			program { name: "button_unclick3";
				signal: "mouse,clicked,1";
				source: "over2";
				action: SIGNAL_EMIT "elm,action,click" "";
			}
			program { name: "text_show";
				signal: "elm,state,text,visible";
				source: "elm";
				action: STATE_SET "visible" 0.0;
				target: "elm.text";
			}
			program { name: "text_hide";
				signal: "elm,state,text,hidden";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "elm.text";
			}
			
			program { name: "disable";
				signal: "elm,state,disabled";
				source: "elm";
				action: STATE_SET "disabled" 0.0;
				target: "button_image";
				target: "over1";
				target: "over2";
				target: "disabler";
				after: "disable_text";
			}
			program { name: "disable_text";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "visible"))
						set_state(PART:"elm.text", "disabled_visible", 0.0);
					else
						set_state(PART:"elm.text", "disabled", 0.0);
					set_int(button_state, 1);
				}
			}
			program { name: "enable";
				signal: "elm,state,enabled";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "button_image";
				target: "over1";
				target: "over2";
				target: "disabler";
				after: "enable_text";
			}
			program { name: "enable_text";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "disabled_visible"))
						set_state(PART:"elm.text", "visible", 0.0);
					else
						set_state(PART:"elm.text", "default", 0.0);
					set_int(button_state, 0);
				}
			}
			program { name: "focused";
				//signal: "elm,action,focus";
				//source: "elm";
				action: STATE_SET "focused" 0.0;
				target: "button_image";
				target: "elm.text";
			}
			program { name: "unfocused";
				//signal: "elm,action,unfocus";
				//source: "elm";
				action: STATE_SET "default" 0.0;
				target: "button_image";
				action: STATE_SET "visible" 0.0;
				target: "elm.text";
			}
		}
	}
	
///////////////////////////////////////////////////////////////////////////////////////
	group { name: "elm/button/base/text_only/more";
		images {
			image: "00_button_more.png" COMP;
		}
		script {
			public button_state = 0; //0:enabled, 1: disabled
		}
		parts {
			part { name: "button_image";
				mouse_events: 1;
				scale: 1;
				description { state: "default" 0.0;
					rel1 { to_x: "padding.left"; to_y: "elm.text";}
					rel2 { to_x: "padding.right"; to_y: "elm.text";}
					min: 28 26;
					fixed: 1 1;
					image {
						normal: "00_button_more.png";
						border: 13 13 12 12;
						border_scale: 1;
					}
				}
				description { state: "clicked" 0.0;
					inherit: "default" 0.0;
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
				}		
				description { state: "focused" 0.0;
					inherit: "default" 0.0;
				}
			}
			part { name: "padding.left";
				type: RECT;
				scale: 1;
				description { state: "default" 0.0;
					visible: 0;
					min: 10 1;
					fixed: 1 0;
					color: 0 0 0 0;
					rel1.relative: 0 0;
					rel2 { relative: 0.0 1.0; to_x: "elm.text";}
					align: 1 0;
				}
			}
			part { name: "padding.right";
				type: RECT;
				scale: 1;
				description { state: "default" 0.0;
					visible: 0;
					min: 10 1;
					fixed: 1 0;
					color: 0 0 0 0;
					rel1 { relative: 1.0 0.0; to_x: "elm.text";}
					rel2.relative: 1.0 1.0;
					align: 0 0;
				}
			}
			part {	name: "elm.text";
				type: TEXT;
				effect: SHADOW;
				mouse_events: 0;
				scale: 1;
				description { state: "default" 0.0;
					visible: 0;
					fixed: 1 1;
					align: 0.5 0.5;
					color: BUTTON_MORE_BUTTON_TEXT_NORMAL_COLOR_INC;
					color2: BUTTON_MORE_BUTTON_TEXT_NORMAL_SHAWDOW_COLOR_INC;
					text {
						font: "SLP:style=Bold";
						size: 16;
						min:  1 1;
						max: 0 1;
						align: 0.5 0.5;
					}
				}
				description { state: "visible" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					min: 1 1;
				}
				description { state: "clicked" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					min: 1 1;
					//color: 53 45 39 255;
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					color: 0 0 0 128;
					color2: 0 0 0 0;
					color3: 0 0 0 0;
				}
				description { state: "disabled_visible" 0.0;
					inherit: "default" 0.0;
					color: 0 0 0 128;
					color2: 0 0 0 0;
					color3: 0 0 0 0;
					visible: 1;
					min: 1 1;
				}
				description { state: "focused" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					min: 1 1;
				}
			}
			part { name: "over1";
				mouse_events: 0;
				scale: 1;
				description { state: "default" 0.0;
					rel1.to: "button_image";
					rel2.to: "button_image";
					align: 0.5 0.5;
					fixed: 1 1;
					min: 28 40;
				}
				description { state: "disabled" 0.0;
					inherit:  "default" 0.0;
				}
			}
			part { name: "over2";
				mouse_events: 1;
				repeat_events: 1;
				ignore_flags: ON_HOLD;
				scale: 1;
				description { state: "default" 0.0;
					rel1.to: "button_image";
					rel2.to: "button_image";
					align: 0.5 0.5;
					fixed: 1 1;
					min: 28 40;
				}
				description { state: "disabled" 0.0;
					inherit:  "default" 0.0;
					visible: 0;
				}
			}
			part { name: "over3";
				mouse_events: 1;
				repeat_events: 1;
				scale: 1;
				description { state: "default" 0.0;
					rel1.to: "button_image";
					rel2.to: "button_image";
					color: 255 255 255 0;
					fixed: 1 1;
					min: 28 40;
				}
				description { state: "clicked" 0.0;
					inherit:  "default" 0.0;
					visible: 1;
					color: 255 255 255 0;
				}
			}
			part { name: "disabler";
				type: RECT;
				scale: 1;
				description { state: "default" 0.0;
					rel1.to: "button_image";
					rel2.to: "button_image";
					align: 0.5 0.5;
					fixed: 1 1;
					min: 28 40;
					color: 0 0 0 0;
					visible: 0;
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
			}
		}
		programs {
			program { name: "button_click";
				signal: "mouse,down,1";
				source: "over2";
				action: SIGNAL_EMIT "elm,action,press" "";
				after: "button_click_anim";
			}
			program { name: "button_click_anim";
				action: STATE_SET "clicked" 0.0;
				target: "button_image";
				target: "elm.text";
			}
			program { name: "button_unpress";
				action: SIGNAL_EMIT "elm,action,unpress" "";
			}
			program { name: "button_mouseout_clicked";
				signal: "mouse,up,1";
				source: "over3";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "clicked") || !strcmp(st, "focused"))
					{
						emit("elm,action,default,text,set", "");
						set_state(PART:"elm.text", "visible", 0.0);
					}
					if(get_int(button_state) !=1)
						set_state(PART:"button_image", "default", 0.0);
				}
				after: button_unpress;
			}
			program { name: "button_click2";
				signal: "mouse,down,1";
				source: "over3";
				action: STATE_SET "clicked" 0.0;
				target: "over3";
			}
			program { name: "button_unclick2";
				signal: "mouse,clicked,1";
				source: "over3";
				action: STATE_SET "default" 0.0;
				target: "over3";
			}
			program { name: "button_unclick3";
				signal: "mouse,clicked,1";
				source: "over2";
				action: SIGNAL_EMIT "elm,action,click" "";
			}
			program { name: "text_show";
				signal: "elm,state,text,visible";
				source: "elm";
				action: STATE_SET "visible" 0.0;
				target: "elm.text";
			}
			program { name: "text_hide";
				signal: "elm,state,text,hidden";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "elm.text";
			}
			
			program { name: "disable";
				signal: "elm,state,disabled";
				source: "elm";
				action: STATE_SET "disabled" 0.0;
				target: "button_image";
				target: "over1";
				target: "over2";
				target: "disabler";
				after: "disable_text";
			}
			program { name: "disable_text";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "visible"))
						set_state(PART:"elm.text", "disabled_visible", 0.0);
					else
						set_state(PART:"elm.text", "disabled", 0.0);
					set_int(button_state, 1);
				}
			}
			program { name: "enable";
				signal: "elm,state,enabled";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "button_image";
				target: "over1";
				target: "over2";
				target: "disabler";
				after: "enable_text";
			}
			program { name: "enable_text";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "disabled_visible"))
					set_state(PART:"elm.text", "visible", 0.0);
					else
					set_state(PART:"elm.text", "default", 0.0);
					set_int(button_state, 0);
				}
			}
			program { name: "focused";
				//signal: "elm,action,focus";
				//source: "elm";
				action: STATE_SET "focused" 0.0;
				target: "button_image";
				target: "elm.text";
			}
			program { name: "unfocused";
				//signal: "elm,action,unfocus";
				//source: "elm";
				action: STATE_SET "default" 0.0;
				target: "button_image";
				action: STATE_SET "visible" 0.0;
				target: "elm.text";
			}
		}
	}

///////////////////////////////////////////////////////////////////////////////////////
	group { name: "elm/button/base/navigationbar_backbutton/default";
		images {
			image: "00_winset_btn_prev.png" COMP;
		}
		script {
			public button_state = 0; //0:enabled, 1: disabled
		}
		parts {
			part { name: "button_image";
				mouse_events: 1;
				scale: 1;
				description { state: "default" 0.0;
					min: 16 50;
				}
				description { state: "clicked" 0.0;
					inherit: "default" 0.0;
				}
				description { state: "disabled" 0.0;
					inherit:  "default" 0.0;
				}
				description { state: "focused" 0.0;
					inherit: "default" 0.0;
				}
			}
			part {
				name: "padding_left";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					align: 0.0 0.0;
					rel1.relative: 0.0 0.0;
					rel2.relative: 0.0 1.0;
					min: 5 5;
					fixed: 1 0;
					color: 0 0 0 0;
				}
			}
			part {
				name: "padding_right";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					align: 1.0 0.0;
					rel1.relative: 1.0 0.0;
					rel2.relative: 1.0 1.0;
					min: 5 5;
					fixed: 1 0;
					color: 0 0 0 0;
				}
			}
			part {
				name: "padding_top";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					align: 0.0 0.0;
					rel1.relative: 0.0 0.0;
					rel2.relative: 1.0 0.0;
					min: 5 5;
					fixed: 0 1;
					color: 0 0 0 0;
				}
			}
			part {
				name: "padding_bottom";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					align: 1.0 1.0;
					rel1.relative: 0.0 1.0;
					rel2.relative: 1.0 1.0;
					min: 5 5;
					fixed: 0 1;
					color: 0 0 0 0;
				}
			}
			part {
				name: "btn_prev";
				type: IMAGE;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					visible: 1;
					min: 12 20;
					fixed: 1 1;
					rel1 { relative: 1.0 0.5; to_x: "padding_left"; }
					rel2 { relative: 1.0 0.5; to_x: "padding_left"; }
					align: 0.0 0.5;
					image.normal: "00_winset_btn_prev.png";
				}
			}
			part {
				name: "padding_btn_prev";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0; //when only icon or no icon is there
					align: 0.0 0.5;
					rel1 { relative: 1.0 1.0; to_x: "btn_prev"; to_y: "padding_top"; }
					rel2 { relative: 1.0 0.0; to_x: "btn_prev"; to_y: "padding_bottom"; } 			
					fixed: 1 0;
					min: 5 5;
					color: 0 0 0 0;
				}
			}	
			part {
				name: "icon_rect";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					visible: 1;
					min: 0 40;
					fixed: 1 0;
					rel1 {relative: 0.0 1.0; to_x: "elm.swallow.content"; to_y: "padding_top"; }
					rel2 {relative: 1.0 0.0; to_x: "elm.swallow.content"; to_y: "padding_bottom"; }
					align: 0.0 0.5;
					color: 0 0 0 0;
				}
			} 
			part {
				name: "padding_icon_text";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0; //when only icon or no icon is there
					align: 0.0 0.0;
					rel1 { relative: 1.0 0.0; to: "icon_rect"; }
					rel2 { relative: 1.0 1.0; to: "icon_rect"; } 			
					fixed: 1 0;
					min: 0 0;
					color: 0 0 0 0;
				}
				description { state: "icononly" 0.0;
					inherit: "default" 0.0;
				}
				description { state: "visible" 0.0; //when icon is visible
					align: 0.0 0.0;
					rel1 { relative: 1.0 0.0; to: "icon_rect"; }
					rel2 { relative: 1.0 1.0; to: "icon_rect"; } 			
					fixed: 1 0;
					min: 5 0;
					color: 0 0 0 0;
				}
			}					
			part { name: "elm.swallow.content";
				type: SWALLOW;
				scale: 1;
				description { state: "default" 0.0;
					visible: 0;
					align: 0.0 0.5;
					rel1 {relative: 1.0 1.0; to_x: "padding_btn_prev"; to_y: "padding_top"; }
					rel2 {relative: 1.0 0.0; to_x: "padding_btn_prev"; to_y: "padding_bottom"; }
					fixed: 1 0;
				}
				description { state: "visible" 0.0;
					fixed: 1 0;
					visible: 1;
					align: 0.0 0.5;
					rel1 {relative: 1.0 1.0; to_x: "padding_btn_prev"; to_y: "padding_top"; }
					rel2 {relative: 1.0 0.0; to_x: "padding_btn_prev"; to_y: "padding_bottom"; }
					aspect: 1.0 1.0;
					aspect_preference: VERTICAL;
				}
				description { state: "icononly" 0.0;;
					visible: 1;
					min: 40 40;
					rel1 {relative: 1.0 1.0; to_x: "padding_btn_prev"; to_y: "padding_top"; }
					rel2 {relative: 0.0 0.0; to_x: "padding_right"; to_y: "padding_bottom"; }
					align: 0.5 0.5;
					aspect: 1.0 1.0;
					aspect_preference: VERTICAL;
				}
			}
			part { name: "elm.text";
				type:          TEXT;
				effect:        SHADOW;
				mouse_events:  0;
				scale: 1;
				description { state: "default" 0.0;
					visible: 0;
					rel1 { relative: 1.0 1.0; to_x: "padding_icon_text"; to_y: "padding_top"; }
					rel2 { relative: 0.0 0.0; to_x: "padding_right"; to_y:"padding_bottom"; }
					align: 0.0 0.0;
					color: BUTTON_NAVIBAR_BACK_BUTTON_TEXT_NORMAL_COLOR_INC;
					color2: BUTTON_NAVIBAR_BACK_BUTTON_TEXT_NORMAL_SHADOW_COLOR_INC;
					text {
						font: "SLP:style=Medium";
						size: 24;
						min:  1 0;
						align: 0.5 0.9;
						max: 1 0;
					}
				}
				description { state: "visible" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					min: 107 40;
				}
				description { state: "clicked" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					min: 0 0;
					color: BUTTON_NAVIBAR_BACK_BUTTON_TEXT_PRESSED_COLOR_INC;
					color2: BUTTON_NAVIBAR_BACK_BUTTON_TEXT_PRESSED_SHADOW_COLOR_INC;
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					color: 0 0 0 128;
					color3: 0 0 0 0;
				}
				description { state: "disabled_visible" 0.0;
					inherit: "default" 0.0;
					color: 0 0 0 128;
					color3: 0 0 0 0;
					visible: 1;
				}
				description { state: "focused" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					min: 0 0;
					color: BUTTON_NAVIBAR_BACK_BUTTON_TEXT_FOCUSED_COLOR_INC;
					color2: BUTTON_NAVIBAR_BACK_BUTTON_TEXT_FOCUSED_SHADOW_COLOR_INC;
				}
			}
			part { name: "over2";
				type: RECT;
				mouse_events: 1;
				repeat_events: 1;
				ignore_flags: ON_HOLD;
				description { state: "default" 0.0;
					color: 0 0 0 0;
					align: 0 0;
					rel2.to: "elm.text";
				}
				description { state: "disabled" 0.0;
					inherit:  "default" 0.0;
					visible: 0;
				}
			}
			part { name: "over3";
				type: RECT;
				mouse_events: 1;
				repeat_events: 1;
				description { state: "default" 0.0;
					color: 0 0 0 0;
					rel2.to: "elm.text";
					align: 0 0;
				}
				description { state: "clicked" 0.0;
					inherit:  "default" 0.0;
					visible: 1;
				}
			}
			part { name: "disabler";
				type: RECT;
				description { state: "default" 0.0;
					color: 0 0 0 0;
					visible: 0;
					rel2.to: "elm.text";
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
			}
		}
		programs {
			program { name: "button_click";
				signal: "mouse,down,1";
				source: "over2";
				action: SIGNAL_EMIT "elm,action,press" "";
				after: "button_click_anim";
			}
			program { name: "button_click_anim";
				action: STATE_SET "clicked" 0.0;
				target: "button_image";
				after: "text_clicked";
			}
			program { name: "text_clicked";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "visible"))
						set_state(PART:"elm.text", "clicked", 0.0);
				}
			}
			program { name: "button_unpress";
				action: SIGNAL_EMIT "elm,action,unpress" "";
			}
			program { name: "button_mouseout_clicked";
				signal: "mouse,up,1";
				source: "over3";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.swallow.content", st, 30, vl);
					if (strcmp(st, "icononly"))
					{
						emit("elm,action,default,text,set", "");
						set_state(PART:"elm.text", "visible", 0.0);
					}
					if(get_int(button_state) !=1)
						set_state(PART:"button_image", "default", 0.0);
				}
				after: button_unpress;
			}
			program { name: "button_click2";
				signal: "mouse,down,1";
				source: "over3";
				action: STATE_SET "clicked" 0.0;
				target: "over3";
			}
			program { name: "button_unclick2";
				signal: "mouse,clicked,1";
				source: "over3";
				action: STATE_SET "default" 0.0;
				target: "over3";
			}
			program { name: "button_unclick3";
				signal: "mouse,clicked,1";
				source: "over2";
				action: SIGNAL_EMIT "elm,action,click" "";
			}
			program { name: "text_show";
				signal: "elm,state,text,visible";
				source: "elm";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.swallow.content", st, 30, vl);
					if (!strcmp(st, "icononly"))
					{
						set_state(PART:"elm.swallow.content", "visible", 0.0);
						set_state(PART:"padding_icon_text", "visible", 0.0);
					}
					set_state(PART:"elm.text", "visible", 0.0);
				}
			}
			program { name: "text_hide";
				signal: "elm,state,text,hidden";
				source: "elm";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.swallow.content", st, 30, vl);
					if (!strcmp(st, "visible"))
					{
						set_state(PART:"elm.swallow.content", "icononly", 0.0);
						set_state(PART:"padding_icon_text", "icononly", 0.0);
					}
					set_state(PART:"elm.text", "default", 0.0);
				}
			}
			program { name: "icon_show";
				signal: "elm,state,icon,visible";
				source: "elm";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "visible"))
					{
						set_state(PART:"elm.swallow.content", "visible", 0.0);
						set_state(PART:"padding_icon_text", "visible", 0.0);
					}
					else
					{
						set_state(PART:"elm.swallow.content", "icononly", 0.0);
						set_state(PART:"padding_icon_text", "icononly", 0.0);
					}
				}
			}
			program { name: "icon_hide";
				signal: "elm,state,icon,hidden";
				source: "elm";
				action:  STATE_SET "default" 0.0;
				target: "elm.swallow.content";
			}
			program { name: "disable";
				signal: "elm,state,disabled";
				source: "elm";
				action: STATE_SET "disabled" 0.0;
				target: "button_image";
				target: "over2";
				target: "disabler";
				after: "disable_text";
			}
			program { name: "disable_text";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "visible"))
						set_state(PART:"elm.text", "disabled_visible", 0.0);
					else
						set_state(PART:"elm.text", "disabled", 0.0);
					set_int(button_state, 1);
				}
			}
			program { name: "enable";
				signal: "elm,state,enabled";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "button_image";
				target: "over2";
				target: "disabler";
				after: "enable_text";
			}
			program { name: "enable_text";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "disabled_visible"))
						set_state(PART:"elm.text", "visible", 0.0);
					else
						set_state(PART:"elm.text", "default", 0.0);
					set_int(button_state, 0);
				}
			}
			program { name: "focused";
				//signal: "elm,action,focus";
				//source: "elm";
				action: STATE_SET "focused" 0.0;
				target: "button_image";
				target: "elm.text";
			}
			program { name: "unfocused";
				//signal: "elm,action,unfocus";
				//source: "elm";
				action: STATE_SET "default" 0.0;
				target: "button_image";
				after: "unfocus_text";
			}
			program { name: "unfocus_text";
				action: STATE_SET "visible" 0.0;
				target: "elm.text";
			}
		}
	}

	///////////////////////////////////////////////////////////////////////////////////////
	group { name: "elm/button/base/navigationbar_backbutton/title_ellipsize";
		alias: "elm/button/base/navigationbar_backbutton/extended_fnbtn_top_style";
		alias: "elm/button/base/navigationbar_backbutton/center_titleobj";
		alias: "elm/button/base/navigationbar_backbutton/title_transparent_ellipsize";
		images {
			image: "00_winset_btn_prev.png" COMP;
		}
		script {
			public button_state = 0; //0:enabled, 1: disabled
		}
		parts {
			part { name: "button_image";
				mouse_events: 1;
				scale: 1;
				description { state: "default" 0.0;
					min: 16 50;
				}
				description { state: "clicked" 0.0;
					inherit: "default" 0.0;
				}
				description { state: "disabled" 0.0;
					inherit:  "default" 0.0;
				}
				description { state: "focused" 0.0;
					inherit: "default" 0.0;
				}
			}
			part {
				name: "padding_left";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					align: 0.0 0.0;
					rel1.relative: 0.0 0.0;
					rel2.relative: 0.0 1.0;
					min: 5 5;
					fixed: 1 0;
					color: 0 0 0 0;
				}
			}
			part {
				name: "padding_right";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					align: 1.0 0.0;
					rel1.relative: 1.0 0.0;
					rel2.relative: 1.0 1.0;
					min: 5 5;
					fixed: 1 0;
					color: 0 0 0 0;
				}
			}
			part {
				name: "padding_top";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					align: 0.0 0.0;
					rel1.relative: 0.0 0.0;
					rel2.relative: 1.0 0.0;
					min: 5 5;
					fixed: 0 1;
					color: 0 0 0 0;
				}
			}
			part {
				name: "padding_bottom";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					align: 1.0 1.0;
					rel1.relative: 0.0 1.0;
					rel2.relative: 1.0 1.0;
					min: 5 5;
					fixed: 0 1;
					color: 0 0 0 0;
				}
			}
			part {
				name: "btn_prev";
				type: IMAGE;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					visible: 1;
					min: 12 20;
					fixed: 1 1;
					rel1 { relative: 1.0 0.5; to_x: "padding_left"; }
					rel2 { relative: 1.0 0.5; to_x: "padding_left"; }
					align: 0.0 0.5;
					image.normal: "00_winset_btn_prev.png";
				}
			}
			part {
				name: "padding_btn_prev";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0; //when only icon or no icon is there
					align: 0.0 0.5;
					rel1 { relative: 1.0 1.0; to_x: "btn_prev"; to_y: "padding_top"; }
					rel2 { relative: 1.0 0.0; to_x: "btn_prev"; to_y: "padding_bottom"; } 			
					fixed: 1 0;
					min: 5 5;
					color: 0 0 0 0;
				}
			}	
			part {
				name: "icon_rect";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					visible: 1;
					min: 0 40;
					fixed: 1 0;
					rel1 {relative: 0.0 1.0; to_x: "elm.swallow.content"; to_y: "padding_top"; }
					rel2 {relative: 1.0 0.0; to_x: "elm.swallow.content"; to_y: "padding_bottom"; }
					align: 0.0 0.5;
					color: 0 0 0 0;
				}
			} 
			part {
				name: "padding_icon_text";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0; //when only icon or no icon is there
					align: 0.0 0.0;
					rel1 { relative: 1.0 0.0; to: "icon_rect"; }
					rel2 { relative: 1.0 1.0; to: "icon_rect"; } 			
					fixed: 1 0;
					min: 0 0;
					color: 0 0 0 0;
				}
				description { state: "icononly" 0.0;
					inherit: "default" 0.0;
				}
				description { state: "visible" 0.0; //when icon is visible
					align: 0.0 0.0;
					rel1 { relative: 1.0 0.0; to: "icon_rect"; }
					rel2 { relative: 1.0 1.0; to: "icon_rect"; } 			
					fixed: 1 0;
					min: 5 0;
					color: 0 0 0 0;
				}
			}					
			part { name: "elm.swallow.content";
				type: SWALLOW;
				scale: 1;
				description { state: "default" 0.0;
					visible: 0;
					align: 0.0 0.5;
					rel1 {relative: 1.0 1.0; to_x: "padding_btn_prev"; to_y: "padding_top"; }
					rel2 {relative: 1.0 0.0; to_x: "padding_btn_prev"; to_y: "padding_bottom"; }
					fixed: 1 0;
				}
				description { state: "visible" 0.0;
					fixed: 1 0;
					visible: 1;
					align: 0.0 0.5;
					rel1 {relative: 1.0 1.0; to_x: "padding_btn_prev"; to_y: "padding_top"; }
					rel2 {relative: 1.0 0.0; to_x: "padding_btn_prev"; to_y: "padding_bottom"; }
					aspect: 1.0 1.0;
					aspect_preference: VERTICAL;
				}
				description { state: "icononly" 0.0;;
					visible: 1;
					min: 40 40;
					rel1 {relative: 1.0 1.0; to_x: "padding_btn_prev"; to_y: "padding_top"; }
					rel2 {relative: 0.0 0.0; to_x: "padding_right"; to_y: "padding_bottom"; }
					align: 0.5 0.5;
					aspect: 1.0 1.0;
					aspect_preference: VERTICAL;
				}
			}
			part { name: "elm.text";
				type:          TEXT;
				effect:        SHADOW;
				mouse_events:  0;
				scale: 1;
				description { state: "default" 0.0;
					visible: 0;
					rel1 { relative: 1.0 1.0; to_x: "padding_icon_text"; to_y: "padding_top"; }
					rel2 { relative: 0.0 0.0; to_x: "padding_right"; to_y:"padding_bottom"; }
					align: 0.0 0.0;
					color: BUTTON_NAVIBAR_BACK_BUTTON_TEXT_NORMAL_COLOR_INC;
					color2: BUTTON_NAVIBAR_BACK_BUTTON_TEXT_NORMAL_SHADOW_COLOR_INC;
					text {
						font: "SLP:style=Medium";
						size: 24;
						min:  0 0;
						align: 0.5 0.9;
						max: 1 0;
					}
				}
				description { state: "visible" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					min: 107 40;
				}
				description { state: "clicked" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					min: 0 0;
					color: BUTTON_NAVIBAR_BACK_BUTTON_TEXT_PRESSED_COLOR_INC;
					color2: BUTTON_NAVIBAR_BACK_BUTTON_TEXT_PRESSED_SHADOW_COLOR_INC;
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					color: 0 0 0 128;
					color3: 0 0 0 0;
				}
				description { state: "disabled_visible" 0.0;
					inherit: "default" 0.0;
					color: 0 0 0 128;
					color3: 0 0 0 0;
					visible: 1;
				}
				description { state: "focused" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					min: 0 0;
					color: BUTTON_NAVIBAR_BACK_BUTTON_TEXT_FOCUSED_COLOR_INC;
					color2: BUTTON_NAVIBAR_BACK_BUTTON_TEXT_FOCUSED_SHADOW_COLOR_INC;
				}
			}
			part { name: "over2";
				type: RECT;
				mouse_events: 1;
				repeat_events: 1;
				ignore_flags: ON_HOLD;
				description { state: "default" 0.0;
					color: 0 0 0 0;
					align: 0 0;
					rel2.to: "elm.text";
				}
				description { state: "disabled" 0.0;
					inherit:  "default" 0.0;
					visible: 0;
				}
			}
			part { name: "over3";
				type: RECT;
				mouse_events: 1;
				repeat_events: 1;
				description { state: "default" 0.0;
					color: 0 0 0 0;
					rel2.to: "elm.text";
					align: 0 0;
				}
				description { state: "clicked" 0.0;
					inherit:  "default" 0.0;
					visible: 1;
				}
			}
			part { name: "disabler";
				type: RECT;
				description { state: "default" 0.0;
					color: 0 0 0 0;
					visible: 0;
					rel2.to: "elm.text";
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
			}
		}
		programs {
			program { name: "button_click";
				signal: "mouse,down,1";
				source: "over2";
				action: SIGNAL_EMIT "elm,action,press" "";
				after: "button_click_anim";
			}
			program { name: "button_click_anim";
				action: STATE_SET "clicked" 0.0;
				target: "button_image";
				after: "text_clicked";
			}
			program { name: "text_clicked";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "visible"))
						set_state(PART:"elm.text", "clicked", 0.0);
				}
			}
			program { name: "button_unpress";
				action: SIGNAL_EMIT "elm,action,unpress" "";
			}
			program { name: "button_mouseout_clicked";
				signal: "mouse,up,1";
				source: "over3";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.swallow.content", st, 30, vl);
					if (strcmp(st, "icononly"))
					{
						emit("elm,action,default,text,set", "");
						set_state(PART:"elm.text", "visible", 0.0);
					}
					if(get_int(button_state) !=1)
						set_state(PART:"button_image", "default", 0.0);
				}
				after: button_unpress;
			}
			program { name: "button_click2";
				signal: "mouse,down,1";
				source: "over3";
				action: STATE_SET "clicked" 0.0;
				target: "over3";
			}
			program { name: "button_unclick2";
				signal: "mouse,clicked,1";
				source: "over3";
				action: STATE_SET "default" 0.0;
				target: "over3";
			}
			program { name: "button_unclick3";
				signal: "mouse,clicked,1";
				source: "over2";
				action: SIGNAL_EMIT "elm,action,click" "";
			}
			program { name: "text_show";
				signal: "elm,state,text,visible";
				source: "elm";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.swallow.content", st, 30, vl);
					if (!strcmp(st, "icononly"))
					{
						set_state(PART:"elm.swallow.content", "visible", 0.0);
						set_state(PART:"padding_icon_text", "visible", 0.0);
					}
					set_state(PART:"elm.text", "visible", 0.0);
				}
			}
			program { name: "text_hide";
				signal: "elm,state,text,hidden";
				source: "elm";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.swallow.content", st, 30, vl);
					if (!strcmp(st, "visible"))
					{
						set_state(PART:"elm.swallow.content", "icononly", 0.0);
						set_state(PART:"padding_icon_text", "icononly", 0.0);
					}
					set_state(PART:"elm.text", "default", 0.0);
				}
			}
			program { name: "icon_show";
				signal: "elm,state,icon,visible";
				source: "elm";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "visible"))
					{
						set_state(PART:"elm.swallow.content", "visible", 0.0);
						set_state(PART:"padding_icon_text", "visible", 0.0);
					}
					else
					{
						set_state(PART:"elm.swallow.content", "icononly", 0.0);
						set_state(PART:"padding_icon_text", "icononly", 0.0);
					}
				}
			}
			program { name: "icon_hide";
				signal: "elm,state,icon,hidden";
				source: "elm";
				action:  STATE_SET "default" 0.0;
				target: "elm.swallow.content";
			}
			program { name: "disable";
				signal: "elm,state,disabled";
				source: "elm";
				action: STATE_SET "disabled" 0.0;
				target: "button_image";
				target: "over2";
				target: "disabler";
				after: "disable_text";
			}
			program { name: "disable_text";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "visible"))
						set_state(PART:"elm.text", "disabled_visible", 0.0);
					else
						set_state(PART:"elm.text", "disabled", 0.0);
					set_int(button_state, 1);
				}
			}
			program { name: "enable";
				signal: "elm,state,enabled";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "button_image";
				target: "over2";
				target: "disabler";
				after: "enable_text";
			}
			program { name: "enable_text";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "disabled_visible"))
						set_state(PART:"elm.text", "visible", 0.0);
					else
						set_state(PART:"elm.text", "default", 0.0);
					set_int(button_state, 0);
				}
			}
			program { name: "focused";
				//signal: "elm,action,focus";
				//source: "elm";
				action: STATE_SET "focused" 0.0;
				target: "button_image";
				target: "elm.text";
			}
			program { name: "unfocused";
				//signal: "elm,action,unfocus";
				//source: "elm";
				action: STATE_SET "default" 0.0;
				target: "button_image";
				after: "unfocus_text";
			}
			program { name: "unfocus_text";
				action: STATE_SET "visible" 0.0;
				target: "elm.text";
			}
		}
	}

	
///////////////////////////////////////////////////////////////////////////////////////
	group { name: "elm/button/base/navigationbar_backbutton/multiline_title_subtitle";
		images {
			image: "00_winset_btn_prev.png" COMP;
		}
		script {
			public button_state = 0; //0:enabled, 1: disabled
		}
		parts {
			part { name: "button_image";
				mouse_events: 1;
				scale: 1;
				description { state: "default" 0.0;
					min: 16 50;
				}
				description { state: "clicked" 0.0;
					inherit: "default" 0.0;
				}
				description { state: "disabled" 0.0;
					inherit:  "default" 0.0;
				}
				description { state: "focused" 0.0;
					inherit: "default" 0.0;
				}
			}
			part {
				name: "padding_left";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					align: 0.0 0.0;
					rel1.relative: 0.0 0.0;
					rel2.relative: 0.0 1.0;
					min: 5 5;
					fixed: 1 0;
					color: 0 0 0 0;
				}
			}
			part {
				name: "padding_right";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					align: 1.0 0.0;
					rel1.relative: 1.0 0.0;
					rel2.relative: 1.0 1.0;
					min: 5 5;
					fixed: 1 0;
					color: 0 0 0 0;
				}
			}
			part {
				name: "padding_top";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					align: 0.0 0.0;
					rel1.relative: 0.0 0.0;
					rel2.relative: 1.0 0.0;
					min: 5 5;
					fixed: 0 1;
					color: 0 0 0 0;
				}
			}
			part {
				name: "padding_bottom";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					align: 1.0 1.0;
					rel1.relative: 0.0 1.0;
					rel2.relative: 1.0 1.0;
					min: 5 5;
					fixed: 0 1;
					color: 0 0 0 0;
				}
			}
			part {
				name: "btn_prev";
				type: IMAGE;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					visible: 1;
					min: 12 20;
					fixed: 1 1;
					rel1 { relative: 1.0 0.5; to_x: "padding_left"; }
					rel2 { relative: 1.0 0.5; to_x: "padding_left"; }
					align: 0.0 0.5;
					image.normal: "00_winset_btn_prev.png";
				}
			}
			part {
				name: "padding_btn_prev";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0; //when only icon or no icon is there
					align: 0.0 0.5;
					rel1 { relative: 1.0 1.0; to_x: "btn_prev"; to_y: "padding_top"; }
					rel2 { relative: 1.0 0.0; to_x: "btn_prev"; to_y: "padding_bottom"; } 			
					fixed: 1 0;
					min: 5 5;
					color: 0 0 0 0;
				}
			}	
			part {
				name: "icon_rect";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					visible: 1;
					min: 0 40;
					fixed: 1 0;
					rel1 {relative: 0.0 1.0; to_x: "elm.swallow.content"; to_y: "padding_top"; }
					rel2 {relative: 1.0 0.0; to_x: "elm.swallow.content"; to_y: "padding_bottom"; }
					align: 0.0 0.5;
					color: 0 0 0 0;
				}
			} 
			part {
				name: "padding_icon_text";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0; //when only icon or no icon is there
					align: 0.0 0.0;
					rel1 { relative: 1.0 0.0; to: "icon_rect"; }
					rel2 { relative: 1.0 1.0; to: "icon_rect"; } 			
					fixed: 1 0;
					min: 0 0;
					color: 0 0 0 0;
				}
				description { state: "icononly" 0.0;
					inherit: "default" 0.0;
				}
				description { state: "visible" 0.0; //when icon is visible
					align: 0.0 0.0;
					rel1 { relative: 1.0 0.0; to: "icon_rect"; }
					rel2 { relative: 1.0 1.0; to: "icon_rect"; } 			
					fixed: 1 0;
					min: 5 0;
					color: 0 0 0 0;
				}
			}					
			part { name: "elm.swallow.content";
				type: SWALLOW;
				scale: 1;
				description { state: "default" 0.0;
					visible: 0;
					align: 0.0 0.5;
					rel1 {relative: 1.0 1.0; to_x: "padding_btn_prev"; to_y: "padding_top"; }
					rel2 {relative: 1.0 0.0; to_x: "padding_btn_prev"; to_y: "padding_bottom"; }
					fixed: 1 0;
				}
				description { state: "visible" 0.0;
					fixed: 1 0;
					visible: 1;
					align: 0.0 0.5;
					rel1 {relative: 1.0 1.0; to_x: "padding_btn_prev"; to_y: "padding_top"; }
					rel2 {relative: 1.0 0.0; to_x: "padding_btn_prev"; to_y: "padding_bottom"; }
					aspect: 1.0 1.0;
					aspect_preference: VERTICAL;
				}
				description { state: "icononly" 0.0;;
					visible: 1;
					min: 40 40;
					rel1 {relative: 1.0 1.0; to_x: "padding_btn_prev"; to_y: "padding_top"; }
					rel2 {relative: 0.0 0.0; to_x: "padding_right"; to_y: "padding_bottom"; }
					align: 0.5 0.5;
					aspect: 1.0 1.0;
					aspect_preference: VERTICAL;
				}
			}
			part { name: "elm.text";
				type:          TEXTBLOCK;
				effect:        SHADOW;
				mouse_events:  0;
				scale: 1;
				description { state: "default" 0.0;
					visible: 0;
					rel1 { relative: 1.0 1.0; to_x: "padding_icon_text"; to_y: "padding_top"; }
					rel2 { relative: 0.0 0.0; to_x: "padding_right"; to_y:"padding_bottom"; }
					align: 0.5 0.5;
					color: BUTTON_NAVIBAR_BACK_BUTTON_TEXT_NORMAL_COLOR_INC;
					color2: BUTTON_NAVIBAR_BACK_BUTTON_TEXT_NORMAL_SHADOW_COLOR_INC;
					text {
						style: "btn_back_navi_style";
						min:  0 0;
						max: 0 1;
					}
				}
				description { state: "visible" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					min: 90 40;
				}
				description { state: "clicked" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					min: 0 0;
					color: BUTTON_NAVIBAR_BACK_BUTTON_TEXT_PRESSED_COLOR_INC;
					color2: BUTTON_NAVIBAR_BACK_BUTTON_TEXT_PRESSED_SHADOW_COLOR_INC;
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					color: 0 0 0 128;
					color3: 0 0 0 0;
				}
				description { state: "disabled_visible" 0.0;
					inherit: "default" 0.0;
					color: 0 0 0 128;
					color3: 0 0 0 0;
					visible: 1;
				}
				description { state: "focused" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					min: 0 0;
					color: BUTTON_NAVIBAR_BACK_BUTTON_TEXT_FOCUSED_COLOR_INC;
					color2: BUTTON_NAVIBAR_BACK_BUTTON_TEXT_FOCUSED_SHADOW_COLOR_INC;
				}
			}
			part { name: "over2";
				type: RECT;
				mouse_events: 1;
				repeat_events: 1;
				ignore_flags: ON_HOLD;
				description { state: "default" 0.0;
					color: 0 0 0 0;
				}
				description { state: "disabled" 0.0;
					inherit:  "default" 0.0;
					visible: 0;
				}
			}
			part { name: "over3";
				type: RECT;
				mouse_events: 1;
				repeat_events: 1;
				description { state: "default" 0.0;
					color: 0 0 0 0;
				}
				description { state: "clicked" 0.0;
					inherit:  "default" 0.0;
					visible: 1;
				}
			}
			part { name: "disabler";
				type: RECT;
				description { state: "default" 0.0;
					color: 0 0 0 0;
					visible: 0;
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
			}
		}
		programs {
			program { name: "button_click";
				signal: "mouse,down,1";
				source: "over2";
				action: SIGNAL_EMIT "elm,action,press" "";
				after: "button_click_anim";
			}
			program { name: "button_click_anim";
				action: STATE_SET "clicked" 0.0;
				target: "button_image";
				after: "text_clicked";
			}
			program { name: "text_clicked";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "visible"))
						set_state(PART:"elm.text", "clicked", 0.0);
				}
			}
			program { name: "button_unpress";
				action: SIGNAL_EMIT "elm,action,unpress" "";
			}
			program { name: "button_mouseout_clicked";
				signal: "mouse,up,1";
				source: "over3";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.swallow.content", st, 30, vl);
					if (strcmp(st, "icononly"))
					{
						emit("elm,action,default,text,set", "");
						set_state(PART:"elm.text", "visible", 0.0);
					}
					if(get_int(button_state) !=1)
						set_state(PART:"button_image", "default", 0.0);
				}
				after: button_unpress;
			}
			program { name: "button_click2";
				signal: "mouse,down,1";
				source: "over3";
				action: STATE_SET "clicked" 0.0;
				target: "over3";
			}
			program { name: "button_unclick2";
				signal: "mouse,clicked,1";
				source: "over3";
				action: STATE_SET "default" 0.0;
				target: "over3";
			}
			program { name: "button_unclick3";
				signal: "mouse,clicked,1";
				source: "over2";
				action: SIGNAL_EMIT "elm,action,click" "";
			}
			program { name: "text_show";
				signal: "elm,state,text,visible";
				source: "elm";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.swallow.content", st, 30, vl);
					if (!strcmp(st, "icononly"))
					{
						set_state(PART:"elm.swallow.content", "visible", 0.0);
						set_state(PART:"padding_icon_text", "visible", 0.0);
					}
					set_state(PART:"elm.text", "visible", 0.0);
				}
			}
			program { name: "text_hide";
				signal: "elm,state,text,hidden";
				source: "elm";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.swallow.content", st, 30, vl);
					if (!strcmp(st, "visible"))
					{
						set_state(PART:"elm.swallow.content", "icononly", 0.0);
						set_state(PART:"padding_icon_text", "icononly", 0.0);
					}
					set_state(PART:"elm.text", "default", 0.0);
				}
			}
			program { name: "icon_show";
				signal: "elm,state,icon,visible";
				source: "elm";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "visible"))
					{
						set_state(PART:"elm.swallow.content", "visible", 0.0);
						set_state(PART:"padding_icon_text", "visible", 0.0);
					}
					else
					{
						set_state(PART:"elm.swallow.content", "icononly", 0.0);
						set_state(PART:"padding_icon_text", "icononly", 0.0);
					}
				}
			}
			program { name: "icon_hide";
				signal: "elm,state,icon,hidden";
				source: "elm";
				action:  STATE_SET "default" 0.0;
				target: "elm.swallow.content";
			}
			program { name: "disable";
				signal: "elm,state,disabled";
				source: "elm";
				action: STATE_SET "disabled" 0.0;
				target: "button_image";
				target: "over2";
				target: "disabler";
				after: "disable_text";
			}
			program { name: "disable_text";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "visible"))
						set_state(PART:"elm.text", "disabled_visible", 0.0);
					else
						set_state(PART:"elm.text", "disabled", 0.0);
					set_int(button_state, 1);
				}
			}
			program { name: "enable";
				signal: "elm,state,enabled";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "button_image";
				target: "over2";
				target: "disabler";
				after: "enable_text";
			}
			program { name: "enable_text";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "disabled_visible"))
						set_state(PART:"elm.text", "visible", 0.0);
					else
						set_state(PART:"elm.text", "default", 0.0);
					set_int(button_state, 0);
				}
			}
			program { name: "focused";
				//signal: "elm,action,focus";
				//source: "elm";
				action: STATE_SET "focused" 0.0;
				target: "button_image";
				target: "elm.text";
			}
			program { name: "unfocused";
				//signal: "elm,action,unfocus";
				//source: "elm";
				action: STATE_SET "default" 0.0;
				target: "button_image";
				after: "unfocus_text";
			}
			program { name: "unfocus_text";
				action: STATE_SET "visible" 0.0;
				target: "elm.text";
			}
		}
	}
/*
		Sound and Haptic
*/
///////////////////////////////////////////////////////////////////////////////////////
	group { name: "elm/button/base/sound/default";
		images {
			image: "00_button_03_normal.png" COMP;
			image: "00_button_03_press.png" COMP;
			image: "00_button_03_focus.png" COMP;
		}
		script {
			public button_state = 0; //0:enabled, 1: disabled
		}
		parts {
			part { name: "button_image";
				mouse_events: 1;
				scale: 1;
				description { state: "default" 0.0;
					min: 16 50;
					image {
						normal: "00_button_03_normal.png";
						border: 7 7 7 7;
						border_scale: 1;
					}
				}
				description { state: "clicked" 0.0;
					inherit: "default" 0.0;
					image.normal: "00_button_03_press.png";
				}
				description { state: "disabled" 0.0;
					inherit:  "default" 0.0;
				}
				description { state: "focused" 0.0;
					inherit: "default" 0.0;
					image.normal: "00_button_03_focus.png";
				}
			}
			part {
				name: "padding_left";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					align: 0.0 0.0;
					rel1.relative: 0.0 0.0;
					rel2.relative: 0.0 1.0;
					min: 5 5;
					fixed: 1 0;
					color: 0 0 0 0;
				}
			}
			part {
				name: "padding_right";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					align: 1.0 0.0;
					rel1.relative: 1.0 0.0;
					rel2.relative: 1.0 1.0;
					min: 5 5;
					fixed: 1 0;
					color: 0 0 0 0;
				}
			}
			part {
				name: "padding_top";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					align: 0.0 0.0;
					rel1.relative: 0.0 0.0;
					rel2.relative: 1.0 0.0;
					min: 5 5;
					fixed: 0 1;
					color: 0 0 0 0;
				}
			}
			part {
				name: "padding_bottom";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					align: 1.0 1.0;
					rel1.relative: 0.0 1.0;
					rel2.relative: 1.0 1.0;
					min: 5 5;
					fixed: 0 1;
					color: 0 0 0 0;
				}
			}
			part {
				name: "icon_rect";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					visible: 1;
					min: 0 40;
					fixed: 1 0;
					rel1 {relative: 0.0 1.0; to_x: "elm.swallow.content"; to_y: "padding_top"; }
					rel2 {relative: 1.0 0.0; to_x: "elm.swallow.content"; to_y: "padding_bottom"; }
					align: 0.0 0.5;
					color: 0 0 0 0;
				}
			} 
			part {
				name: "padding_icon_text";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0; //when only icon or no icon is there
					align: 0.0 0.0;
					rel1 { relative: 1.0 0.0; to: "icon_rect"; }
					rel2 { relative: 1.0 1.0; to: "icon_rect"; } 			
					fixed: 1 0;
					min: 0 0;
					color: 0 0 0 0;
				}
				description { state: "icononly" 0.0;
					inherit: "default" 0.0;
				}
				description { state: "visible" 0.0; //when icon is visible
					align: 0.0 0.0;
					rel1 { relative: 1.0 0.0; to: "icon_rect"; }
					rel2 { relative: 1.0 1.0; to: "icon_rect"; } 			
					fixed: 1 0;
					min: 5 0;
					color: 0 0 0 0;
				}
			}					
			part { name: "elm.swallow.content";
				type: SWALLOW;
				scale: 1;
				description { state: "default" 0.0;
					visible: 0;
					align: 0.0 0.5;
					rel1 {relative: 1.0 1.0; to_x: "padding_left"; to_y: "padding_top"; }
					rel2 {relative: 1.0 0.0; to_x: "padding_left"; to_y: "padding_bottom"; }
					fixed: 1 0;
				}
				description { state: "visible" 0.0;
					fixed: 1 0;
					visible: 1;
					align: 0.0 0.5;
					rel1 {relative: 1.0 1.0; to_x: "padding_left"; to_y: "padding_top"; }
					rel2 {relative: 1.0 0.0; to_x: "padding_left"; to_y: "padding_bottom"; }
					aspect: 1.0 1.0;
					aspect_preference: VERTICAL;
				}
				description { state: "icononly" 0.0;;
					visible: 1;
					min: 40 40;
					rel1 {relative: 1.0 1.0; to_x: "padding_left"; to_y: "padding_top"; }
					rel2 {relative: 0.0 0.0; to_x: "padding_right"; to_y: "padding_bottom"; }
					align: 0.5 0.5;
					aspect: 1.0 1.0;
					aspect_preference: VERTICAL;
				}
			}
			part { name: "elm.text";
				type:          TEXT;
				effect:        SHADOW;
				mouse_events:  0;
				scale: 1;
				description { state: "default" 0.0;
					visible: 0;
					rel1 { relative: 1.0 1.0; to_x: "padding_icon_text"; to_y: "padding_top"; }
					rel2 { relative: 0.0 0.0; to_x: "padding_right"; to_y:"padding_bottom"; }
					align: 0.5 0.5;
					color: 90 73 40 255;
					color2: 255 255 255 255;				
					text {
						font: FONT_MED;
						size: 24;
						min:  0 0;
						align: 0.5 0.5;
						max: 1 0;
					}
				}
				description { state: "visible" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					min: 90 40;
				}
				description { state: "clicked" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					min: 0 0;
					color: 255 255 255 255;
					color2: 0 0 0 102;
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					color: 0 0 0 128;
					color3: 0 0 0 0;
				}
				description { state: "disabled_visible" 0.0;
					inherit: "default" 0.0;
					color: 0 0 0 128;
					color3: 0 0 0 0;
					visible: 1;
				}
				description { state: "focused" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					min: 0 0;
					color: 255 255 255 255;
					color2: 0 0 0 102;
				}
			}
			part { name: "over2";
				type: RECT;
				mouse_events: 1;
				repeat_events: 1;
				ignore_flags: ON_HOLD;
				description { state: "default" 0.0;
					color: 0 0 0 0;
				}
				description { state: "disabled" 0.0;
					inherit:  "default" 0.0;
					visible: 0;
				}
			}
			part { name: "over3";
				type: RECT;
				mouse_events: 1;
				repeat_events: 1;
				description { state: "default" 0.0;
					color: 0 0 0 0;
				}
				description { state: "clicked" 0.0;
					inherit:  "default" 0.0;
					visible: 1;
				}
			}
			part { name: "disabler";
				type: RECT;
				description { state: "default" 0.0;
					color: 0 0 0 0;
					visible: 0;
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
			}
		}
		programs {
			program { name: "button_click";
				signal: "mouse,down,1";
				source: "over2";
				action: SIGNAL_EMIT "elm,action,press" "";
				after: "button_click_anim";
				//after:touch_sound ;
			}
			/*
			program { name: touch_sound;
	 	   		action: TOUCH_SOUND "button-pressed.wav" 2 ;		  	 	   
			}
			*/
			program { name: "button_click_anim";
				action: STATE_SET "clicked" 0.0;
				target: "button_image";
				after: "text_clicked";
			}
			program { name: "text_clicked";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "visible"))
						set_state(PART:"elm.text", "clicked", 0.0);
				}
			}
			program { name: "button_unpress";
				action: SIGNAL_EMIT "elm,action,unpress" "";
			}
			program { name: "button_mouseout_clicked";
				signal: "mouse,up,1";
				source: "over3";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.swallow.content", st, 30, vl);
					if (strcmp(st, "icononly"))
					{
						emit("elm,action,default,text,set", "");
						set_state(PART:"elm.text", "visible", 0.0);
					}
					if(get_int(button_state) !=1)
						set_state(PART:"button_image", "default", 0.0);
				}
				after: button_unpress;
			}
			program { name: "button_click2";
				signal: "mouse,down,1";
				source: "over3";
				action: STATE_SET "clicked" 0.0;
				target: "over3";
			}
			program { name: "button_unclick2";
				signal: "mouse,clicked,1";
				source: "over3";
				action: STATE_SET "default" 0.0;
				target: "over3";
			}
			program { name: "button_unclick3";
				signal: "mouse,clicked,1";
				source: "over2";
				action: SIGNAL_EMIT "elm,action,click" "";
			}
			program { name: "text_show";
				signal: "elm,state,text,visible";
				source: "elm";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.swallow.content", st, 30, vl);
					if (!strcmp(st, "icononly"))
					{
						set_state(PART:"elm.swallow.content", "visible", 0.0);
						set_state(PART:"padding_icon_text", "visible", 0.0);
					}
					set_state(PART:"elm.text", "visible", 0.0);
				}
			}
			program { name: "text_hide";
				signal: "elm,state,text,hidden";
				source: "elm";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.swallow.content", st, 30, vl);
					if (!strcmp(st, "visible"))
					{
						set_state(PART:"elm.swallow.content", "icononly", 0.0);
						set_state(PART:"padding_icon_text", "icononly", 0.0);
					}
					set_state(PART:"elm.text", "default", 0.0);
				}
			}
			program { name: "icon_show";
				signal: "elm,state,icon,visible";
				source: "elm";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "visible"))
					{
						set_state(PART:"elm.swallow.content", "visible", 0.0);
						set_state(PART:"padding_icon_text", "visible", 0.0);
					}
					else
					{
						set_state(PART:"elm.swallow.content", "icononly", 0.0);
						set_state(PART:"padding_icon_text", "icononly", 0.0);
					}
				}
			}
			program { name: "icon_hide";
				signal: "elm,state,icon,hidden";
				source: "elm";
				action:  STATE_SET "default" 0.0;
				target: "elm.swallow.content";
			}
			program { name: "disable";
				signal: "elm,state,disabled";
				source: "elm";
				action: STATE_SET "disabled" 0.0;
				target: "button_image";
				target: "over2";
				target: "disabler";
				after: "disable_text";
			}
			program { name: "disable_text";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "visible"))
						set_state(PART:"elm.text", "disabled_visible", 0.0);
					else
						set_state(PART:"elm.text", "disabled", 0.0);
					set_int(button_state, 1);
				}
			}
			program { name: "enable";
				signal: "elm,state,enabled";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "button_image";
				target: "over2";
				target: "disabler";
				after: "enable_text";
			}
			program { name: "enable_text";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "disabled_visible"))
						set_state(PART:"elm.text", "visible", 0.0);
					else
						set_state(PART:"elm.text", "default", 0.0);
					set_int(button_state, 0);
				}
			}
			program { name: "focused";
				//signal: "elm,action,focus";
				//source: "elm";
				action: STATE_SET "focused" 0.0;
				target: "button_image";
				target: "elm.text";
			}
			program { name: "unfocused";
				//signal: "elm,action,unfocus";
				//source: "elm";
				action: STATE_SET "default" 0.0;
				target: "button_image";
				after: "unfocus_text";
			}
			program { name: "unfocus_text";
				action: STATE_SET "visible" 0.0;
				target: "elm.text";
			}
		}
	}
///////////////////////////////////////////////////////////////////////////////////////	
	group { name: "elm/button/haptic/default";
		images {
			image: "00_button_03_normal.png" COMP;
			image: "00_button_03_press.png" COMP;
			image: "00_button_03_focus.png" COMP;
		}
		script {
			public button_state = 0; //0:enabled, 1: disabled
		}
		parts {
			part { name: "button_image";
				mouse_events: 1;
				scale: 1;
				description { state: "default" 0.0;
					min: 16 50;
					image {
						normal: "00_button_03_normal.png";
						border: 7 7 7 7;
						border_scale: 1;
					}
				}
				description { state: "clicked" 0.0;
					inherit: "default" 0.0;
					image.normal: "00_button_03_press.png";
				}
				description { state: "disabled" 0.0;
					inherit:  "default" 0.0;
				}
				description { state: "focused" 0.0;
					inherit: "default" 0.0;
					image.normal: "00_button_03_focus.png";
				}
			}
			part {
				name: "padding_left";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					align: 0.0 0.0;
					rel1.relative: 0.0 0.0;
					rel2.relative: 0.0 1.0;
					min: 5 5;
					fixed: 1 0;
					color: 0 0 0 0;
				}
			}
			part {
				name: "padding_right";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					align: 1.0 0.0;
					rel1.relative: 1.0 0.0;
					rel2.relative: 1.0 1.0;
					min: 5 5;
					fixed: 1 0;
					color: 0 0 0 0;
				}
			}
			part {
				name: "padding_top";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					align: 0.0 0.0;
					rel1.relative: 0.0 0.0;
					rel2.relative: 1.0 0.0;
					min: 5 5;
					fixed: 0 1;
					color: 0 0 0 0;
				}
			}
			part {
				name: "padding_bottom";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					align: 1.0 1.0;
					rel1.relative: 0.0 1.0;
					rel2.relative: 1.0 1.0;
					min: 5 5;
					fixed: 0 1;
					color: 0 0 0 0;
				}
			}
			part {
				name: "icon_rect";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					visible: 1;
					min: 0 40;
					fixed: 1 0;
					rel1 {relative: 0.0 1.0; to_x: "elm.swallow.content"; to_y: "padding_top"; }
					rel2 {relative: 1.0 0.0; to_x: "elm.swallow.content"; to_y: "padding_bottom"; }
					align: 0.0 0.5;
					color: 0 0 0 0;
				}
			} 
			part {
				name: "padding_icon_text";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0; //when only icon or no icon is there
					align: 0.0 0.0;
					rel1 { relative: 1.0 0.0; to: "icon_rect"; }
					rel2 { relative: 1.0 1.0; to: "icon_rect"; } 			
					fixed: 1 0;
					min: 0 0;
					color: 0 0 0 0;
				}
				description { state: "icononly" 0.0;
					inherit: "default" 0.0;
				}
				description { state: "visible" 0.0; //when icon is visible
					align: 0.0 0.0;
					rel1 { relative: 1.0 0.0; to: "icon_rect"; }
					rel2 { relative: 1.0 1.0; to: "icon_rect"; } 			
					fixed: 1 0;
					min: 5 0;
					color: 0 0 0 0;
				}
			}					
			part { name: "elm.swallow.content";
				type: SWALLOW;
				scale: 1;
				description { state: "default" 0.0;
					visible: 0;
					align: 0.0 0.5;
					rel1 {relative: 1.0 1.0; to_x: "padding_left"; to_y: "padding_top"; }
					rel2 {relative: 1.0 0.0; to_x: "padding_left"; to_y: "padding_bottom"; }
					fixed: 1 0;
				}
				description { state: "visible" 0.0;
					fixed: 1 0;
					visible: 1;
					align: 0.0 0.5;
					rel1 {relative: 1.0 1.0; to_x: "padding_left"; to_y: "padding_top"; }
					rel2 {relative: 1.0 0.0; to_x: "padding_left"; to_y: "padding_bottom"; }
					aspect: 1.0 1.0;
					aspect_preference: VERTICAL;
				}
				description { state: "icononly" 0.0;;
					visible: 1;
					min: 40 40;
					rel1 {relative: 1.0 1.0; to_x: "padding_left"; to_y: "padding_top"; }
					rel2 {relative: 0.0 0.0; to_x: "padding_right"; to_y: "padding_bottom"; }
					align: 0.5 0.5;
					aspect: 1.0 1.0;
					aspect_preference: VERTICAL;
				}
			}
			part { name: "elm.text";
				type:          TEXT;
				effect:        SHADOW;
				mouse_events:  0;
				scale: 1;
				description { state: "default" 0.0;
					visible: 0;
					rel1 { relative: 1.0 1.0; to_x: "padding_icon_text"; to_y: "padding_top"; }
					rel2 { relative: 0.0 0.0; to_x: "padding_right"; to_y:"padding_bottom"; }
					align: 0.5 0.5;
					color: 90 73 40 255;
					color2: 255 255 255 255;				
					text {
						font: FONT_MED;
						size: 24;
						min:  0 0;
						align: 0.5 0.5;
						max: 1 0;
					}
				}
				description { state: "visible" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					min: 90 40;
				}
				description { state: "clicked" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					min: 0 0;
					color: 255 255 255 255;
					color2: 0 0 0 102;
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					color: 0 0 0 128;
					color3: 0 0 0 0;
				}
				description { state: "disabled_visible" 0.0;
					inherit: "default" 0.0;
					color: 0 0 0 128;
					color3: 0 0 0 0;
					visible: 1;
				}
				description { state: "focused" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					min: 0 0;
					color: 255 255 255 255;
					color2: 0 0 0 102;
				}
			}
			part { name: "over2";
				type: RECT;
				mouse_events: 1;
				repeat_events: 1;
				ignore_flags: ON_HOLD;
				description { state: "default" 0.0;
					color: 0 0 0 0;
				}
				description { state: "disabled" 0.0;
					inherit:  "default" 0.0;
					visible: 0;
				}
			}
			part { name: "over3";
				type: RECT;
				mouse_events: 1;
				repeat_events: 1;
				description { state: "default" 0.0;
					color: 0 0 0 0;
				}
				description { state: "clicked" 0.0;
					inherit:  "default" 0.0;
					visible: 1;
				}
			}
			part { name: "disabler";
				type: RECT;
				description { state: "default" 0.0;
					color: 0 0 0 0;
					visible: 0;
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
			}
		}
		programs {
			program { name: "button_click";
				signal: "mouse,down,1";
				source: "over2";
				action: SIGNAL_EMIT "elm,action,press" "";
				after: "button_click_anim";
			}
			program { name: "button_click_anim";
				action: STATE_SET "clicked" 0.0;
				target: "button_image";
				after: "text_clicked";
			}
			program { name: "text_clicked";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "visible"))
						set_state(PART:"elm.text", "clicked", 0.0);
				}
			}
			program { name: "button_unpress";
				action: SIGNAL_EMIT "elm,action,unpress" "";
			}
			program { name: "button_mouseout_clicked";
				signal: "mouse,up,1";
				source: "over3";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.swallow.content", st, 30, vl);
					if (strcmp(st, "icononly"))
					{
						emit("elm,action,default,text,set", "");
						set_state(PART:"elm.text", "visible", 0.0);
					}
					if(get_int(button_state) !=1)
						set_state(PART:"button_image", "default", 0.0);
				}
				after: button_unpress;
			}
			program { name: "button_click2";
				signal: "mouse,down,1";
				source: "over3";
				action: STATE_SET "clicked" 0.0;
				target: "over3";
			}
			program { name: "button_unclick2";
				signal: "mouse,clicked,1";
				source: "over3";
				action: STATE_SET "default" 0.0;
				target: "over3";
			}
			program { name: "button_unclick3";
				signal: "mouse,clicked,1";
				source: "over2";
				action: SIGNAL_EMIT "elm,action,click" "";
			}
			program { name: "text_show";
				signal: "elm,state,text,visible";
				source: "elm";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.swallow.content", st, 30, vl);
					if (!strcmp(st, "icononly"))
					{
						set_state(PART:"elm.swallow.content", "visible", 0.0);
						set_state(PART:"padding_icon_text", "visible", 0.0);
					}
					set_state(PART:"elm.text", "visible", 0.0);
				}
			}
			program { name: "text_hide";
				signal: "elm,state,text,hidden";
				source: "elm";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.swallow.content", st, 30, vl);
					if (!strcmp(st, "visible"))
					{
						set_state(PART:"elm.swallow.content", "icononly", 0.0);
						set_state(PART:"padding_icon_text", "icononly", 0.0);
					}
					set_state(PART:"elm.text", "default", 0.0);
				}
			}
			program { name: "icon_show";
				signal: "elm,state,icon,visible";
				source: "elm";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "visible"))
					{
						set_state(PART:"elm.swallow.content", "visible", 0.0);
						set_state(PART:"padding_icon_text", "visible", 0.0);
					}
					else
					{
						set_state(PART:"elm.swallow.content", "icononly", 0.0);
						set_state(PART:"padding_icon_text", "icononly", 0.0);
					}
				}
			}
			program { name: "icon_hide";
				signal: "elm,state,icon,hidden";
				source: "elm";
				action:  STATE_SET "default" 0.0;
				target: "elm.swallow.content";
			}
			program { name: "disable";
				signal: "elm,state,disabled";
				source: "elm";
				action: STATE_SET "disabled" 0.0;
				target: "button_image";
				target: "over2";
				target: "disabler";
				after: "disable_text";
			}
			program { name: "disable_text";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "visible"))
						set_state(PART:"elm.text", "disabled_visible", 0.0);
					else
						set_state(PART:"elm.text", "disabled", 0.0);
					set_int(button_state, 1);
				}
			}
			program { name: "enable";
				signal: "elm,state,enabled";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "button_image";
				target: "over2";
				target: "disabler";
				after: "enable_text";
			}
			program { name: "enable_text";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "disabled_visible"))
						set_state(PART:"elm.text", "visible", 0.0);
					else
						set_state(PART:"elm.text", "default", 0.0);
					set_int(button_state, 0);
				}
			}
			program { name: "focused";
				//signal: "elm,action,focus";
				//source: "elm";
				action: STATE_SET "focused" 0.0;
				target: "button_image";
				target: "elm.text";
			}
			program { name: "unfocused";
				//signal: "elm,action,unfocus";
				//source: "elm";
				action: STATE_SET "default" 0.0;
				target: "button_image";
				after: "unfocus_text";
			}
			program { name: "unfocus_text";
				action: STATE_SET "visible" 0.0;
				target: "elm.text";
			}
		}
	}
///////////////////////////////////////////////////////////////////////////////////////
	group { name: "elm/button/base/sound_haptic/default";
		images {
			image: "00_button_03_normal.png" COMP;
			image: "00_button_03_press.png" COMP;
			image: "00_button_03_focus.png" COMP;
		}
		script {
			public button_state = 0; //0:enabled, 1: disabled
		}
		parts {
			part { name: "button_image";
				mouse_events: 1;
				scale: 1;
				description { state: "default" 0.0;
					min: 16 50;
					image {
						normal: "00_button_03_normal.png";
						border: 7 7 7 7;
						border_scale: 1;
					}
				}
				description { state: "clicked" 0.0;
					inherit: "default" 0.0;
					image.normal: "00_button_03_press.png";
				}
				description { state: "disabled" 0.0;
					inherit:  "default" 0.0;
				}
				description { state: "focused" 0.0;
					inherit: "default" 0.0;
					image.normal: "00_button_03_focus.png";
				}
			}
			part {
				name: "padding_left";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					align: 0.0 0.0;
					rel1.relative: 0.0 0.0;
					rel2.relative: 0.0 1.0;
					min: 5 5;
					fixed: 1 0;
					color: 0 0 0 0;
				}
			}
			part {
				name: "padding_right";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					align: 1.0 0.0;
					rel1.relative: 1.0 0.0;
					rel2.relative: 1.0 1.0;
					min: 5 5;
					fixed: 1 0;
					color: 0 0 0 0;
				}
			}
			part {
				name: "padding_top";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					align: 0.0 0.0;
					rel1.relative: 0.0 0.0;
					rel2.relative: 1.0 0.0;
					min: 5 5;
					fixed: 0 1;
					color: 0 0 0 0;
				}
			}
			part {
				name: "padding_bottom";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					align: 1.0 1.0;
					rel1.relative: 0.0 1.0;
					rel2.relative: 1.0 1.0;
					min: 5 5;
					fixed: 0 1;
					color: 0 0 0 0;
				}
			}
			part {
				name: "icon_rect";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					visible: 1;
					min: 0 40;
					fixed: 1 0;
					rel1 {relative: 0.0 1.0; to_x: "elm.swallow.content"; to_y: "padding_top"; }
					rel2 {relative: 1.0 0.0; to_x: "elm.swallow.content"; to_y: "padding_bottom"; }
					align: 0.0 0.5;
					color: 0 0 0 0;
				}
			} 
			part {
				name: "padding_icon_text";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0; //when only icon or no icon is there
					align: 0.0 0.0;
					rel1 { relative: 1.0 0.0; to: "icon_rect"; }
					rel2 { relative: 1.0 1.0; to: "icon_rect"; } 			
					fixed: 1 0;
					min: 0 0;
					color: 0 0 0 0;
				}
				description { state: "icononly" 0.0;
					inherit: "default" 0.0;
				}
				description { state: "visible" 0.0; //when icon is visible
					align: 0.0 0.0;
					rel1 { relative: 1.0 0.0; to: "icon_rect"; }
					rel2 { relative: 1.0 1.0; to: "icon_rect"; } 			
					fixed: 1 0;
					min: 5 0;
					color: 0 0 0 0;
				}
			}					
			part { name: "elm.swallow.content";
				type: SWALLOW;
				scale: 1;
				description { state: "default" 0.0;
					visible: 0;
					align: 0.0 0.5;
					rel1 {relative: 1.0 1.0; to_x: "padding_left"; to_y: "padding_top"; }
					rel2 {relative: 1.0 0.0; to_x: "padding_left"; to_y: "padding_bottom"; }
					fixed: 1 0;
				}
				description { state: "visible" 0.0;
					fixed: 1 0;
					visible: 1;
					align: 0.0 0.5;
					rel1 {relative: 1.0 1.0; to_x: "padding_left"; to_y: "padding_top"; }
					rel2 {relative: 1.0 0.0; to_x: "padding_left"; to_y: "padding_bottom"; }
					aspect: 1.0 1.0;
					aspect_preference: VERTICAL;
				}
				description { state: "icononly" 0.0;;
					visible: 1;
					min: 40 40;
					rel1 {relative: 1.0 1.0; to_x: "padding_left"; to_y: "padding_top"; }
					rel2 {relative: 0.0 0.0; to_x: "padding_right"; to_y: "padding_bottom"; }
					align: 0.5 0.5;
					aspect: 1.0 1.0;
					aspect_preference: VERTICAL;
				}
			}
			part { name: "elm.text";
				type:          TEXT;
				effect:        SHADOW;
				mouse_events:  0;
				scale: 1;
				description { state: "default" 0.0;
					visible: 0;
					rel1 { relative: 1.0 1.0; to_x: "padding_icon_text"; to_y: "padding_top"; }
					rel2 { relative: 0.0 0.0; to_x: "padding_right"; to_y:"padding_bottom"; }
					align: 0.5 0.5;
					color: 90 73 40 255;
					color2: 255 255 255 255;				
					text {
						font: FONT_MED;
						size: 24;
						min:  0 0;
						align: 0.5 0.5;
						max: 1 0;
					}
				}
				description { state: "visible" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					min: 90 40;
				}
				description { state: "clicked" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					min: 0 0;
					color: 255 255 255 255;
					color2: 0 0 0 102;
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					color: 0 0 0 128;
					color3: 0 0 0 0;
				}
				description { state: "disabled_visible" 0.0;
					inherit: "default" 0.0;
					color: 0 0 0 128;
					color3: 0 0 0 0;
					visible: 1;
				}
				description { state: "focused" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					min: 0 0;
					color: 255 255 255 255;
					color2: 0 0 0 102;
				}
			}
			part { name: "over2";
				type: RECT;
				mouse_events: 1;
				repeat_events: 1;
				ignore_flags: ON_HOLD;
				description { state: "default" 0.0;
					color: 0 0 0 0;
				}
				description { state: "disabled" 0.0;
					inherit:  "default" 0.0;
					visible: 0;
				}
			}
			part { name: "over3";
				type: RECT;
				mouse_events: 1;
				repeat_events: 1;
				description { state: "default" 0.0;
					color: 0 0 0 0;
				}
				description { state: "clicked" 0.0;
					inherit:  "default" 0.0;
					visible: 1;
				}
			}
			part { name: "disabler";
				type: RECT;
				description { state: "default" 0.0;
					color: 0 0 0 0;
					visible: 0;
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
			}
		}
		programs {
			program { name: "button_click";
				signal: "mouse,down,1";
				source: "over2";
				action: SIGNAL_EMIT "elm,action,press" "";
				after: "button_click_anim";
				//after:touch_sound ;
			}
			/*
			program { name: touch_sound;
	 	   		action: TOUCH_SOUND "Waterdrop.wav" 2 ;		  	 	   
			}
			*/
			program { name: "button_click_anim";
				action: STATE_SET "clicked" 0.0;
				target: "button_image";
				after: "text_clicked";
			}
			program { name: "text_clicked";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "visible"))
						set_state(PART:"elm.text", "clicked", 0.0);
				}
			}
			program { name: "button_unpress";
				action: SIGNAL_EMIT "elm,action,unpress" "";
			}
			program { name: "button_mouseout_clicked";
				signal: "mouse,up,1";
				source: "over3";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.swallow.content", st, 30, vl);
					if (strcmp(st, "icononly"))
					{
						emit("elm,action,default,text,set", "");
						set_state(PART:"elm.text", "visible", 0.0);
					}
					if(get_int(button_state) !=1)
						set_state(PART:"button_image", "default", 0.0);
				}
				after: button_unpress;
			}
			program { name: "button_click2";
				signal: "mouse,down,1";
				source: "over3";
				action: STATE_SET "clicked" 0.0;
				target: "over3";
			}
			program { name: "button_unclick2";
				signal: "mouse,clicked,1";
				source: "over3";
				action: STATE_SET "default" 0.0;
				target: "over3";
			}
			program { name: "button_unclick3";
				signal: "mouse,clicked,1";
				source: "over2";
				action: SIGNAL_EMIT "elm,action,click" "";
			}
			program { name: "text_show";
				signal: "elm,state,text,visible";
				source: "elm";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.swallow.content", st, 30, vl);
					if (!strcmp(st, "icononly"))
					{
						set_state(PART:"elm.swallow.content", "visible", 0.0);
						set_state(PART:"padding_icon_text", "visible", 0.0);
					}
					set_state(PART:"elm.text", "visible", 0.0);
				}
			}
			program { name: "text_hide";
				signal: "elm,state,text,hidden";
				source: "elm";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.swallow.content", st, 30, vl);
					if (!strcmp(st, "visible"))
					{
						set_state(PART:"elm.swallow.content", "icononly", 0.0);
						set_state(PART:"padding_icon_text", "icononly", 0.0);
					}
					set_state(PART:"elm.text", "default", 0.0);
				}
			}
			program { name: "icon_show";
				signal: "elm,state,icon,visible";
				source: "elm";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "visible"))
					{
						set_state(PART:"elm.swallow.content", "visible", 0.0);
						set_state(PART:"padding_icon_text", "visible", 0.0);
					}
					else
					{
						set_state(PART:"elm.swallow.content", "icononly", 0.0);
						set_state(PART:"padding_icon_text", "icononly", 0.0);
					}
				}
			}
			program { name: "icon_hide";
				signal: "elm,state,icon,hidden";
				source: "elm";
				action:  STATE_SET "default" 0.0;
				target: "elm.swallow.content";
			}
			program { name: "disable";
				signal: "elm,state,disabled";
				source: "elm";
				action: STATE_SET "disabled" 0.0;
				target: "button_image";
				target: "over2";
				target: "disabler";
				after: "disable_text";
			}
			program { name: "disable_text";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "visible"))
						set_state(PART:"elm.text", "disabled_visible", 0.0);
					else
						set_state(PART:"elm.text", "disabled", 0.0);
					set_int(button_state, 1);
				}
			}
			program { name: "enable";
				signal: "elm,state,enabled";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "button_image";
				target: "over2";
				target: "disabler";
				after: "enable_text";
			}
			program { name: "enable_text";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "disabled_visible"))
						set_state(PART:"elm.text", "visible", 0.0);
					else
						set_state(PART:"elm.text", "default", 0.0);
					set_int(button_state, 0);
				}
			}
			program { name: "focused";
				//signal: "elm,action,focus";
				//source: "elm";
				action: STATE_SET "focused" 0.0;
				target: "button_image";
				target: "elm.text";
			}
			program { name: "unfocused";
				//signal: "elm,action,unfocus";
				//source: "elm";
				action: STATE_SET "default" 0.0;
				target: "button_image";
				after: "unfocus_text";
			}
			program { name: "unfocus_text";
				action: STATE_SET "visible" 0.0;
				target: "elm.text";
			}
		}
	}

///////////////////////////////////////////////////////////////////////////////////////
	group { name: "elm/button/base/calendarpicker/prev";
		images {
			image: "00_calend_picker_bar_button.png" COMP;
			image: "00_calend_picker_bar_button_press.png" COMP;
			image: "00_calend_picker_btn_prev.png" COMP;
			image: "00_calend_picker_btn_prev_press.png" COMP;
		}
		script {
			public button_state = 0; //0:enabled, 1: disabled
		}
		parts {
			part { name: "button_image";
				mouse_events: 1;
				scale: 1;
				description { state: "default" 0.0;
                 		        min: 98 50;
                 		        max: 98 50;
					image {
						normal: "00_calend_picker_bar_button.png";
						border: 7 7 7 7;
						border_scale: 1;
					}
				}
				description { state: "clicked" 0.0;
					inherit: "default" 0.0;
					image.normal: "00_calend_picker_bar_button_press.png";
				}
				description { state: "disabled" 0.0;
					inherit:  "default" 0.0;
				}
				description { state: "focused" 0.0;
					inherit: "default" 0.0;
					image.normal: "00_calend_picker_bar_button_press.png";
				}
			}
			part {
				name: "padding_left";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					align: 0.0 0.0;
					rel1.relative: 0.0 0.0;
					rel2.relative: 0.0 1.0;
					min: 10 14;
					fixed: 1 0;
					color: 0 0 0 0;
				}
			}
			part {
				name: "padding_right";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					align: 1.0 0.0;
					rel1.relative: 1.0 0.0;
					rel2.relative: 1.0 1.0;
					min: 2 14;
					fixed: 1 0;
					color: 0 0 0 0;
				}
			}
			part {
				name: "padding_top";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					align: 0.0 0.0;
					rel1.relative: 0.0 0.0;
					rel2.relative: 1.0 0.0;
					min: 2 14;
					fixed: 0 1;
					color: 0 0 0 0;
				}
			}
			part {
				name: "padding_bottom";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					align: 1.0 1.0;
					rel1.relative: 0.0 1.0;
					rel2.relative: 1.0 1.0;
					min: 2 14;
					fixed: 0 1;
					color: 0 0 0 0;
				}
			}
			part {
 				name: "left_arrow";
				type: IMAGE;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					min: 12 22;
					max: 12 22;
					align: 0.5 0.5;
					fixed: 1 0;
					rel1 {relative: 1.0 1.0; to_x: "padding_left"; to_y: "padding_top"; }
					rel2 {relative: 1.0 0.0; to_x: "padding_left"; to_y: "padding_bottom"; }
					image.normal: "00_calend_picker_btn_prev.png";
				}
				description { state: "clicked" 0.0;
					inherit: "default" 0.0;
					image.normal: "00_calend_picker_btn_prev_press.png";
				}	
			}
			part {
				name: "padding_icon_text";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0; //when only icon or no icon is there
					align: 0.0 0.0;
					rel1 { relative: 1.0 0.0; to: "left_arrow"; }
					rel2 { relative: 1.0 1.0; to: "left_arrow"; } 			
					fixed: 1 0;
					min: 2 0;
					color: 0 0 0 0;
				}
			}					
			part { name: "elm.text";
				type:          TEXT;
				effect:        SHADOW;
				mouse_events:  0;
				scale: 1;
				description { state: "default" 0.0;
					visible: 1;
					rel1 { relative: 1.0 1.0; to_x: "padding_icon_text"; to_y: "padding_top"; }
					rel2 { relative: 0.0 0.0; to_x: "padding_right"; to_y:"padding_bottom"; }
                 		        min: 74 50;
                 		        max: 74 50;
					align: 0.5 0.5;
					color: 255 255 255 255;
					color2: 0 0 0 0;
					text {
						font: "SLP:style=Medium";
						size: 24;
						min:  1 0;
						align: 0.5 0.5;
						max: 1 0;
						text: "Prev.";
					}
				}
				description { state: "clicked" 0.0;
					inherit: "default" 0.0;
					color: 255 255 255 255;
					color2: 0 0 0 0;
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					color: 0 0 0 128;
					color3: 0 0 0 0;
				}
				description { state: "disabled_visible" 0.0;
					inherit: "default" 0.0;
					color: 0 0 0 128;
					color3: 0 0 0 0;
				}
				description { state: "focused" 0.0;
					inherit: "default" 0.0;
					color: 255 255 255 255;
					color2: 0 0 0 102;
				}
			}
			part { name: "over2";
				type: RECT;
				mouse_events: 1;
				repeat_events: 1;
				ignore_flags: ON_HOLD;
				description { state: "default" 0.0;
					color: 0 0 0 0;
				}
				description { state: "disabled" 0.0;
					inherit:  "default" 0.0;
					visible: 0;
				}
			}
			part { name: "over3";
				type: RECT;
				mouse_events: 1;
				repeat_events: 1;
				description { state: "default" 0.0;
					color: 0 0 0 0;
				}
				description { state: "clicked" 0.0;
					inherit:  "default" 0.0;
					visible: 1;
				}
			}
			part { name: "disabler";
				type: RECT;
				description { state: "default" 0.0;
					color: 0 0 0 0;
					visible: 0;
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
			}
		}
		programs {
			program { name: "button_click";
				signal: "mouse,down,1";
				source: "over2";
				action: SIGNAL_EMIT "elm,action,press" "";
				after: "button_click_anim";
			}
			program { name: "button_click_anim";
				action: STATE_SET "clicked" 0.0;
				target: "button_image";
				after: "text_clicked";
			}
			program { name: "text_clicked";
				script {
						set_state(PART:"elm.text", "clicked", 0.0);
						set_state(PART:"left_arrow", "clicked", 0.0);
				}
			}
			program { name: "button_unpress";
				action: SIGNAL_EMIT "elm,action,unpress" "";
			}
			program { name: "button_mouseout_clicked";
				signal: "mouse,up,1";
				source: "over3";
				script {
						set_state(PART:"elm.text", "default", 0.0);
					if(get_int(button_state) !=1)
						set_state(PART:"button_image", "default", 0.0);
				}
				after: button_unpress;
			}
			program { name: "button_click2";
				signal: "mouse,down,1";
				source: "over3";
				action: STATE_SET "clicked" 0.0;
				target: "over3";
			}
			program { name: "button_unclick2";
				signal: "mouse,clicked,1";
				source: "over3";
				action: STATE_SET "default" 0.0;
				target: "over3";
			}
			program { name: "button_unclick3";
				signal: "mouse,clicked,1";
				source: "over2";
				action: SIGNAL_EMIT "elm,action,click" "";
			}
			program { name: "disable";
				signal: "elm,state,disabled";
				source: "elm";
				action: STATE_SET "disabled" 0.0;
				target: "button_image";
				target: "over2";
				target: "disabler";
				after: "disable_text";
			}
			program { name: "disable_text";
				script {
					set_state(PART:"elm.text", "disabled", 0.0);
					set_int(button_state, 1);
				}
			}
			program { name: "enable";
				signal: "elm,state,enabled";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "button_image";
				target: "over2";
				target: "disabler";
				after: "enable_text";
			}
			program { name: "enable_text";
				script {
					set_state(PART:"elm.text", "default", 0.0);
					set_int(button_state, 0);
				}
			}
			program { name: "focused";
				//signal: "elm,action,focus";
				//source: "elm";
				action: STATE_SET "focused" 0.0;
				target: "button_image";
				target: "elm.text";
			}
			program { name: "unfocused";
				//signal: "elm,action,unfocus";
				//source: "elm";
				action: STATE_SET "default" 0.0;
				target: "button_image";
				after: "unfocus_text";
			}
			program { name: "unfocus_text";
				action: STATE_SET "default" 0.0;
				target: "elm.text";
			}
		}
	}


///////////////////////////////////////////////////////////////////////////////////////
	group { name: "elm/button/base/calendarpicker/next";
		images {
			image: "00_calend_picker_bar_button.png" COMP;
			image: "00_calend_picker_bar_button_press.png" COMP;
			image: "00_calend_picker_btn_next.png" COMP;
			image: "00_calend_picker_btn_next_press.png" COMP;
		}
		script {
			public button_state = 0; //0:enabled, 1: disabled
		}
		parts {
			part { name: "button_image";
				mouse_events: 1;
				scale: 1;
				description { state: "default" 0.0;
                 		        min: 98 50;
                                max: 98 50;
					image {
						normal: "00_calend_picker_bar_button.png";
						border: 7 7 7 7;
						border_scale: 1;
					}
				}
				description { state: "clicked" 0.0;
					inherit: "default" 0.0;
					image.normal: "00_calend_picker_bar_button_press.png";
				}
				description { state: "disabled" 0.0;
					inherit:  "default" 0.0;
				}
				description { state: "focused" 0.0;
					inherit: "default" 0.0;
					image.normal: "00_calend_picker_bar_button_press.png";
				}
			}
			part {
				name: "padding_left";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					align: 0.0 0.0;
					rel1.relative: 0.0 0.0;
					rel2.relative: 0.0 1.0;
					min: 2 14;
					fixed: 1 0;
					color: 0 0 0 0;
				}
			}
			part {
				name: "padding_right";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					align: 1.0 0.0;
					rel1.relative: 1.0 0.0;
					rel2.relative: 1.0 1.0;
					min: 10 14;
					fixed: 1 0;
					color: 0 0 0 0;
				}
			}
			part {
				name: "padding_top";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					align: 0.0 0.0;
					rel1.relative: 0.0 0.0;
					rel2.relative: 1.0 0.0;
					min: 2 14;
					fixed: 0 1;
					color: 0 0 0 0;
				}
			}
			part {
				name: "padding_bottom";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					align: 1.0 1.0;
					rel1.relative: 0.0 1.0;
					rel2.relative: 1.0 1.0;
					min: 2 14;
					fixed: 0 1;
					color: 0 0 0 0;
				}
			}
			part { name: "elm.text";
				type:          TEXT;
				effect:        SHADOW;
				mouse_events:  0;
				scale: 1;
				description { state: "default" 0.0;
					visible: 1;
					rel1 { relative: 1.0 1.0; to_x: "padding_left"; to_y: "padding_top"; }
					rel2 { relative: 0.0 0.0; to_x: "padding_right"; to_y: "padding_bottom"; }
					fixed: 1 0;
					color: 255 255 255 255;
                                        min: 74 22;
					color2: 0 0 0 0;
					text {
						font: "SLP:style=Medium";
						size: 24;
						min:  1 0;
						align: 0.5 0.5;
						max: 1 0;
						text: "Next";
					}
				}
				description { state: "clicked" 0.0;
					inherit: "default" 0.0;
					color: 255 255 255 255;
					color2: 0 0 0 0;
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					color: 0 0 0 128;
					color3: 0 0 0 0;
				}
				description { state: "disabled_visible" 0.0;
					inherit: "default" 0.0;
					color: 0 0 0 128;
					color3: 0 0 0 0;
				}
				description { state: "focused" 0.0;
					inherit: "default" 0.0;
					min: 0 0;
					color: 255 255 255 255;
					color2: 0 0 0 102;
				}
			}
			part {
				name: "padding_icon_text";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0; //when only icon or no icon is there
					align: 0.0 0.0;
					rel1 { relative: 1.0 0.0; to: "elm.text"; }
					rel2 { relative: 1.0 1.0; to: "elm.text"; } 			
					fixed: 1 0;
					min: 5 0;
					color: 0 0 0 0;
				}
			}
			part {
 				name: "right_arrow";
				type: IMAGE;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					min: 12 22;
					max: 12 22;
					align: 0.5 0.5;
					fixed: 1 0;
					rel1 {relative: 1.0 1.0; to_x: "padding_icon_text"; to_y: "padding_top"; }
					rel2 {relative: 0.0 0.0; to_x: "padding_right"; to_y: "padding_bottom"; }
					image.normal: "00_calend_picker_btn_next.png";
				}
				description { state: "clicked" 0.0;
					inherit: "default" 0.0;
					image.normal: "00_calend_picker_btn_next_press.png";
				}	
			}

			part { name: "over2";
				type: RECT;
				mouse_events: 1;
				repeat_events: 1;
				ignore_flags: ON_HOLD;
				description { state: "default" 0.0;
					color: 0 0 0 0;
				}
				description { state: "disabled" 0.0;
					inherit:  "default" 0.0;
					visible: 0;
				}
			}
			part { name: "over3";
				type: RECT;
				mouse_events: 1;
				repeat_events: 1;
				description { state: "default" 0.0;
					color: 0 0 0 0;
				}
				description { state: "clicked" 0.0;
					inherit:  "default" 0.0;
					visible: 1;
				}
			}
			part { name: "disabler";
				type: RECT;
				description { state: "default" 0.0;
					color: 0 0 0 0;
					visible: 0;
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
			}
		}
		programs {
			program { name: "button_click";
				signal: "mouse,down,1";
				source: "over2";
				action: SIGNAL_EMIT "elm,action,press" "";
				after: "button_click_anim";
			}
			program { name: "button_click_anim";
				action: STATE_SET "clicked" 0.0;
				target: "button_image";
				after: "text_clicked";
			}
			program { name: "text_clicked";
				script {
						set_state(PART:"elm.text", "clicked", 0.0);
						set_state(PART:"right_arrow", "clicked", 0.0);
				}
			}
			program { name: "button_unpress";
				action: SIGNAL_EMIT "elm,action,unpress" "";
			}
			program { name: "button_mouseout_clicked";
				signal: "mouse,up,1";
				source: "over3";
				script {
						set_state(PART:"elm.text", "default", 0.0);
					if(get_int(button_state) !=1)
						set_state(PART:"button_image", "default", 0.0);
				}
				after: button_unpress;
			}
			program { name: "button_click2";
				signal: "mouse,down,1";
				source: "over3";
				action: STATE_SET "clicked" 0.0;
				target: "over3";
			}
			program { name: "button_unclick2";
				signal: "mouse,clicked,1";
				source: "over3";
				action: STATE_SET "default" 0.0;
				target: "over3";
			}
			program { name: "button_unclick3";
				signal: "mouse,clicked,1";
				source: "over2";
				action: SIGNAL_EMIT "elm,action,click" "";
			}
			program { name: "disable";
				signal: "elm,state,disabled";
				source: "elm";
				action: STATE_SET "disabled" 0.0;
				target: "button_image";
				target: "over2";
				target: "disabler";
				after: "disable_text";
			}
			program { name: "disable_text";
				script {
					set_state(PART:"elm.text", "disabled", 0.0);
					set_int(button_state, 1);
				}
			}
			program { name: "enable";
				signal: "elm,state,enabled";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "button_image";
				target: "over2";
				target: "disabler";
				after: "enable_text";
			}
			program { name: "enable_text";
				script {
					set_state(PART:"elm.text", "default", 0.0);
					set_int(button_state, 0);
				}
			}
			program { name: "focused";
				//signal: "elm,action,focus";
				//source: "elm";
				action: STATE_SET "focused" 0.0;
				target: "button_image";
				target: "elm.text";
			}
			program { name: "unfocused";
				//signal: "elm,action,unfocus";
				//source: "elm";
				action: STATE_SET "default" 0.0;
				target: "button_image";
				after: "unfocus_text";
			}
			program { name: "unfocus_text";
				action: STATE_SET "default" 0.0;
				target: "elm.text";
			}
		}
	}
	
//###############################################
// Nocontents Search Button Styles //
//###############################################

	group { name: "elm/button/base/nocontents/search_button";
		images {
			image: "00_button_03_normal.png" COMP;
			image: "00_button_03_press.png" COMP;
			image: "00_button_03_focus.png" COMP;
		}
		script {
			public button_state = 0; //0:enabled, 1: disabled
		}
		parts {
			part { name: "button_image";
				mouse_events: 1;
				scale: 1;
				description { state: "default" 0.0;
					min: 16 50;
					image {
						normal: "00_button_03_normal.png";
						border: 7 7 7 7;
						border_scale: 1;
					}
				}
				description { state: "clicked" 0.0;
					inherit: "default" 0.0;
					image.normal: "00_button_03_press.png";
				}
				description { state: "disabled" 0.0;
					inherit:  "default" 0.0;
				}
				description { state: "focused" 0.0;
					inherit: "default" 0.0;
					image.normal: "00_button_03_focus.png";
				}
			}
			part {
				name: "padding_left";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					align: 0.0 0.0;
					rel1.relative: 0.0 0.0;
					rel2.relative: 0.0 1.0;
					min: 5 5;
					fixed: 1 0;
					color: 0 0 0 0;
				}
			}
			part {
				name: "padding_right";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					align: 1.0 0.0;
					rel1.relative: 1.0 0.0;
					rel2.relative: 1.0 1.0;
					min: 5 5;
					fixed: 1 0;
					color: 0 0 0 0;
				}
			}
			part {
				name: "padding_top";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					align: 0.0 0.0;
					rel1.relative: 0.0 0.0;
					rel2.relative: 1.0 0.0;
					min: 5 5;
					fixed: 0 1;
					color: 0 0 0 0;
				}
			}
			part {
				name: "padding_bottom";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					align: 1.0 1.0;
					rel1.relative: 0.0 1.0;
					rel2.relative: 1.0 1.0;
					min: 5 5;
					fixed: 0 1;
					color: 0 0 0 0;
				}
			}
			part {
				name: "icon_rect";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					visible: 1;
					min: 0 0;
					fixed: 1 0;
					rel1 { relative: 1.0 1.0; to_x: "padding_left"; to_y: "padding_top"; }
					rel2 { relative: 1.0 0.0; to_x: "padding_left"; to_y: "padding_bottom"; }
					align: 0.0 0.5;
					color: 0 0 0 0;
				}
				description { state: "visible" 0.0;
					visible: 1;
					min: 40 40;
					fixed: 1 0;
					rel1 {relative: 1.0 1.0; to_x: "padding_left"; to_y: "padding_top"; }
					rel2 {relative: 1.0 0.0; to_x: "padding_left"; to_y: "padding_bottom"; }
					aspect: 1.0 1.0;
					aspect_preference: VERTICAL;
					align: 0.0 0.5;
					color: 0 0 0 0;
				}
				description { state: "icononly" 0.0;
					inherit: "default" 0.0;
				}
			} 
			part {
				name: "padding_after_icon";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0; //when only icon or no icon is there
					align: 0.0 0.0;
					rel1 { relative: 1.0 0.0; to: "icon_rect"; }
					rel2 { relative: 1.0 1.0; to: "icon_rect"; } 			
					fixed: 1 0;
					min: 0 0;
					color: 0 255 0 100;
				}
				description { state: "visible" 0.0;
					visible: 1;
					align: 0.0 0.0;
					rel1 { relative: 1.0 0.0; to: "icon_rect"; }
					rel2 { relative: 1.0 1.0; to: "icon_rect"; } 			
					fixed: 1 0;
					min: 12 0;
					max: 12 0;
					color: 0 0 0 255;
				}
				description { state: "icononly" 0.0;
					inherit: "default" 0.0;
				}
			}
			part {
				name: "padding_before_text";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0; //when only icon or no icon is there
					align: 1.0 0.5;
					rel1 { relative: 0.0 1.0; to_x: "elm.text"; to_y: "padding_top"; }
					rel2 { relative: 0.0 0.0; to_x: "elm.text"; to_y: "padding_bottom"; } 			
					fixed: 1 0;
					min: 12 0;
					max: 12 0;
					color: 0 0 0 0;
				}
			}					
			part { name: "elm.swallow.content";
				type: SWALLOW;
				scale: 1;
				description { state: "default" 0.0;
					visible: 0;
					align: 0.0 0.5;
					rel1 { relative: 1.0 1.0; to_x: "padding_left"; to_y: "padding_top"; }
					rel2 { relative: 1.0 0.0; to_x: "padding_left"; to_y: "padding_bottom"; }
					fixed: 1 0;
				}
				description { state: "visible" 0.0;
					fixed: 1 0;
					visible: 1;
					align: 1.0 0.5;
					rel1 { relative: 0.0 1.0; to_x: "padding_before_text"; to_y: "padding_top"; }
					rel2 { relative: 0.0 0.0; to_x: "padding_before_text"; to_y: "padding_bottom"; }
					aspect: 1.0 1.0;
					aspect_preference: VERTICAL;
				}
				description { state: "icononly" 0.0;;
					visible: 1;
					min: 40 40;
					rel1 { relative: 1.0 1.0; to_x: "padding_left"; to_y: "padding_top"; }
					rel2 { relative: 0.0 0.0; to_x: "padding_right"; to_y: "padding_bottom"; }
					align: 0.5 0.5;
					aspect: 1.0 1.0;
					aspect_preference: VERTICAL;
				}
			}
			part { name: "elm.text";
				type:          TEXT;
				effect:        SHADOW;
				mouse_events:  0;
				scale: 1;
				description { state: "default" 0.0;
					visible: 0;
					rel1 { relative: 1.0 1.0; to_x: "padding_after_icon"; to_y: "padding_top"; }
					rel2 { relative: 0.0 0.0; to_x: "padding_right"; to_y:"padding_bottom"; }
					align: 0.5 0.5;
					color: 51 102 255 255;
					color2: 255 255 255 255;				
					text {
						font: "SLP:style=Medium";
						size: 24;
						min:  0 0;
						align: 0.5 0.5;
						max: 1 0;
					}
				}
				description { state: "visible" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					min: 90 40;
				}
				description { state: "clicked" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					min: 0 0;
					color: 255 255 255 255;
					color2: 0 0 0 102;
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					color: 0 0 0 128;
					color3: 0 0 0 0;
				}
				description { state: "disabled_visible" 0.0;
					inherit: "default" 0.0;
					color: 0 0 0 128;
					color3: 0 0 0 0;
					visible: 1;
				}
				description { state: "focused" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					min: 0 0;
					color: 255 255 255 255;
					color2: 0 0 0 102;
				}
			}
			part { name: "over2";
				type: RECT;
				mouse_events: 1;
				repeat_events: 1;
				ignore_flags: ON_HOLD;
				description { state: "default" 0.0;
					color: 0 0 0 0;
				}
				description { state: "disabled" 0.0;
					inherit:  "default" 0.0;
					visible: 0;
				}
			}
			part { name: "over3";
				type: RECT;
				mouse_events: 1;
				repeat_events: 1;
				description { state: "default" 0.0;
					color: 0 0 0 0;
				}
				description { state: "clicked" 0.0;
					inherit:  "default" 0.0;
					visible: 1;
				}
			}
			part { name: "disabler";
				type: RECT;
				description { state: "default" 0.0;
					color: 0 0 0 0;
					visible: 0;
				}
				description { state: "disabled" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
			}
		}
		programs {
			program { name: "button_click";
				signal: "mouse,down,1";
				source: "over2";
				action: SIGNAL_EMIT "elm,action,press" "";
				after: "button_click_anim";
			}
			program { name: "button_click_anim";
				action: STATE_SET "clicked" 0.0;
				target: "button_image";
				after: "text_clicked";
			}
			program { name: "text_clicked";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "visible"))
						set_state(PART:"elm.text", "clicked", 0.0);
				}
			}
			program { name: "button_unpress";
				action: SIGNAL_EMIT "elm,action,unpress" "";
			}
			program { name: "button_mouseout_clicked";
				signal: "mouse,up,1";
				source: "over3";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.swallow.content", st, 30, vl);
					if (strcmp(st, "icononly"))
					{
						emit("elm,action,default,text,set", "");
						set_state(PART:"elm.text", "visible", 0.0);
					}
					if(get_int(button_state) !=1)
						set_state(PART:"button_image", "default", 0.0);
				}
				after: button_unpress;
			}
			program { name: "button_click2";
				signal: "mouse,down,1";
				source: "over3";
				action: STATE_SET "clicked" 0.0;
				target: "over3";
			}
			program { name: "button_unclick2";
				signal: "mouse,clicked,1";
				source: "over3";
				action: STATE_SET "default" 0.0;
				target: "over3";
			}
			program { name: "button_unclick3";
				signal: "mouse,clicked,1";
				source: "over2";
				action: SIGNAL_EMIT "elm,action,click" "";
			}
			program { name: "text_show";
				signal: "elm,state,text,visible";
				source: "elm";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.swallow.content", st, 30, vl);
					if (!strcmp(st, "icononly"))
					{
						set_state(PART:"elm.swallow.content", "visible", 0.0);
						set_state(PART:"icon_rect", "visible", 0.0);
						set_state(PART:"padding_after_icon", "visible", 0.0);
					}
					set_state(PART:"elm.text", "visible", 0.0);
				}
			}
			program { name: "text_hide";
				signal: "elm,state,text,hidden";
				source: "elm";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.swallow.content", st, 30, vl);
					if (!strcmp(st, "visible"))
					{
						set_state(PART:"elm.swallow.content", "icononly", 0.0);
						set_state(PART:"icon_rect", "icononly", 0.0);
						set_state(PART:"padding_after_icon", "icononly", 0.0);
					}
					set_state(PART:"elm.text", "default", 0.0);
				}
			}
			program { name: "icon_show";
				signal: "elm,state,icon,visible";
				source: "elm";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "visible"))
					{
						set_state(PART:"elm.swallow.content", "visible", 0.0);
						set_state(PART:"icon_rect", "visible", 0.0);
						set_state(PART:"padding_after_icon", "visible", 0.0);
					}
					else
					{
						set_state(PART:"elm.swallow.content", "icononly", 0.0);
						set_state(PART:"icon_rect", "icononly", 0.0);
						set_state(PART:"padding_after_icon", "icononly", 0.0);
					}
				}
			}
			program { name: "icon_hide";
				signal: "elm,state,icon,hidden";
				source: "elm";
				action:  STATE_SET "default" 0.0;
				target: "elm.swallow.content";
			}
			program { name: "disable";
				signal: "elm,state,disabled";
				source: "elm";
				action: STATE_SET "disabled" 0.0;
				target: "button_image";
				target: "over2";
				target: "disabler";
				after: "disable_text";
			}
			program { name: "disable_text";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "visible"))
						set_state(PART:"elm.text", "disabled_visible", 0.0);
					else
						set_state(PART:"elm.text", "disabled", 0.0);
					set_int(button_state, 1);
				}
			}
			program { name: "enable";
				signal: "elm,state,enabled";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "button_image";
				target: "over2";
				target: "disabler";
				after: "enable_text";
			}
			program { name: "enable_text";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if (!strcmp(st, "disabled_visible"))
						set_state(PART:"elm.text", "visible", 0.0);
					else
						set_state(PART:"elm.text", "default", 0.0);
					set_int(button_state, 0);
				}
			}
			program { name: "focused";
				//signal: "elm,action,focus";
				//source: "elm";
				action: STATE_SET "focused" 0.0;
				target: "button_image";
				target: "elm.text";
			}
			program { name: "unfocused";
				//signal: "elm,action,unfocus";
				//source: "elm";
				action: STATE_SET "default" 0.0;
				target: "button_image";
				after: "unfocus_text";
			}
			program { name: "unfocus_text";
				action: STATE_SET "visible" 0.0;
				target: "elm.text";
			}
		}
	}
	

	

