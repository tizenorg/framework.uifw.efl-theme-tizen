/*
 *  nbeat-theme
 *
 * Copyright (c) 2000 - 2011 Samsung Electronics Co., Ltd. All rights reserved.
 *
 * Contact: Seokjae Jeong <seok.j.jeong@samsung.com>, Myoungwoon Roy Kim <Myoungwoon.kim@samsung.com>, Jeonghyun Yun <jh0506.yun@samsung.com>, Jaehwan Kim <jae.hwan.kim@samsung.com>, Chuneon Park <chuneon.park@samsung.com>, Juyung Seo <juyung.seo@samsung.com>, Woohyun Jung <wh0705.jung@samsung.com>, Myungjae Lee <mjae.lee@samsung.com>, Hyoyoung Chang <hyoyoung.chang@samsung.com>, IlKook Yun <ilkook.yun@samsung.com>, CinWoo Kim <cinoo.kim@samsung.com> JiYeon Park <jy0703.park@samsung.com>
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the
 * Free Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT ANY
 * WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public
 * License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this library; if not, write to the Free Software Foundation, Inc., 51
 * Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
 *
 */

#define NAVIFRAME_OH_CLOSED_H 5
#define NAVIFRAME_OH_OPENED_H 65
#define NAVIFRAME_OH_OPENED_DOUBLE_H 124
#define NAVIFRAME_OH_SHADOW_H 5

///////////////////////////////////////////////////////////////////////////
// Naviframe
///////////////////////////////////////////////////////////////////////////
   group { name:"elm/naviframe/base/default";
      parts {
         part { name: "base";
            mouse_events: 0;
            description { state: "default" 0.0;
            }
         }
      }
   }
  group { name:"elm/naviframe/item/basic/default";
      images {
         image: "naviframe_optionheader.png" COMP;
         image: "naviframe_optionheader_arrow.png" COMP;
         image: "naviframe_optionheader_shadow.png" COMP;
      }
      script {
         public oh_show = 0;     //optionheader show/hide
         public oh_close = 0;    //optionheader close/open
      }
      parts {
         part { name: "title_clip";
            type: RECT;
            mouse_events: 0;
            description { state: "default" 0.0;
               min: 1 NAVIFRAME_TITLE_H;
               align: 0.0 0.0;
               fixed: 0 1;
               rel1 { relative: 0.0 0.0; }
               rel2 { relative: 1.0 0.0; }
            }
            description { state: "hide" 0.0;
               inherit: "default" 0.0;
               min: 0 0;
               max: 0 0;
               fixed: 1 1;
            }
         }
         part { name: "optionheader_clip";
            type: RECT;
            mouse_events: 0;
            description { state: "default" 0.0;
               min: 1 NAVIFRAME_OH_CLOSED_H;
               align: 0.5 0;
               fixed: 0 1;
               rel1.to_x: "elm.swallow.content";
               rel1.to_y: "title_clip";
               rel1.relative: 0 1;
               rel2.to_x: "elm.swallow.content";
               rel2.to_y: "title_clip";
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               min: 1 NAVIFRAME_OH_OPENED_H;
            }
         }
         part { name: "optionheader_bg";
            type: IMAGE;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               rel1 { to: "optionheader_clip"; }
               rel2 { to: "optionheader_clip"; }
               image { normal: "naviframe_optionheader.png";
                  border: 0 0 1 0;
               }
            }
         }
         part { name: "elm.swallow.optionheader";
            type: SWALLOW;
            scale: 1;
            clip_to: "optionheader_clip";
            description { state: "default" 0.0;
               min: 1 NAVIFRAME_OH_OPENED_H;
               rel1.to: "optionheader_bg";
               rel2.to: "optionheader_bg";
               rel2.relative: 1 0;
               fixed: 0 1;
               align: 0.5 0;
               visible: 0;
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part { name: "content_clip";
            type: RECT;
            mouse_events: 0;
            description { state: "default" 0.0;
               rel1.to_y: "optionheader_bg";
               rel1.relative: 0 1;
            }
         }
         part { name: "elm.swallow.content";
            type: SWALLOW;
            scale: 1;
            repeat_events: 0;
            clip_to: "content_clip";
            description { state: "default" 0.0;
               align: 0.0 0.0;
               rel1.relative: 1.0 1.0;
               rel1.to_y: "optionheader_bg";
               rel2.relative: 2.0 1.0;
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               rel1.relative: 0.0 1.0;
               rel2.relative: 1.0 1.0;
            }
            description { state: "pushed" 0.0;
               inherit: "default" 0.0;
               rel1.relative: -1.0 1.0;
               rel2.relative: 0.0 1.0;
            }
            description { state: "popped" 0.0;
               inherit: "default" 0.0;
               rel1.relative: 1.0 1.0;
               rel2.relative: 2.0 1.0;
            }
         }
         part { name: "title_base";
            type: RECT;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               min: 1 NAVIFRAME_TITLE_H;
               align: 0.5 0.0;
               fixed: 0 1;
               rel1 { relative: 0.0 0.0; }
               rel2 { relative: 1.0 0.0; }
               color: NAVIFRAME_TITLE_BG_COLOR_INC;
            }
         }
         part { name: "elm.rect.pada";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               min: 82 0;
               fixed: 1 0;
               align: 0.0 0.5;
               rel1 { relative: 0.0 0.0; to: "title_base"; }
               rel2 { relative: 0.0 1.0; to: "title_base"; }
               visible: 0;
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               min: 102 0;
            }
         }
         part { name: "separator_1";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               align: 1.0 0;
               min: 1 0;
               rel1 { relative: 0.0 0.2; to:"elm.rect.padb"; to: "title_base"; }
               rel2 { relative: 0.0 0.8; to:"elm.rect.padb"; to: "title_base"; }
               fixed: 1 0;
               color: NAVIFRAME_TITLE_RIGHT_SEPARATOR_COLOR_INC;
            }
         }
         part { name: "separator_2";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               align: 1.0 0;
               min: 1 0;
               rel1 { relative: 0.0 0.0; to: "separator_1"; to: "title_base"; }
               rel2 { relative: 0.0 1.0; to: "separator_1"; to: "title_base"; }
               fixed: 1 0;
               color: NAVIFRAME_TITLE_LEFT_SEPARATOR_COLOR_INC;
            }
         }
         part { name: "elm.rect.padb";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               min: 80 0;
               fixed: 1 0;
               align: 1.0 0.5;
               rel1 { relative: 1.0 0.0; to: "title_base"; }
               rel2 { relative: 1.0 1.0; to: "title_base"; }
               visible: 0;
            }
         }
         part { name: "elm.text.title";
            type: TEXT;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               text { font: "SLP:style=Medium";
                  size: 22;
                  min: 0 0;
                  max: 1 0;
                  align: 0.5 0.5;
               }
               color: NAVIFRAME_TITLE_TEXT_COLOR_INC;
               align: 0.5 0.5;
               rel1.to: "title_base";
               rel2.to: "title_base";
            }
         }
         part { name: "click_event_area";
             ignore_flags: ON_HOLD;
             description { state: "default" 0.0;
                rel1 { to: "title_base"; }
                rel2 { to: "elm.rect.padb"; relative: 0.0 1.0; }
             }
         }
         part { name: "elm.swallow.prev_btn";
            type: SWALLOW;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               align: 0 0.5;
               fixed: 1 1;
               rel1 { relative: 0.0 0.0; to: "title_base"; }
               rel2 { relative: 0.0 1.0; to: "title_base"; }
            }
         }
         part { name: "elm.swallow.icon";
            type: SWALLOW;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               max: 20 20;
               rel1 { relative: 0.0 0.0; to_x: "padding_before_text"; }
               rel2 { relative: 0.0 1.0; to_x: "padding_before_text"; }
               aspect: 1.0 1.0;
               aspect_preference: VERTICAL;
               align: 1.0 0.5;
            }
         }
         part { name: "padding_before_text";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               align: 1.0 0.5;
               rel1 { relative: 0.0 0.0; to_x: "elm.text.title"; }
               rel2 { relative: 0.0 1.0; to_x: "elm.text.title"; }
               fixed: 1 0;
               min: 10 0;
               visible: 0;
            }
         }
         part { name: "optionheader_arrow";
            type: IMAGE;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               min: 15 11;
               max: 15 11;
               fixed: 1 1;
               align: 0.5 1;
               visible: 0;
               rel1.to_y: "optionheader_bg";
               rel1.offset: 0 1;
               rel2.relative: 1 0;
               rel2.to_y: "optionheader_bg";
               rel2.offset: -1 0;
               image {
                  normal: "00_winset_control_top_arrow.png";
               }
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part { name: "optionheader_shadow";
            type: IMAGE;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               min: 1 NAVIFRAME_OH_SHADOW_H;
               fixed: 0 1;
               align: 0.5 0;
               color: 255 255 255 0;
               rel1 { to: "optionheader_bg"; relative: 0 1; }
               rel2 { to: "optionheader_bg"; relative: 1 1; }
               image { normal: "navibar_item_separator_shadow.png"; }
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 255;
            }
         }
      }
      programs {
         program { name: "show";
            signal: "elm,state,show";
            source: "elm";
            action: STATE_SET "show" 0.0;
            target: "elm.swallow.content";
            transition: DECELERATE 0.5;
            after: "show_finished";
         }
         program { name: "pushed";
            signal: "elm,state,pushed";
            source: "elm";
            action: STATE_SET "pushed" 0.0;
            target: "elm.swallow.content";
            transition: DECELERATE 0.5;
            after: "pushed_finished";
         }
         program { name: "popped";
            signal: "elm,state,popped";
            source: "elm";
            action: STATE_SET "popped" 0.0;
            target: "elm.swallow.content";
            transition: DECELERATE 0.5;
            after: "popped_finished";
         }
         program { name: "visible";
            signal: "elm,state,visible";
            source: "elm";
            action: STATE_SET "show" 0.0;
            target: "elm.swallow.content";
         }
         program { name: "title_show";
            signal: "elm,state,title,show";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "title_clip";
         }
         program { name: "title_hide";
            signal: "elm,state,title,hide";
            source: "elm";
            action: STATE_SET "hide" 0.0;
            target: "title_clip";
         }
         program { name: "optionheader_show";
            signal: "elm,state,elm.swallow.optionheader,show";
            source: "elm";
            script {
               set_state(PART:"optionheader_clip", "show", 0.0);
               set_state(PART:"optionheader_shadow", "show", 0.0);
               set_state(PART:"optionheader_arrow", "show", 0.0);
               set_state(PART:"elm.swallow.optionheader", "show", 0.0);
               set_int(oh_show, 1);
               emit("elm,state,optionheader_arrow,show", "");
            }
         }
         program { name: "optionheader_hide";
            signal: "elm,state,elm.swallow.optionheader,hide";
            source: "elm";
            script {
               set_state(PART:"optionheader_clip", "default", 0.0);
               set_state(PART:"optionheader_arrow", "default", 0.0);
               set_state(PART:"optionheader_shadow", "default", 0.0);
               set_state(PART:"elm.swallow.optionheader", "default", 0.0);
               set_int(oh_show, 0);
            }
         }
         program { name: "optionheader_open";
            signal: "elm,state,optionheader,open";
            source: "";
            action: STATE_SET "show" 0.0;
            target: "optionheader_clip";
            target: "optionheader_shadow";
            target: "elm.swallow.optionheader";
            transition: LINEAR 0.2;
         }
         program { name: "optionheader_close";
            signal: "elm,state,optionheader,close";
            source: "";
            action: STATE_SET "default" 0.0;
            target: "optionheader_clip";
            target: "optionheader_shadow";
            target: "elm.swallow.optionheader";
            transition: LINEAR 0.2;
         }
         program { name: "show_finished";
            action: SIGNAL_EMIT "elm,action,show,finished" "";
         }
         program { name: "pushed_finished";
            action: SIGNAL_EMIT "elm,action,pushed,finished" "";
         }
         program { name: "popped_finished";
            action: SIGNAL_EMIT "elm,action,popped,finished" "";
         }
         program {
            name: "title_clicked";
            signal: "mouse,clicked,1";
            source: "click_event_area";
            action: SIGNAL_EMIT "elm,action,clicked" "elm";
            script {
               if (get_int(oh_show) == 1) {
                  if (get_int(oh_close) == 1) {
                     emit("elm,state,optionheader,open", "");
                     set_int(oh_close, 0);
                  }else {
                     emit("elm,state,optionheader,close", "");
                     set_int(oh_close, 1);
                  }
               }//if
            }//script
         }
      }
   }
   group { name:"elm/naviframe/item/basic2/default";
      images {
         image: "naviframe_optionheader.png" COMP;
         image: "naviframe_optionheader_arrow.png" COMP;
         image: "naviframe_optionheader_shadow.png" COMP;
      }
      script {
         public oh_show = 0;     //optionheader show/hide
         public oh_close = 0;    //optionheader close/open
      }
      parts {
         part { name: "title_clip";
            type: RECT;
            mouse_events: 0;
            description { state: "default" 0.0;
               min: 1 NAVIFRAME_TITLE_H;
               align: 0.0 0.0;
               fixed: 0 1;
               rel1 { relative: 0.0 0.0; }
               rel2 { relative: 1.0 0.0; }
            }
            description { state: "hide" 0.0;
               inherit: "default" 0.0;
               min: 0 0;
               max: 0 0;
               fixed: 1 1;
            }
         }
         part { name: "optionheader_clip";
            type: RECT;
            mouse_events: 0;
            description { state: "default" 0.0;
               min: 1 NAVIFRAME_OH_CLOSED_H;
               align: 0.5 0;
               fixed: 0 1;
               rel1.to_x: "elm.swallow.content";
               rel1.to_y: "title_clip";
               rel1.relative: 0 1;
               rel2.to_x: "elm.swallow.content";
               rel2.to_y: "title_clip";
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               min: 1 NAVIFRAME_OH_OPENED_DOUBLE_H;
            }
         }
         part { name: "optionheader_bg";
            type: IMAGE;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               rel1 { to: "optionheader_clip"; }
               rel2 { to: "optionheader_clip"; }
               image { normal: "naviframe_optionheader.png";
                  border: 0 0 1 0;
               }
            }
         }
         part { name: "elm.swallow.optionheader";
            type: SWALLOW;
            scale: 1;
            clip_to: "optionheader_clip";
            description { state: "default" 0.0;
               min: 1 NAVIFRAME_OH_OPENED_DOUBLE_H;
               rel1.to: "optionheader_bg";
               rel2.to: "optionheader_bg";
               rel2.relative: 1 0;
               fixed: 0 1;
               align: 0.5 0;
               visible: 0;
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part { name: "content_clip";
            type: RECT;
            mouse_events: 0;
            description { state: "default" 0.0;
               rel1.to_y: "optionheader_bg";
               rel1.relative: 0 1;
            }
         }
         part { name: "elm.swallow.content";
            type: SWALLOW;
            scale: 1;
            repeat_events: 0;
            clip_to: "content_clip";
            description { state: "default" 0.0;
               align: 0.0 0.0;
               rel1.relative: 1.0 1.0;
               rel1.to_y: "optionheader_bg";
               rel2.relative: 2.0 1.0;
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               rel1.relative: 0.0 1.0;
               rel2.relative: 1.0 1.0;
            }
            description { state: "pushed" 0.0;
               inherit: "default" 0.0;
               rel1.relative: -1.0 1.0;
               rel2.relative: 0.0 1.0;
            }
            description { state: "popped" 0.0;
               inherit: "default" 0.0;
               rel1.relative: 1.0 1.0;
               rel2.relative: 2.0 1.0;
            }
         }
         part { name: "title_base";
            type: RECT;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               min: 1 NAVIFRAME_TITLE_H;
               align: 0.5 0.0;
               fixed: 0 1;
               rel1 { relative: 0.0 0.0; }
               rel2 { relative: 1.0 0.0; }
               color: NAVIFRAME_TITLE_BG_COLOR_INC;
            }
         }
         part { name: "elm.rect.pada";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               min: 82 0;
               fixed: 1 0;
               align: 0.0 0.5;
               rel1 { relative: 0.0 0.0; to: "title_base"; }
               rel2 { relative: 0.0 1.0; to: "title_base"; }
               visible: 0;
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               min: 102 0;
            }
         }
         part { name: "separator_1";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               align: 1.0 0;
               min: 1 0;
               rel1 { relative: 0.0 0.2; to:"elm.rect.padb"; to: "title_base"; }
               rel2 { relative: 0.0 0.8; to:"elm.rect.padb"; to: "title_base"; }
               fixed: 1 0;
               color: NAVIFRAME_TITLE_RIGHT_SEPARATOR_COLOR_INC;
            }
         }
         part { name: "separator_2";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               align: 1.0 0;
               min: 1 0;
               rel1 { relative: 0.0 0.0; to: "separator_1"; to: "title_base"; }
               rel2 { relative: 0.0 1.0; to: "separator_1"; to: "title_base"; }
               fixed: 1 0;
               color: NAVIFRAME_TITLE_LEFT_SEPARATOR_COLOR_INC;
            }
         }
         part { name: "elm.rect.padb";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               min: 80 0;
               fixed: 1 0;
               align: 1.0 0.5;
               rel1 { relative: 1.0 0.0; to: "title_base"; }
               rel2 { relative: 1.0 1.0; to: "title_base"; }
               visible: 0;
            }
         }
         part { name: "elm.text.title";
            type: TEXT;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               text { font: "SLP:style=Medium";
                  size: 22;
                  min: 0 0;
                  max: 1 0;
                  align: 0.5 0.5;
               }
               color: NAVIFRAME_TITLE_TEXT_COLOR_INC;
               align: 0.5 0.5;
               rel1.to: "title_base";
               rel2.to: "title_base";
            }
         }
         part { name: "click_event_area";
             ignore_flags: ON_HOLD;
             description { state: "default" 0.0;
                rel1 { to: "title_base"; }
                rel2 { to: "elm.rect.padb"; relative: 0.0 1.0; }
             }
         }
         part { name: "elm.swallow.prev_btn";
            type: SWALLOW;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               align: 0 0.5;
               fixed: 1 1;
               rel1 { relative: 0.0 0.0; to: "title_base"; }
               rel2 { relative: 0.0 1.0; to: "title_base"; }
            }
         }
         part { name: "elm.swallow.icon";
            type: SWALLOW;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               max: 20 20;
               rel1 { relative: 0.0 0.0; to_x: "padding_before_text"; }
               rel2 { relative: 0.0 1.0; to_x: "padding_before_text"; }
               aspect: 1.0 1.0;
               aspect_preference: VERTICAL;
               align: 1.0 0.5;
            }
         }
         part { name: "padding_before_text";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               align: 1.0 0.5;
               rel1 { relative: 0.0 0.0; to_x: "elm.text.title"; }
               rel2 { relative: 0.0 1.0; to_x: "elm.text.title"; }
               fixed: 1 0;
               min: 10 0;
               visible: 0;
            }
         }
         part { name: "optionheader_arrow";
            type: IMAGE;
            mouse_events: 0;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               min: 15 11;
               max: 15 11;
               fixed: 1 1;
               align: 0.5 1;
               visible: 0;
               rel1.to_y: "optionheader_bg";
               rel1.offset: 0 1;
               rel2.relative: 1 0;
               rel2.to_y: "optionheader_bg";
               rel2.offset: -1 0;
               image {
                  normal: "00_winset_control_top_arrow.png";
               }
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part { name: "optionheader_shadow";
            type: IMAGE;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               min: 1 NAVIFRAME_OH_SHADOW_H;
               fixed: 0 1;
               align: 0.5 0;
               color: 255 255 255 0;
               rel1 { to: "optionheader_bg"; relative: 0 1; }
               rel2 { to: "optionheader_bg"; relative: 1 1; }
               image { normal: "navibar_item_separator_shadow.png"; }
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 255;
            }
         }
      }
      programs {
         program { name: "show";
            signal: "elm,state,show";
            source: "elm";
            action: STATE_SET "show" 0.0;
            target: "elm.swallow.content";
            transition: DECELERATE 0.5;
            after: "show_finished";
         }
         program { name: "pushed";
            signal: "elm,state,pushed";
            source: "elm";
            action: STATE_SET "pushed" 0.0;
            target: "elm.swallow.content";
            transition: DECELERATE 0.5;
            after: "pushed_finished";
         }
         program { name: "popped";
            signal: "elm,state,popped";
            source: "elm";
            action: STATE_SET "popped" 0.0;
            target: "elm.swallow.content";
            transition: DECELERATE 0.5;
            after: "popped_finished";
         }
         program { name: "visible";
            signal: "elm,state,visible";
            source: "elm";
            action: STATE_SET "show" 0.0;
            target: "elm.swallow.content";
         }
         program { name: "title_show";
            signal: "elm,state,title,show";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "title_clip";
         }
         program { name: "title_hide";
            signal: "elm,state,title,hide";
            source: "elm";
            action: STATE_SET "hide" 0.0;
            target: "title_clip";
         }
         program { name: "optionheader_show";
            signal: "elm,state,elm.swallow.optionheader,show";
            source: "elm";
            script {
               set_state(PART:"optionheader_clip", "show", 0.0);
               set_state(PART:"optionheader_shadow", "show", 0.0);
               set_state(PART:"optionheader_arrow", "show", 0.0);
               set_state(PART:"elm.swallow.optionheader", "show", 0.0);
               set_int(oh_show, 1);
               emit("elm,state,optionheader_arrow,show", "");
            }
         }
         program { name: "optionheader_hide";
            signal: "elm,state,elm.swallow.optionheader,hide";
            source: "elm";
            script {
               set_state(PART:"optionheader_clip", "default", 0.0);
               set_state(PART:"optionheader_arrow", "default", 0.0);
               set_state(PART:"optionheader_shadow", "default", 0.0);
               set_state(PART:"elm.swallow.optionheader", "default", 0.0);
               set_int(oh_show, 0);
            }
         }
         program { name: "optionheader_open";
            signal: "elm,state,optionheader,open";
            source: "";
            action: STATE_SET "show" 0.0;
            target: "optionheader_clip";
            target: "optionheader_shadow";
            target: "elm.swallow.optionheader";
            transition: LINEAR 0.2;
         }
         program { name: "optionheader_close";
            signal: "elm,state,optionheader,close";
            source: "";
            action: STATE_SET "default" 0.0;
            target: "optionheader_clip";
            target: "optionheader_shadow";
            target: "elm.swallow.optionheader";
            transition: LINEAR 0.2;
         }
         program { name: "show_finished";
            action: SIGNAL_EMIT "elm,action,show,finished" "";
         }
         program { name: "pushed_finished";
            action: SIGNAL_EMIT "elm,action,pushed,finished" "";
         }
         program { name: "popped_finished";
            action: SIGNAL_EMIT "elm,action,popped,finished" "";
         }
         program {
            name: "title_clicked";
            signal: "mouse,clicked,1";
            source: "click_event_area";
            action: SIGNAL_EMIT "elm,action,clicked" "elm";
            script {
               if (get_int(oh_show) == 1) {
                  if (get_int(oh_close) == 1) {
                     emit("elm,state,optionheader,open", "");
                     set_int(oh_close, 0);
                  }else {
                     emit("elm,state,optionheader,close", "");
                     set_int(oh_close, 1);
                  }
               }//if
            }//script
         }
      }
   }
   group { name:"elm/naviframe/item/instant/default";
      script {
         public oh_show = 0;     //optionheader show/hide
         public oh_close = 0;    //optionheader close/open
      }
      parts {
         part { name: "title_clip";
            type: RECT;
            mouse_events: 0;
            description { state: "default" 0.0;
               min: 1 NAVIFRAME_TITLE_H;
               align: 0.0 0.0;
               fixed: 0 1;
               rel1 { relative: 0.0 0.0; }
               rel2 { relative: 1.0 0.0; }
            }
            description { state: "hide" 0.0;
               inherit: "default" 0.0;
               min: 0 0;
               max: 0 0;
               fixed: 1 1;
            }
         }
         part { name: "optionheader_clip";
            type: RECT;
            mouse_events: 0;
            description { state: "default" 0.0;
               min: 1 NAVIFRAME_OH_CLOSED_H;
               align: 0.5 0;
               fixed: 0 1;
               rel1 { to: "title_clip"; relative: 0 1; }
               rel2 { to: "title_clip"; relative: 1 1; }
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               min: 1 NAVIFRAME_OH_OPENED_H;
            }
         }
         part { name: "optionheader_bg";
            type: IMAGE;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               rel1 { to: "optionheader_clip"; }
               rel2 { to: "optionheader_clip"; }
               image { normal: "naviframe_optionheader.png";
                  border: 0 0 1 0;
               }
            }
         }
         part { name: "elm.swallow.optionheader";
            type: SWALLOW;
            scale: 1;
            clip_to: "optionheader_clip";
            description { state: "default" 0.0;
               min: 1 NAVIFRAME_OH_OPENED_H;
               rel1.to: "optionheader_bg";
               rel2.to: "optionheader_bg";
               rel2.relative: 1 0;
               fixed: 0 1;
               align: 0.5 0;
               visible: 0;
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part { name: "content_clip";
            type: RECT;
            mouse_events: 0;
            description { state: "default" 0.0;
               rel1.to_y: "optionheader_bg";
               rel1.relative: 0 1;
            }
         }
         part { name: "elm.swallow.content";
            type: SWALLOW;
            scale: 1;
            repeat_events: 0;
            clip_to: "content_clip";
            description { state: "default" 0.0;
               align: 0.0 0.0;
               rel1.relative: 0.0 1.0;
               rel1.to_y: "optionheader_bg";
               rel2.relative: 1.0 1.0;
               visible: 0;
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part { name: "title_base";
            type: RECT;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               min: 1 NAVIFRAME_TITLE_H;
               align: 0.5 0.0;
               fixed: 0 1;
               rel1 { relative: 0.0 0.0; }
               rel2 { relative: 1.0 0.0; }
               color: NAVIFRAME_TITLE_BG_COLOR_INC;
            }
         }
         part { name: "elm.rect.pada";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               min: 82 0;
               fixed: 1 0;
               align: 0.0 0.5;
               rel1 { relative: 0.0 0.0; to: "title_base"; }
               rel2 { relative: 0.0 1.0; to: "title_base"; }
               visible: 0;
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               min: 102 0;
            }
         }
         part { name: "separator_1";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               align: 1.0 0;
               min: 1 0;
               rel1 { relative: 0.0 0.2; to:"elm.rect.padb"; to: "title_base"; }
               rel2 { relative: 0.0 0.8; to:"elm.rect.padb"; to: "title_base"; }
               fixed: 1 0;
               color: NAVIFRAME_TITLE_RIGHT_SEPARATOR_COLOR_INC;
            }
         }
         part { name: "separator_2";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               align: 1.0 0;
               min: 1 0;
               rel1 { relative: 0.0 0.0; to: "separator_1"; to: "title_base"; }
               rel2 { relative: 0.0 1.0; to: "separator_1"; to: "title_base"; }
               fixed: 1 0;
               color: NAVIFRAME_TITLE_LEFT_SEPARATOR_COLOR_INC;
            }
         }
         part { name: "elm.rect.padb";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               min: 80 0;
               fixed: 1 0;
               align: 1.0 0.5;
               rel1 { relative: 1.0 0.0; to: "title_base"; }
               rel2 { relative: 1.0 1.0; to: "title_base"; }
               visible: 0;
            }
         }
         part { name: "elm.text.title";
            type: TEXT;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               text { font: "SLP:style=Medium";
                  size: 22;
                  min: 0 0;
                  max: 1 0;
                  align: 0.5 0.5;
               }
               color: NAVIFRAME_TITLE_TEXT_COLOR_INC;
               align: 0.5 0.5;
               rel1.to: "title_base";
               rel2.to: "title_base";
            }
         }
         part { name: "click_event_area";
             ignore_flags: ON_HOLD;
             description { state: "default" 0.0;
                rel1 { to: "title_base"; }
                rel2 { to: "elm.rect.padb"; relative: 0.0 1.0; }
             }
         }
         part { name: "elm.swallow.prev_btn";
            type: SWALLOW;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               align: 0 0.5;
               fixed: 1 1;
               rel1 { relative: 0.0 0.0; to: "title_base"; }
               rel2 { relative: 0.0 1.0; to: "title_base"; }
            }
         }
         part { name: "elm.swallow.icon";
            type: SWALLOW;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               max: 20 20;
               rel1 { relative: 0.0 0.0; to_x: "padding_before_text"; }
               rel2 { relative: 0.0 1.0; to_x: "padding_before_text"; }
               aspect: 1.0 1.0;
               aspect_preference: VERTICAL;
               align: 1.0 0.5;
            }
         }
         part { name: "padding_before_text";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               align: 1.0 0.5;
               rel1 { relative: 0.0 0.0; to_x: "elm.text.title"; }
               rel2 { relative: 0.0 1.0; to_x: "elm.text.title"; }
               fixed: 1 0;
               min: 10 0;
               visible: 0;
            }
         }
         part { name: "optionheader_arrow";
            type: IMAGE;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               min: 15 11;
               max: 15 11;
               fixed: 1 1;
               align: 0.5 1;
               visible: 0;
               rel1.relative: 0 0;
               rel1.to: "optionheader_bg";
               rel1.offset: 0 1;
               rel2.relative: 1 0;
               rel2.to: "optionheader_bg";
               rel2.offset: -1 0;
               image {
                  normal: "00_winset_control_top_arrow.png";
               }
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part { name: "optionheader_shadow";
            type: IMAGE;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               min: 1 NAVIFRAME_OH_SHADOW_H;
               fixed: 0 1;
               align: 0.5 0;
               color: 255 255 255 0;
               rel1 { to: "optionheader_bg"; relative: 0 1; }
               rel2 { to: "optionheader_bg"; relative: 1 1; }
               image { normal: "navibar_item_separator_shadow.png"; }
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 255;
            }
         }
      }
      programs {
         program { name: "show";
            signal: "elm,state,show";
            source: "elm";
            action: STATE_SET "show" 0.0;
            target: "elm.swallow.content";
            after: "show_finished";
         }
         program { name: "pushed";
            signal: "elm,state,pushed";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "elm.swallow.content";
            after: "pushed_finished";
         }
         program { name: "popped";
            signal: "elm,state,popped";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "elm.swallow.content";
            after: "popped_finished";
         }
         program { name: "visible";
            signal: "elm,state,visible";
            source: "elm";
            action: STATE_SET "show" 0.0;
            target: "elm.swallow.content";
         }
         program { name: "title_show";
            signal: "elm,state,title,show";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "title_clip";
         }
         program { name: "title_hide";
            signal: "elm,state,title,hide";
            source: "elm";
            action: STATE_SET "hide" 0.0;
            target: "title_clip";
         }
         program { name: "optionheader_show";
            signal: "elm,state,elm.swallow.optionheader,show";
            source: "elm";
            action: STATE_SET "show" 0.0;
            target: "optionheader_clip";
            target: "optionheader_arrow";
            target: "optionheader_shadow";
         }
         program { name: "optionheader_hide";
            signal: "elm,state,elm.swallow.optionheader,hide";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "optionheader_clip";
            target: "optionheader_arrow";
            target: "optionheader_shadow";
         }
         program {
            name: "title_clicked";
            signal: "mouse,clicked,1";
            source: "click_event_area";
            action: SIGNAL_EMIT "elm,action,clicked" "elm";
            script {
               if (get_int(oh_show) == 1) {
                  if (get_int(oh_close) == 1) {
                     emit("elm,state,optionheader,open", "");
                     set_int(oh_close, 0);
                  }else {
                     emit("elm,state,optionheader,close", "");
                     set_int(oh_close, 1);
                  }
               }//if
            }//script
         }
         program { name: "show_finished";
            action: SIGNAL_EMIT "elm,action,show,finished" "";
         }
         program { name: "pushed_finished";
            action: SIGNAL_EMIT "elm,action,pushed,finished" "";
         }
         program { name: "popped_finished";
            action: SIGNAL_EMIT "elm,action,popped,finished" "";
         }
      }
   }
