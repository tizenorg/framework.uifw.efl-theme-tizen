/*
 *  nbeat-theme
 *
 * Copyright (c) 2000 - 2011 Samsung Electronics Co., Ltd. All rights reserved.
 *
 * Contact: Seokjae Jeong <seok.j.jeong@samsung.com>, Myoungwoon Roy Kim <Myoungwoon.kim@samsung.com>, Jeonghyun Yun <jh0506.yun@samsung.com>, Jaehwan Kim <jae.hwan.kim@samsung.com>, Chuneon Park <chuneon.park@samsung.com>, Juyung Seo <juyung.seo@samsung.com>, Woohyun Jung <wh0705.jung@samsung.com>, Myungjae Lee <mjae.lee@samsung.com>, Hyoyoung Chang <hyoyoung.chang@samsung.com>, IlKook Yun <ilkook.yun@samsung.com>, CinWoo Kim <cinoo.kim@samsung.com> JiYeon Park <jy0703.park@samsung.com>
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the
 * Free Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT ANY
 * WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public
 * License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this library; if not, write to the Free Software Foundation, Inc., 51
 * Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
 *
 */
   group { name:"elm/naviframe/base/default";
      parts {
         part { name: "base";
            mouse_events: 0;
            description { state: "default" 0.0;
               visible: 0;
            }
         }
      }
   }
   group { name:"elm/naviframe/item/basic/default";
      alias:"elm/naviframe/item/1line/default";
      images {
         image: "naviframe_optionheader.png" COMP;
         image: "naviframe_optionheader_arrow.png" COMP;
      }
      script {
         public oh_show = 0;     //optionheader show/hide
         public oh_close = 0;    //optionheader close/open
         public cbar_bg = 0;     //Controlbar BG Show call count
      }
      parts {
         part { name: "base";
            type: RECT;
            description { state: "default" 0.0;
               visible: 0;
            }
            description { state: "left" 0.0;
               inherit: "default" 0.0;
               rel1.relative: -1.0 0.0;
               rel2.relative: 0.0 1.0;
            }
            description { state: "right" 0.0;
               inherit: "default" 0.0;
               rel1.relative: 1.0 0.0;
               rel2.relative: 2.0 1.0;
            }
         }
         part { name: "title_clip";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               min: 1 NAVIFRAME_TITLE_H_INC;
               align: 0.0 0.0;
               fixed: 0 1;
               rel1 { relative: 0.0 0.0; to: "base"; }
               rel2 { relative: 1.0 0.0; to: "base"; }
            }
            description { state: "hide" 0.0;
               inherit: "default" 0.0;
               min: 0 0;
               max: 0 0;
               fixed: 1 1;
            }
         }
         part { name: "optionheader_clip";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               min: 1 0;
               align: 0.5 0;
               fixed: 0 1;
               rel1.to: "title_clip";
               rel1.relative: 0 1;
               rel2.to: "title_clip";
               visible: 0;
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               min: 1 NAVIFRAME_OH_OPENED_H_INC;
               visible: 1;
            }
            description { state: "hide" 0.0;
               inherit: "default" 0.0;
               min: 0 0;
               max: 0 0;
               fixed: 1 1;
            }
         }
         part { name: "optionheader_bg";
            type: IMAGE;
            scale: 1;
            description { state: "default" 0.0;
               rel1 { to: "optionheader_clip"; }
               rel2 { to: "optionheader_clip"; }
               image { normal: "naviframe_optionheader.png";
                  border: 0 0 4 0;
               }
            }
         }
         part { name: "optionheader_top_padding";
            type: RECT;
            scale: 1;
            clip_to: "optionheader_clip";
            description { state: "default" 0.0;
               min: 1 NAVIFRAME_OH_PADDING_INC;
               rel1 { relative: 0.0 0.0; to: "optionheader_bg"; }
               rel2 { relative: 1.0 0.0; to: "optionheader_bg"; }
               fixed: 0 1;
               align: 0.0 0.0;
               visible: 0;
            }
         }
         part { name: "elm.swallow.optionheader";
            type: SWALLOW;
            scale: 1;
            clip_to: "optionheader_clip";
            description { state: "default" 0.0;
               min: 1 NAVIFRAME_OH_CONTENT_H_INC;
               rel1 { relative: 0.0 1.0; to: "optionheader_top_padding"; }
               rel2 { relative: 1.0 1.0; to: "optionheader_top_padding"; }
               fixed: 0 1;
               align: 0.0 0.0;
               visible: 0;
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part { name: "optionheader_bottom_padding";
            type: RECT;
            scale: 1;
            clip_to: "optionheader_clip";
            description { state: "default" 0.0;
               min: 1 NAVIFRAME_OH_PADDING_INC;
               rel1 { relative: 0.0 1.0; to: "elm.swallow.optionheader"; }
               fixed: 0 1;
               align: 0.0 0.0;
               visible: 0;
            }
         }
         part { name: "content_clip";
            type: RECT;
            mouse_events: 0;
            description { state: "default" 0.0;
               rel1.to: "optionheader_bg";
               rel1.relative: 0 1;
               rel2.to_x: "optionheader_bg";
            }
         }
         part { name: "elm.swallow.content";
            type: SWALLOW;
            scale: 1;
            repeat_events: 0;
            clip_to: "content_clip";
            description { state: "default" 0.0;
               align: 0.0 0.0;
               rel1.relative: 0.0 1.0;
               rel1.to: "optionheader_bg";
               rel2.relative: 1.0 0.0;
               rel2.to_x: "optionheader_bg";
               rel2.to_y: "controlbar_bg";
            }
         }
         part { name: "title_base";
            type: RECT;
            description { state: "default" 0.0;
               rel1 { to: "title_clip"; }
               rel2 { to: "title_clip"; }
               color: NAVIFRAME_TITLE_BG_COLOR_INC;
            }
         }
         part { name: "padding_before_left_btn";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               min: NAVIFRAME_TITLE_FUNC_BTN_PADDING_W_INC 0;
               fixed: 1 0;
               align: 0.0 0.5;
               rel1 { relative: 0.0 0.0; to: "title_base"; }
               rel2 { relative: 0.0 1.0; to: "title_base"; }
               visible: 0;
            }
         }
         part { name: "padding_after_left_btn";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               min: NAVIFRAME_TITLE_FUNC_BTN_PADDING_W_INC 0;
               fixed: 1 0;
               align: 0.0 0.5;
               rel1 { relative: 1.0 0.0; to: "elm.swallow.left_btn"; }
               rel2 { relative: 1.0 1.0; to: "elm.swallow.left_btn"; }
               visible: 0;
            }
         }
         part { name: "padding_after_right_btn";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               min: NAVIFRAME_TITLE_FUNC_BTN_PADDING_W_INC 0;
               fixed: 1 0;
               align: 1.0 0.5;
               rel1 { relative: 1.0 0.0; to: "title_base"; }
               rel2 { relative: 1.0 1.0; to: "title_base"; }
               visible: 0;
            }
         }
         part { name: "padding_before_right_btn";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               min: 0 0;
               fixed: 1 0;
               align: 1.0 0.5;
               rel1 { relative: 0.0 0.0; to: "elm.swallow.right_btn"; }
               rel2 { relative: 0.0 1.0; to: "elm.swallow.right_btn"; }
               visible: 0;
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               min: NAVIFRAME_TITLE_FUNC_BTN_PADDING_W_INC 0;
            }
         }
         part { name: "padding_before_more_btn";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               min: NAVIFRAME_TITLE_FUNC_BTN_PADDING_W_INC 0;
               fixed: 1 0;
               align: 1.0 0.5;
               rel1 { relative: 0.0 0.0; to: "elm.swallow.more_btn"; }
               rel2 { relative: 0.0 1.0; to: "elm.swallow.more_btn"; }
               visible: 0;
            }
         }
         part { name: "padding_before_text";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               align: 1.0 0.5;
               rel1 { relative: 0.0 0.0; to_x: "elm.text.title"; to_y: "title_base"; }
               rel2 { relative: 0.0 1.0; to_x: "elm.text.title"; to_y: "title_base"; }
               fixed: 1 0;
               min: NAVIFRAME_ICON_PADDING_INC;
               visible: 0;
            }
         }
         part { name: "elm.text.title";
            type: TEXT;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               text { font: "SLP:style=Medium";
                  size: NAVIFRAME_TITLE_FONT_SIZE_INC;
                  min: 0 0;
                  max: 1 0;
                  align: 0.5 0.5;
               }
               color: NAVIFRAME_TITLE_TEXT_COLOR_INC;
               align: 0.5 0.5;
               rel1.to: "padding_after_left_btn";
               rel1.relative: 1 0;
               rel2.to: "padding_before_more_btn";
               rel2.relative: 0 1;
            }
         }
         part { name: "elm.swallow.icon";
            type: SWALLOW;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               max: NAVIFRAME_ICON_SIZE_INC;
               rel1 { relative: 0.0 0.0; to: "padding_before_text"; }
               rel2 { relative: 0.0 1.0; to: "padding_before_text"; }
               aspect: 1.0 1.0;
               aspect_preference: VERTICAL;
               align: 1.0 0.5;
            }
         }
         part { name: "click_event_area";
             ignore_flags: ON_HOLD;
             description { state: "default" 0.0;
                rel1 { to: "title_base"; }
                rel2 { to: "title_base"; }
             }
         }
         part { name: "elm.swallow.left_btn";
            type: SWALLOW;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               min: 0 0;
               fixed: 1 0;
               align: 0 0.5;
               rel1 { relative: 1.0 0.0; to: "padding_before_left_btn"; }
               rel2 { relative: 1.0 1.0; to: "padding_before_left_btn"; }
               visible: 0;
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               min: NAVIFRAME_TITLE_FUNC_BTN_SIZE_INC;
               max: NAVIFRAME_TITLE_FUNC_BTN_SIZE_INC;
               fixed: 1 1;
               visible: 1;
            }
         }
         part { name: "elm.swallow.right_btn";
            type: SWALLOW;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               min: 0 0;
               align: 1 0.5;
               fixed: 1 0;
               rel1 { relative: 0.0 0.0; to: "padding_after_right_btn"; }
               rel2 { relative: 0.0 1.0; to: "padding_after_right_btn"; }
               visible: 0;
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               min: NAVIFRAME_TITLE_FUNC_BTN_SIZE_INC;
               max: NAVIFRAME_TITLE_FUNC_BTN_SIZE_INC;
               fixed: 1 1;
               visible: 1;
            }
         }
         part { name: "elm.swallow.more_btn";
            type: SWALLOW;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               min: 0 0;
               fixed: 1 0;
               align: 1 0.5;
               rel1.to: "padding_before_right_btn";
               rel1.relative: 0 0;
               rel2.to: "padding_before_right_btn";
               rel2.relative: 0 1;
               visible: 0;
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               min: NAVIFRAME_TITLE_FUNC_BTN_SIZE_INC;
               max: NAVIFRAME_TITLE_FUNC_BTN_SIZE_INC;
               visible: 1;
            }
         }
         part { name: "optionheader_arrow";
            type: IMAGE;
            scale: 1;
            description { state: "default" 0.0;
               min: NAVIFRAME_OH_ARROW_SIZE_INC;
               max: NAVIFRAME_OH_ARROW_SIZE_INC;
               fixed: 1 1;
               align: 0.5 0;
               rel1.to: "elm.swallow.more_btn";
               rel1.relative: 0 1;
               rel2.to: "elm.swallow.more_btn";
               rel2.relative: 1 1;
               image {
                  normal: "naviframe_optionheader_arrow.png";
               }
               visible: 0;
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part { name: "controlbar_bg";
            type: RECT;
            scale: 1;
            description { state: "default" 0.0;
               min: 0 0;
               max: 999999 0;
               fixed: 0 1;
               align: 0.5 1;
               color: NAVIFRAME_CONTROLBAR_BG_COLOR_INC;
               visible: 0;
               rel1.to_x: "elm.swallow.content";
               rel2.to_x: "elm.swallow.content";
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               min: 0 CONTROLBAR_SMALL_HEIGHT_INC;
               max: 999999 CONTROLBAR_SMALL_HEIGHT_INC;
               visible: 1;
            }
         }
         part { name: "elm.swallow.prev_btn";
            type: SWALLOW;
            scale: 1;
            description { state: "default" 0.0;
               min: 0 CONTROLBAR_SMALL_HEIGHT_INC;
               max: 0 CONTROLBAR_SMALL_HEIGHT_INC;
               fixed: 1 1;
               align: 0 1;
               rel1.to: "controlbar_bg";
               rel2.to: "controlbar_bg";
               visible: 0;
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               min: NAVIFRAME_PREV_BTN_W_INC CONTROLBAR_SMALL_HEIGHT_INC;
               max: NAVIFRAME_PREV_BTN_W_INC CONTROLBAR_SMALL_HEIGHT_INC;
               visible: 1;
            }
         }
         part { name: "elm.swallow.controlbar";
            type: SWALLOW;
            scale: 1;
            description { state: "default" 0.0;
               rel1.to: "elm.swallow.prev_btn";
               rel1.relative: 1 0;
               rel2.to: "padding_after_controlbar";
               rel2.relative: 0 1;
               visible: 0;
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part { name: "padding_after_controlbar";
            type: RECT;
            scale: 1;
            description { state: "default" 0.0;
               min: NAVIFRAME_CONTROLBAR_PADDING_INC CONTROLBAR_SMALL_HEIGHT_INC;
               max: NAVIFRAME_CONTROLBAR_PADDING_INC CONTROLBAR_SMALL_HEIGHT_INC;
               align: 1 1;
               rel1.to: "controlbar_bg";
               rel2.to: "controlbar_bg";
               visible: 0;
            }
         }
      }
      programs {
         program { name: "content_new_pushed";
            signal: "elm,state,new,pushed,internal";
            source: "";
            action: STATE_SET "default" 0.0;
            target: "base";
            transition: DECELERATE 0.5;
            after: "show_finished";
         }
         program { name: "content_cur_pushed";
            signal: "elm,state,cur,pushed,internal";
            source: "";
            action: STATE_SET "left" 0.0;
            target: "base";
            transition: DECELERATE 0.5;
            after: "pushed_finished";
         }
         program { name: "content_prev_popped";
            signal: "elm,state,prev,popped,internal";
            source: "";
            action: STATE_SET "default" 0.0;
            target: "base";
            transition: DECELERATE 0.5;
            after: "show_finished";
         }
         program { name: "content_cur_popped";
            signal: "elm,state,cur,popped,internal";
            source: "";
            action: STATE_SET "right" 0.0;
            target: "base";
            transition: DECELERATE 0.5;
            after: "popped_finished";
         }
         program { name: "cur_pushed";
            signal: "elm,state,cur,pushed";
            source: "elm";
            script {
               set_state(PART:"base", "default", 0.0);
               emit("elm,state,cur,pushed,internal", "");
            }
         }
         program { name: "new_pushed";
            signal: "elm,state,new,pushed";
            source: "elm";
            script {
               set_state(PART:"base", "right", 0.0);
               emit("elm,state,new,pushed,internal", "");
            }
         }
         program { name: "prev_popped";
            signal: "elm,state,prev,popped";
            source: "elm";
            script {
               set_state(PART:"base", "left", 0.0);
               emit("elm,state,prev,popped,internal", "");
            }
         }
         program { name: "cur_popped";
            signal: "elm,state,cur,popped";
            source: "elm";
            script {
               set_state(PART:"base", "default", 0.0);
               emit("elm,state,cur,popped,internal", "");
            }
         }
         program { name: "visible";
            signal: "elm,state,visible";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "base";
         }
         program { name: "title_show";
            signal: "elm,state,title,show";
            source: "elm";
            script {
               set_state(PART:"title_clip", "default", 0.0);
               if (get_int(oh_show) == 1) {
                  if (get_int(oh_close) == 1) {
                     emit("elm,state,optionheader,instant_close", "");
                  }else {
                     emit("elm,state,optionheader,instant_open", "");
                  }
               }
               else
                 set_state(PART:"optionheader_clip", "default", 0.0);
            }
         }
         program { name: "title_hide";
            signal: "elm,state,title,hide";
            source: "elm";
            action: STATE_SET "hide" 0.0;
            target: "title_clip";
            target: "optionheader_clip";
         }
         program { name: "prev_btn_show";
            signal: "elm,state,prev_btn,show";
            source: "elm";
            action: STATE_SET "show" 0.0;
            script {
               emit("elm,state,controlbar_bg,show", "elm");
               set_state(PART:"elm.swallow.prev_btn", "show", 0.0);
            }
         }
         program { name: "prev_btn_hide";
            signal: "elm,state,prev_btn,hide";
            source: "elm";
            action: STATE_SET "default" 0.0;
            script {
               emit("elm,state,controlbar_bg,show", "elm");
               set_state(PART:"elm.swallow.prev_btn", "default", 0.0);
            }
         }
         program { name: "left_btn_show";
            signal: "elm,state,elm.swallow.left_btn,show";
            source: "elm";
            action: STATE_SET "show" 0.0;
            target: "elm.swallow.left_btn";
         }
         program { name: "left_btn_hide";
            signal: "elm,state,elm.swallow.left_btn,hide";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "elm.swallow.left_btn";
         }
         program { name: "right_btn_show";
            signal: "elm,state,elm.swallow.right_btn,show";
            source: "elm";
            action: STATE_SET "show" 0.0;
            target: "elm.swallow.right_btn";
         }
         program { name: "right_btn_hide";
            signal: "elm,state,elm.swallow.right_btn,hide";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "elm.swallow.right_btn";
         }
         program { name: "more_btn_show";
            signal: "elm,state,elm.swallow.more_btn,show";
            source: "elm";
            action: STATE_SET "show" 0.0;
            target: "elm.swallow.more_btn";
            target: "padding_before_right_btn";
         }
         program { name: "more_btn_hide";
            signal: "elm,state,elm.swallow.more_btn,hide";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "elm.swallow.more_btn";
            target: "padding_before_right_btn";
         }
         program { name: "controlbar_show";
            signal: "elm,state,elm.swallow.controlbar,show";
            source: "elm";
            action: STATE_SET "show" 0.0;
            script {
               emit("elm,state,controlbar_bg,show", "elm");
               set_state(PART:"elm.swallow.controlbar", "show", 0.0);
            }
         }
         program { name: "controlbar_hide";
            signal: "elm,state,elm.swallow.controlbar,hide";
            source: "elm";
            script {
               emit("elm,state,controlbar_bg,hide", "elm");
               set_state(PART:"elm.swallow.controlbar", "default", 0.0);
            }
         }
         program { name: "controlbar_bg_show";
            signal: "elm,state,controlbar_bg,show";
            source: "elm";
            script {
               set_state(PART:"controlbar_bg", "show", 0.0);
               ++cbar_bg;
            }
         }
         program { name: "controlbar_bg_hide";
            signal: "elm,state,controlbar_bg,hide";
            source: "elm";
            script {
               --cbar_bg;
               if (cbar_bg < 1)
                  set_state(PART:"controlbar_bg", "default", 0.0);
            }
         }
         program { name: "optionheader_show";
            signal: "elm,state,elm.swallow.optionheader,show";
            source: "elm";
            script {
               set_state(PART:"optionheader_clip", "show", 0.0);
               set_state(PART:"optionheader_arrow", "show", 0.0);
               set_state(PART:"elm.swallow.optionheader", "show", 0.0);
               set_int(oh_show, 1);
            }
         }
         program { name: "optionheader_hide";
            signal: "elm,state,elm.swallow.optionheader,hide";
            source: "elm";
            script {
               set_state(PART:"optionheader_clip", "default", 0.0);
               set_state(PART:"optionheader_arrow", "default", 0.0);
               set_state(PART:"elm.swallow.optionheader", "default", 0.0);
               set_int(oh_show, 0);
            }
         }
         program { name: "optionheader_open";
            signal: "elm,state,optionheader,open";
            source: "";
            action: STATE_SET "show" 0.0;
            target: "optionheader_clip";
            target: "optionheader_arrow";
            target: "elm.swallow.optionheader";
            transition: LINEAR 0.2;
            after: "optionheader_open_set";
         }
         program { name: "optionheader_close";
            signal: "elm,state,optionheader,close";
            source: "";
            action: STATE_SET "default" 0.0;
            target: "optionheader_clip";
            target: "optionheader_arrow";
            target: "elm.swallow.optionheader";
            transition: LINEAR 0.2;
            after: "optionheader_close_set";
         }
         program { name: "optionheader_instant_open";
            signal: "elm,state,optionheader,instant_open";
            source: "";
            action: STATE_SET "show" 0.0;
            target: "optionheader_clip";
            target: "optionheader_arrow";
            target: "elm.swallow.optionheader";
            after: "optionheader_open_set";
         }
         program { name: "optionheader_instant_close";
            signal: "elm,state,optionheader,instant_close";
            source: "";
            action: STATE_SET "default" 0.0;
            target: "optionheader_clip";
            target: "optionheader_arrow";
            target: "elm.swallow.optionheader";
            after: "optionheader_close_set";
         }
         program { name: "optionheader_close_set";
            signal: "elm,state,optionheader,close_set";
            source: "";
            script {
               set_int(oh_close, 1);
            }
         }
         program { name: "optionheader_open_set";
            signal: "elm,state,optionheader,open_set";
            source: "";
            script {
               set_int(oh_close, 0);
            }
         }
         program { name: "show_finished";
            action: SIGNAL_EMIT "elm,action,show,finished" "";
         }
         program { name: "pushed_finished";
            action: SIGNAL_EMIT "elm,action,pushed,finished" "";
         }
         program { name: "popped_finished";
            action: SIGNAL_EMIT "elm,action,popped,finished" "";
         }
         program {
            name: "title_clicked";
            signal: "mouse,clicked,1";
            source: "click_event_area";
            action: SIGNAL_EMIT "elm,action,title,clicked" "";
         }
      }
   }
   group { name:"elm/naviframe/item/basic2/default";
      alias:"elm/naviframe/item/2line/default";
      images {
         image: "naviframe_optionheader.png" COMP;
         image: "naviframe_optionheader_arrow.png" COMP;
      }
      script {
         public oh_show = 0;     //optionheader show/hide
         public oh_close = 0;    //optionheader close/open
         public cbar_bg = 0;     //Controlbar BG Show call count
      }
      parts {
          part { name: "base";
            type: RECT;
            description { state: "default" 0.0;
               visible: 0;
            }
            description { state: "left" 0.0;
               inherit: "default" 0.0;
               rel1.relative: -1.0 0.0;
               rel2.relative: 0.0 1.0;
            }
            description { state: "right" 0.0;
               inherit: "default" 0.0;
               rel1.relative: 1.0 0.0;
               rel2.relative: 2.0 1.0;
            }
         }
         part { name: "title_clip";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               min: 1 NAVIFRAME_TITLE_H_INC;
               align: 0.0 0.0;
               fixed: 0 1;
               rel1 { relative: 0.0 0.0; to: "base"; }
               rel2 { relative: 1.0 0.0; to: "base"; }
            }
            description { state: "hide" 0.0;
               inherit: "default" 0.0;
               min: 0 0;
               max: 0 0;
               fixed: 1 1;
            }
         }
         part { name: "optionheader_clip";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               min: 1 0;
               align: 0.5 0;
               fixed: 0 1;
               rel1.to: "title_clip";
               rel1.relative: 0 1;
               rel2.to: "title_clip";
               visible: 0;
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               min: 1 NAVIFRAME_OH_OPENED_DOUBLE_H_INC;
               visible: 1;
            }
            description { state: "hide" 0.0;
               inherit: "default" 0.0;
               min: 0 0;
               max: 0 0;
               fixed: 1 1;
            }
         }
         part { name: "optionheader_bg";
            type: IMAGE;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               rel1 { to: "optionheader_clip"; }
               rel2 { to: "optionheader_clip"; }
               image { normal: "naviframe_optionheader.png";
                  border: 0 0 4 0;
               }
            }
         }
         part { name: "optionheader_top_padding";
            type: RECT;
            scale: 1;
            clip_to: "optionheader_clip";
            description { state: "default" 0.0;
               min: 1 NAVIFRAME_OH_PADDING_INC;
               rel1 { relative: 0.0 0.0; to: "optionheader_bg"; }
               rel2 { relative: 1.0 0.0; to: "optionheader_bg"; }
               fixed: 0 1;
               align: 0.0 0.0;
               visible: 0;
            }
         }
         part { name: "elm.swallow.optionheader";
            type: SWALLOW;
            scale: 1;
            clip_to: "optionheader_clip";
            description { state: "default" 0.0;
               min: 1 NAVIFRAME_OH_CONTENT_H_INC;
               rel1 { relative: 0.0 1.0; to: "optionheader_top_padding"; }
               rel2 { relative: 1.0 1.0; to: "optionheader_top_padding"; }
               fixed: 0 1;
               align: 0.0 0.0;
               visible: 0;
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part { name: "elm.swallow.optionheader.mid.padding";
            type: RECT;
            scale: 1;
            clip_to: "optionheader_clip";
            description { state: "default" 0.0;
               min: 1 NAVIFRAME_OH_PADDING_INC;
               rel1 { relative: 0.0 1.0; to: "elm.swallow.optionheader"; }
               rel2 { relative: 1.0 1.0; to: "elm.swallow.optionheader"; }
               fixed: 0 1;
               align: 0.0 0.0;
               visible: 0;
            }
         }
         part { name: "elm.swallow.optionheader2";
            type: SWALLOW;
            scale: 1;
            clip_to: "optionheader_clip";
            description { state: "default" 0.0;
               min: 1 NAVIFRAME_OH_CONTENT_H_INC;
               rel1 { relative: 0.0 1.0; to: "elm.swallow.optionheader.mid.padding";}
               rel2 { relative: 1.0 1.0; to: "elm.swallow.optionheader.mid.padding";}
               fixed: 0 1;
               align: 0.0 0.0;
               visible: 0;
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part { name: "elm.swallow.optionheader.bottom.padding";
            type: RECT;
            scale: 1;
            clip_to: "optionheader_clip";
            description { state: "default" 0.0;
               min: 1 NAVIFRAME_OH_PADDING_INC;
               rel1 { relative: 0.0 1.0; to: "elm.swallow.optionheader2"; }
               fixed: 0 1;
               align: 0.0 0.0;
               visible: 0;
            }
         }
         part { name: "content_clip";
            type: RECT;
            mouse_events: 0;
            description { state: "default" 0.0;
               rel1.to: "optionheader_bg";
               rel1.relative: 0 1;
               rel2.to_x: "optionheader_bg";
            }
         }
         part { name: "elm.swallow.content";
            type: SWALLOW;
            scale: 1;
            repeat_events: 0;
            clip_to: "content_clip";
            description { state: "default" 0.0;
               align: 0.0 0.0;
               rel1.relative: 0.0 1.0;
               rel1.to: "optionheader_bg";
               rel2.relative: 1.0 0.0;
               rel2.to_x: "optionheader_bg";
               rel2.to_y: "controlbar_bg";
            }
         }
         part { name: "title_base";
            type: RECT;
            description { state: "default" 0.0;
               rel1 { to: "title_clip"; }
               rel2 { to: "title_clip"; }
               color: NAVIFRAME_TITLE_BG_COLOR_INC;
            }
         }
         part { name: "padding_before_left_btn";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               min: NAVIFRAME_TITLE_FUNC_BTN_PADDING_W_INC 0;
               fixed: 1 0;
               align: 0.0 0.5;
               rel1 { relative: 0.0 0.0; to: "title_base"; }
               rel2 { relative: 0.0 1.0; to: "title_base"; }
               visible: 0;
            }
         }
         part { name: "padding_after_left_btn";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               min: NAVIFRAME_TITLE_FUNC_BTN_PADDING_W_INC 0;
               fixed: 1 0;
               align: 0.0 0.5;
               rel1 { relative: 1.0 0.0; to: "elm.swallow.left_btn"; }
               rel2 { relative: 1.0 1.0; to: "elm.swallow.left_btn"; }
               visible: 0;
            }
         }
         part { name: "padding_after_right_btn";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               min: NAVIFRAME_TITLE_FUNC_BTN_PADDING_W_INC 0;
               fixed: 1 0;
               align: 1.0 0.5;
               rel1 { relative: 1.0 0.0; to: "title_base"; }
               rel2 { relative: 1.0 1.0; to: "title_base"; }
               visible: 0;
            }
         }
         part { name: "padding_before_right_btn";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               min: 0 0;
               fixed: 1 0;
               align: 1.0 0.5;
               rel1 { relative: 0.0 0.0; to: "elm.swallow.right_btn"; }
               rel2 { relative: 0.0 1.0; to: "elm.swallow.right_btn"; }
               visible: 0;
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               min: NAVIFRAME_TITLE_FUNC_BTN_PADDING_W_INC 0;
            }
         }
         part { name: "padding_before_more_btn";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               min: NAVIFRAME_TITLE_FUNC_BTN_PADDING_W_INC 0;
               fixed: 1 0;
               align: 1.0 0.5;
               rel1 { relative: 0.0 0.0; to: "elm.swallow.more_btn"; }
               rel2 { relative: 0.0 1.0; to: "elm.swallow.more_btn"; }
               visible: 0;
            }
         }
         part { name: "padding_before_text";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               align: 1.0 0.5;
               rel1 { relative: 0.0 0.0; to_x: "elm.text.title"; to_y: "title_base"; }
               rel2 { relative: 0.0 1.0; to_x: "elm.text.title"; to_y: "title_base"; }
               fixed: 1 0;
               min: NAVIFRAME_ICON_PADDING_INC;
               visible: 0;
            }
         }
         part { name: "elm.text.title";
            type: TEXT;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               text { font: "SLP:style=Medium";
                  size: NAVIFRAME_TITLE_FONT_SIZE_INC;
                  min: 0 0;
                  max: 1 0;
                  align: 0.5 0.5;
               }
               color: NAVIFRAME_TITLE_TEXT_COLOR_INC;
               align: 0.5 0.5;
               rel1.to: "padding_after_left_btn";
               rel1.relative: 1 0;
               rel2.to: "padding_before_more_btn";
               rel2.relative: 0 1;
            }
         }
         part { name: "elm.swallow.icon";
            type: SWALLOW;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               max: NAVIFRAME_ICON_SIZE_INC;
               rel1 { relative: 0.0 0.0; to: "padding_before_text"; }
               rel2 { relative: 0.0 1.0; to: "padding_before_text"; }
               aspect: 1.0 1.0;
               aspect_preference: VERTICAL;
               align: 1.0 0.5;
            }
         }
         part { name: "click_event_area";
             ignore_flags: ON_HOLD;
             description { state: "default" 0.0;
                rel1 { to: "title_base"; }
                rel2 { to: "title_base"; }
             }
         }
         part { name: "elm.swallow.left_btn";
            type: SWALLOW;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               min: 0 0;
               fixed: 1 0;
               align: 0 0.5;
               rel1 { relative: 1.0 0.0; to: "padding_before_left_btn"; }
               rel2 { relative: 1.0 1.0; to: "padding_before_left_btn"; }
               visible: 0;
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               min: NAVIFRAME_TITLE_FUNC_BTN_SIZE_INC;
               max: NAVIFRAME_TITLE_FUNC_BTN_SIZE_INC;
               fixed: 1 1;
               visible: 1;
            }
         }
         part { name: "elm.swallow.right_btn";
            type: SWALLOW;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               min: 0 0;
               align: 1 0.5;
               fixed: 1 0;
               rel1 { relative: 0.0 0.0; to: "padding_after_right_btn"; }
               rel2 { relative: 0.0 1.0; to: "padding_after_right_btn"; }
               visible: 0;
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               min: NAVIFRAME_TITLE_FUNC_BTN_SIZE_INC;
               max: NAVIFRAME_TITLE_FUNC_BTN_SIZE_INC;
               fixed: 1 1;
               visible: 1;
            }
         }
         part { name: "elm.swallow.more_btn";
            type: SWALLOW;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               min: 0 0;
               fixed: 1 0;
               align: 1 0.5;
               rel1.to: "padding_before_right_btn";
               rel1.relative: 0 0;
               rel2.to: "padding_before_right_btn";
               rel2.relative: 0 1;
               visible: 0;
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               min: NAVIFRAME_TITLE_FUNC_BTN_SIZE_INC;
               max: NAVIFRAME_TITLE_FUNC_BTN_SIZE_INC;
               visible: 1;
            }
         }
         part { name: "optionheader_arrow";
            type: IMAGE;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               min: NAVIFRAME_OH_ARROW_SIZE_INC;
               max: NAVIFRAME_OH_ARROW_SIZE_INC;
               fixed: 1 1;
               align: 0.5 0;
               rel1.to: "elm.swallow.more_btn";
               rel1.relative: 0 1;
               rel2.to: "elm.swallow.more_btn";
               rel2.relative: 1 1;
               image {
                  normal: "naviframe_optionheader_arrow.png";
               }
               color: 255 255 255 0 ;
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
                color: 255 255 255 255;
            }
         }
         part { name: "controlbar_bg";
            type: RECT;
            scale: 1;
            description { state: "default" 0.0;
               min: 0 0;
               max: 999999 0;
               fixed: 0 1;
               align: 0.5 1;
               color: NAVIFRAME_CONTROLBAR_BG_COLOR_INC;
               visible: 0;
               rel1.to_x: "elm.swallow.content";
               rel2.to_x: "elm.swallow.content";
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               min: 0 CONTROLBAR_SMALL_HEIGHT_INC;
               max: 999999 CONTROLBAR_SMALL_HEIGHT_INC;
               visible: 1;
            }
         }
         part { name: "elm.swallow.prev_btn";
            type: SWALLOW;
            scale: 1;
            description { state: "default" 0.0;
               min: 0 CONTROLBAR_SMALL_HEIGHT_INC;
               max: 0 CONTROLBAR_SMALL_HEIGHT_INC;
               fixed: 1 1;
               align: 0 1;
               rel1.to: "controlbar_bg";
               rel2.to: "controlbar_bg";
               visible: 0;
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               min: NAVIFRAME_PREV_BTN_W_INC CONTROLBAR_SMALL_HEIGHT_INC;
               max: NAVIFRAME_PREV_BTN_W_INC CONTROLBAR_SMALL_HEIGHT_INC;
               visible: 1;
            }
         }
         part { name: "elm.swallow.controlbar";
            type: SWALLOW;
            scale: 1;
            description { state: "default" 0.0;
               rel1.to: "elm.swallow.prev_btn";
               rel1.relative: 1 0;
               rel2.to: "padding_after_controlbar";
               rel2.relative: 0 1;
               visible: 0;
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part { name: "padding_after_controlbar";
            type: RECT;
            scale: 1;
            description { state: "default" 0.0;
               min: NAVIFRAME_CONTROLBAR_PADDING_INC CONTROLBAR_SMALL_HEIGHT_INC;
               max: NAVIFRAME_CONTROLBAR_PADDING_INC CONTROLBAR_SMALL_HEIGHT_INC;
               align: 1 1;
               rel1.to: "controlbar_bg";
               rel2.to: "controlbar_bg";
               visible: 0;
            }
         }
      }
      programs {
         program { name: "content_new_pushed";
            signal: "elm,state,new,pushed,internal";
            source: "";
            action: STATE_SET "default" 0.0;
            target: "base";
            transition: DECELERATE 0.5;
            after: "show_finished";
         }
         program { name: "content_cur_pushed";
            signal: "elm,state,cur,pushed,internal";
            source: "";
            action: STATE_SET "left" 0.0;
            target: "base";
            transition: DECELERATE 0.5;
            after: "pushed_finished";
         }
         program { name: "content_prev_popped";
            signal: "elm,state,prev,popped,internal";
            source: "";
            action: STATE_SET "default" 0.0;
            target: "base";
            transition: DECELERATE 0.5;
            after: "show_finished";
         }
         program { name: "content_cur_popped";
            signal: "elm,state,cur,popped,internal";
            source: "";
            action: STATE_SET "right" 0.0;
            target: "base";
            transition: DECELERATE 0.5;
            after: "popped_finished";
         }
         program { name: "cur_pushed";
            signal: "elm,state,cur,pushed";
            source: "elm";
            script {
               set_state(PART:"base", "default", 0.0);
               emit("elm,state,cur,pushed,internal", "");
            }
         }
         program { name: "new_pushed";
            signal: "elm,state,new,pushed";
            source: "elm";
            script {
               set_state(PART:"base", "right", 0.0);
               emit("elm,state,new,pushed,internal", "");
            }
         }
         program { name: "prev_popped";
            signal: "elm,state,prev,popped";
            source: "elm";
            script {
               set_state(PART:"base", "left", 0.0);
               emit("elm,state,prev,popped,internal", "");
            }
         }
         program { name: "cur_popped";
            signal: "elm,state,cur,popped";
            source: "elm";
            script {
               set_state(PART:"base", "default", 0.0);
               emit("elm,state,cur,popped,internal", "");
            }
         }
         program { name: "visible";
            signal: "elm,state,visible";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "elm.swallow.content";
         }
         program { name: "title_show";
            signal: "elm,state,title,show";
            source: "elm";
            script {
               set_state(PART:"title_clip", "default", 0.0);
               if (get_int(oh_show) == 1) {
                  if (get_int(oh_close) == 1) {
                     emit("elm,state,optionheader,instant_close", "");
                  }else {
                     emit("elm,state,optionheader,instant_open", "");
                  }
               }
               else
                 set_state(PART:"optionheader_clip", "default", 0.0);
            }
         }
         program { name: "title_hide";
            signal: "elm,state,title,hide";
            source: "elm";
            action: STATE_SET "hide" 0.0;
            target: "title_clip";
            target: "optionheader_clip";
         }
         program { name: "prev_btn_show";
            signal: "elm,state,prev_btn,show";
            source: "elm";
            action: STATE_SET "show" 0.0;
            script {
               emit("elm,state,controlbar_bg,show", "elm");
               set_state(PART:"elm.swallow.prev_btn", "show", 0.0);
            }
         }
         program { name: "prev_btn_hide";
            signal: "elm,state,prev_btn,hide";
            source: "elm";
            action: STATE_SET "default" 0.0;
            script {
               emit("elm,state,controlbar_bg,show", "elm");
               set_state(PART:"elm.swallow.prev_btn", "default", 0.0);
            }
         }
         program { name: "left_btn_show";
            signal: "elm,state,elm.swallow.left_btn,show";
            source: "elm";
            action: STATE_SET "show" 0.0;
            target: "elm.swallow.left_btn";
         }
         program { name: "left_btn_hide";
            signal: "elm,state,elm.swallow.left_btn,hide";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "elm.swallow.left_btn";
         }
         program { name: "right_btn_show";
            signal: "elm,state,elm.swallow.right_btn,show";
            source: "elm";
            action: STATE_SET "show" 0.0;
            target: "elm.swallow.right_btn";
         }
         program { name: "right_btn_hide";
            signal: "elm,state,elm.swallow.right_btn,hide";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "elm.swallow.right_btn";
         }
         program { name: "more_btn_show";
            signal: "elm,state,elm.swallow.more_btn,show";
            source: "elm";
            action: STATE_SET "show" 0.0;
            target: "elm.swallow.more_btn";
            target: "padding_before_right_btn";
         }
         program { name: "more_btn_hide";
            signal: "elm,state,elm.swallow.more_btn,hide";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "elm.swallow.more_btn";
            target: "padding_before_right_btn";
         }
         program { name: "controlbar_show";
            signal: "elm,state,elm.swallow.controlbar,show";
            source: "elm";
            action: STATE_SET "show" 0.0;
            script {
               emit("elm,state,controlbar_bg,show", "elm");
               set_state(PART:"elm.swallow.controlbar", "show", 0.0);
            }
         }
         program { name: "controlbar_hide";
            signal: "elm,state,elm.swallow.controlbar,hide";
            source: "elm";
            script {
               emit("elm,state,controlbar_bg,hide", "elm");
               set_state(PART:"elm.swallow.controlbar", "default", 0.0);
            }
         }
         program { name: "controlbar_bg_show";
            signal: "elm,state,controlbar_bg,show";
            source: "elm";
            script {
               set_state(PART:"controlbar_bg", "show", 0.0);
               ++cbar_bg;
            }
         }
         program { name: "controlbar_bg_hide";
            signal: "elm,state,controlbar_bg,hide";
            source: "elm";
            script {
               --cbar_bg;
               if (cbar_bg < 1)
                  set_state(PART:"controlbar_bg", "default", 0.0);
            }
         }
         program { name: "optionheader_show";
            signal: "elm,state,elm.swallow.optionheader,show";
            source: "elm";
            script {
               set_state(PART:"optionheader_clip", "show", 0.0);
               set_state(PART:"optionheader_arrow", "show", 0.0);
               set_state(PART:"elm.swallow.optionheader", "show", 0.0);
               set_state(PART:"elm.swallow.optionheader2", "show", 0.0);
               set_int(oh_show, 1);
            }
         }
         program { name: "optionheader_hide";
            signal: "elm,state,elm.swallow.optionheader,hide";
            source: "elm";
            script {
               set_state(PART:"optionheader_clip", "default", 0.0);
               set_state(PART:"optionheader_arrow", "default", 0.0);
               set_state(PART:"elm.swallow.optionheader", "default", 0.0);
               set_state(PART:"elm.swallow.optionheader2", "hide", 0.0);
               set_int(oh_show, 0);
            }
         }
         program { name: "optionheader_open";
            signal: "elm,state,optionheader,open";
            source: "";
            action: STATE_SET "show" 0.0;
            target: "optionheader_clip";
            target: "optionheader_arrow";
            target: "elm.swallow.optionheader";
            target: "elm.swallow.optionheader2";
            transition: LINEAR 0.2;
            after: "optionheader_open_set";
         }
         program { name: "optionheader_close";
            signal: "elm,state,optionheader,close";
            source: "";
            action: STATE_SET "default" 0.0;
            target: "optionheader_clip";
            target: "optionheader_arrow";
            target: "elm.swallow.optionheader";
            target: "elm.swallow.optionheader2";
            transition: LINEAR 0.2;
            after: "optionheader_close_set";
         }
         program { name: "optionheader_instant_open";
            signal: "elm,state,optionheader,instant_open";
            source: "";
            action: STATE_SET "show" 0.0;
            target: "optionheader_clip";
            target: "optionheader_arrow";
            target: "elm.swallow.optionheader";
            target: "elm.swallow.optionheader2";
            after: "optionheader_open_set";
         }
         program { name: "optionheader_instant_close";
            signal: "elm,state,optionheader,instant_close";
            source: "";
            action: STATE_SET "default" 0.0;
            target: "optionheader_clip";
            target: "optionheader_arrow";
            target: "elm.swallow.optionheader";
            target: "elm.swallow.optionheader2";
            after: "optionheader_close_set";
         }
         program { name: "optionheader_close_set";
            signal: "elm,state,optionheader,close_set";
            source: "";
            script {
               set_int(oh_close, 1);
            }
         }
         program { name: "optionheader_open_set";
            signal: "elm,state,optionheader,open_set";
            source: "";
            script {
               set_int(oh_close, 0);
            }
         }
         program { name: "show_finished";
            action: SIGNAL_EMIT "elm,action,show,finished" "";
         }
         program { name: "pushed_finished";
            action: SIGNAL_EMIT "elm,action,pushed,finished" "";
         }
         program { name: "popped_finished";
            action: SIGNAL_EMIT "elm,action,popped,finished" "";
         }
         program {
            name: "title_clicked";
            signal: "mouse,clicked,1";
            source: "click_event_area";
            action: SIGNAL_EMIT "elm,action,title,clicked" "";
         }
      }
   }
   group { name: "elm/naviframe/item/segment/default";
      script {
         public cbar_bg = 0;     //Controlbar BG Show call count
      }
      parts {
         part { name: "base";
            type: RECT;
            description { state: "default" 0.0;
               visible: 0;
            }
            description { state: "left" 0.0;
               inherit: "default" 0.0;
               rel1.relative: -1.0 0.0;
               rel2.relative: 0.0 1.0;
            }
            description { state: "right" 0.0;
               inherit: "default" 0.0;
               rel1.relative: 1.0 0.0;
               rel2.relative: 2.0 1.0;
            }
         }
         part { name: "title_clip";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               min: 1 NAVIFRAME_SEGMENT_TITLE_H_INC;
               align: 0.0 0.0;
               fixed: 0 1;
               rel1 { relative: 0.0 0.0; to: "base"; }
               rel2 { relative: 1.0 0.0; to: "base"; }
            }
            description { state: "hide" 0.0;
               inherit: "default" 0.0;
               min: 0 0;
               max: 0 0;
               fixed: 1 1;
            }
         }
         part { name: "content_clip";
            type: RECT;
            mouse_events: 0;
            description { state: "default" 0.0;
               rel1.to: "title_clip";
               rel1.relative: 0 1;
               rel2.to_x: "title_clip";
            }
         }
         part { name: "elm.swallow.content";
            type: SWALLOW;
            scale: 1;
            repeat_events: 0;
            clip_to: "content_clip";
            description { state: "default" 0.0;
               align: 0.0 0.0;
               rel1.relative: 0.0 1.0;
               rel1.to: "title_clip";
               rel2.relative: 1.0 0.0;
               rel2.to_x: "title_clip";
               rel2.to_y: "controlbar_bg";
            }
         }
         part { name: "title_base";
            type: RECT;
            description { state: "default" 0.0;
               rel1 { to: "title_clip"; }
               rel2 { to: "title_clip"; }
               color: NAVIFRAME_TITLE_BG_COLOR_INC;
            }
         }
         part { name: "padding_before_left_btn";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               min: NAVIFRAME_TITLE_FUNC_BTN_PADDING_W_INC 0;
               fixed: 1 0;
               align: 0.0 0.5;
               rel1 { relative: 0.0 0.0; to: "title_base"; }
               rel2 { relative: 0.0 1.0; to: "title_base"; }
               visible: 0;
            }
         }
         part { name: "padding_after_left_btn";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               min: NAVIFRAME_TITLE_FUNC_BTN_PADDING_W_INC 0;
               fixed: 1 0;
               align: 0.0 0.5;
               rel1 { relative: 1.0 0.0; to: "elm.swallow.left_btn"; }
               rel2 { relative: 1.0 1.0; to: "elm.swallow.left_btn"; }
               visible: 0;
            }
         }
         part { name: "padding_after_right_btn";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               min: NAVIFRAME_TITLE_FUNC_BTN_PADDING_W_INC 0;
               fixed: 1 0;
               align: 1.0 0.5;
               rel1 { relative: 1.0 0.0; to: "title_base"; }
               rel2 { relative: 1.0 1.0; to: "title_base"; }
               visible: 0;
            }
         }
         part { name: "padding_before_right_btn";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               min: 0 0;
               fixed: 1 0;
               align: 1.0 0.5;
               rel1 { relative: 0.0 0.0; to: "elm.swallow.right_btn"; }
               rel2 { relative: 0.0 1.0; to: "elm.swallow.right_btn"; }
               visible: 0;
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               min: NAVIFRAME_TITLE_FUNC_BTN_PADDING_W_INC 0;
            }
         }
         part { name: "padding_before_text";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               align: 1.0 0.5;
               rel1 { relative: 0.0 0.0; to_x: "elm.text.title"; to_y: "title_base"; }
               rel2 { relative: 0.0 1.0; to_x: "elm.text.title"; to_y: "title_base"; }
               fixed: 1 0;
               min: NAVIFRAME_ICON_PADDING_INC;
               visible: 0;
            }
         }
         part { name: "elm.text.title";
            type: TEXT;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               text { font: "SLP:style=Medium";
                  size: NAVIFRAME_TITLE_SEGMENT_FONT_SIZE_INC;
                  min: 0 0;
                  max: 1 0;
                  align: 0.5 0.5;
               }
               min: 0 NAVIFRAME_TITLE_SEGMENT_TEXT_H_INC;
               max: 999999 NAVIFRAME_TITLE_SEGMENT_TEXT_H_INC;
               fixed: 0 1;
               color: NAVIFRAME_TITLE_TEXT_COLOR_INC;
               align: 0.5 0;
               rel1.to: "padding_before_left_btn";
               rel1.relative: 1 0;
               rel2.to: "padding_after_right_btn";
               rel2.relative: 0 1;
            }
         }
         part { name: "click_event_area";
             ignore_flags: ON_HOLD;
             description { state: "default" 0.0;
                rel1 { to: "title_base"; }
                rel2 { to: "title_base"; }
             }
         }
         part { name: "elm.swallow.left_btn";
            type: SWALLOW;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               min: 0 0;
               fixed: 1 0;
               align: 0 0;
               rel1.relative: 1.0 1.0;
               rel1.to_x: "padding_before_left_btn";
               rel1.to_y: "elm.text.title";
               rel2.relative: 1.0 1.0;
               rel2.to_x: "padding_before_left_btn";
               rel2.to_y: "elm.text.title";
               visible: 0;
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               min: NAVIFRAME_TITLE_FUNC_BTN_SIZE_INC;
               max: NAVIFRAME_TITLE_FUNC_BTN_SIZE_INC;
               fixed: 1 1;
               visible: 1;
            }
         }
         part { name: "elm.swallow.right_btn";
            type: SWALLOW;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               min: 0 0;
               align: 1 0;
               fixed: 1 0;
               rel1.relative: 0.0 1.0;
               rel1.to_x: "padding_after_right_btn";
               rel1.to_y: "elm.text.title";
               rel2.relative: 0.0 1.0;
               rel2.to_x: "padding_after_right_btn";
               rel2.to_y: "elm.text.title";
               visible: 0;
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               min: NAVIFRAME_TITLE_FUNC_BTN_SIZE_INC;
               max: NAVIFRAME_TITLE_FUNC_BTN_SIZE_INC;
               fixed: 1 1;
               visible: 1;
            }
         }
         part { name: "elm.swallow.segment2";
            type: "SWALLOW";
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               min: 0 NAVIFRAME_TITLE_SEGMENT_H_INC;
               max: 999999 NAVIFRAME_TITLE_SEGMENT_H_INC;
               fixed: 0 1;
               align: 0.5 0;
               rel1.to_x: "title_clip";
               rel1.to_y: "elm.text.title";
               rel1.relative: 0.28 1;
               rel2.to_x: "title_clip";
               rel2.to_y: "elm.text.title";
               rel2.relative: 0.72 1;
            }
         }
         part { name: "elm.swallow.segment3";
            type: "SWALLOW";
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               min: 0 NAVIFRAME_TITLE_SEGMENT_H_INC;
               max: 999999 NAVIFRAME_TITLE_SEGMENT_H_INC;
               fixed: 0 1;
               align: 0.5 0;
               rel1.to_x: "title_clip";
               rel1.to_y: "elm.text.title";
               rel1.relative: 0.2 1;
               rel2.to_x: "title_clip";
               rel2.to_y: "elm.text.title";
               rel2.relative: 0.8 1;
            }
         }
         part { name: "controlbar_bg";
            type: RECT;
            scale: 1;
            description { state: "default" 0.0;
               min: 0 0;
               max: 999999 0;
               fixed: 0 1;
               align: 0.5 1;
               color: NAVIFRAME_CONTROLBAR_BG_COLOR_INC;
               visible: 0;
               rel1.to_x: "elm.swallow.content";
               rel2.to_x: "elm.swallow.content";
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               min: 0 CONTROLBAR_SMALL_HEIGHT_INC;
               max: 999999 CONTROLBAR_SMALL_HEIGHT_INC;
               visible: 1;
            }
         }
         part { name: "elm.swallow.prev_btn";
            type: SWALLOW;
            scale: 1;
            description { state: "default" 0.0;
               min: 0 CONTROLBAR_SMALL_HEIGHT_INC;
               max: 0 CONTROLBAR_SMALL_HEIGHT_INC;
               fixed: 1 1;
               align: 0 1;
               rel1.to: "controlbar_bg";
               rel2.to: "controlbar_bg";
               visible: 0;
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               min: NAVIFRAME_PREV_BTN_W_INC CONTROLBAR_SMALL_HEIGHT_INC;
               max: NAVIFRAME_PREV_BTN_W_INC CONTROLBAR_SMALL_HEIGHT_INC;
               visible: 1;
            }
         }
         part { name: "elm.swallow.controlbar";
            type: SWALLOW;
            scale: 1;
            description { state: "default" 0.0;
               rel1.to: "elm.swallow.prev_btn";
               rel1.relative: 1 0;
               rel2.to: "padding_after_controlbar";
               rel2.relative: 0 1;
               visible: 0;
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part { name: "padding_after_controlbar";
            type: RECT;
            scale: 1;
            description { state: "default" 0.0;
               min: NAVIFRAME_CONTROLBAR_PADDING_INC CONTROLBAR_SMALL_HEIGHT_INC;
               max: NAVIFRAME_CONTROLBAR_PADDING_INC CONTROLBAR_SMALL_HEIGHT_INC;
               align: 1 1;
               rel1.to: "controlbar_bg";
               rel2.to: "controlbar_bg";
               visible: 0;
            }
         }
      }
      programs {
         program { name: "content_new_pushed";
            signal: "elm,state,new,pushed,internal";
            source: "";
            action: STATE_SET "default" 0.0;
            target: "base";
            transition: DECELERATE 0.5;
            after: "show_finished";
         }
         program { name: "content_cur_pushed";
            signal: "elm,state,cur,pushed,internal";
            source: "";
            action: STATE_SET "left" 0.0;
            target: "base";
            transition: DECELERATE 0.5;
            after: "pushed_finished";
         }
         program { name: "content_prev_popped";
            signal: "elm,state,prev,popped,internal";
            source: "";
            action: STATE_SET "default" 0.0;
            target: "base";
            transition: DECELERATE 0.5;
            after: "show_finished";
         }
         program { name: "content_cur_popped";
            signal: "elm,state,cur,popped,internal";
            source: "";
            action: STATE_SET "right" 0.0;
            target: "base";
            transition: DECELERATE 0.5;
            after: "popped_finished";
         }
         program { name: "cur_pushed";
            signal: "elm,state,cur,pushed";
            source: "elm";
            script {
               set_state(PART:"base", "default", 0.0);
               emit("elm,state,cur,pushed,internal", "");
            }
         }
         program { name: "new_pushed";
            signal: "elm,state,new,pushed";
            source: "elm";
            script {
               set_state(PART:"base", "right", 0.0);
               emit("elm,state,new,pushed,internal", "");
            }
         }
         program { name: "prev_popped";
            signal: "elm,state,prev,popped";
            source: "elm";
            script {
               set_state(PART:"base", "left", 0.0);
               emit("elm,state,prev,popped,internal", "");
            }
         }
         program { name: "cur_popped";
            signal: "elm,state,cur,popped";
            source: "elm";
            script {
               set_state(PART:"base", "default", 0.0);
               emit("elm,state,cur,popped,internal", "");
            }
         }
         program { name: "visible";
            signal: "elm,state,visible";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "elm.swallow.content";
         }
         program { name: "title_show";
            signal: "elm,state,title,show";
            source: "elm";
            action: STATE_SET "show" 0.0;
            target: "title_clip";
         }
         program { name: "title_hide";
            signal: "elm,state,title,hide";
            source: "elm";
            action: STATE_SET "hide" 0.0;
            target: "title_clip";
         }
         program { name: "prev_btn_show";
            signal: "elm,state,prev_btn,show";
            source: "elm";
            action: STATE_SET "show" 0.0;
            script {
               emit("elm,state,controlbar_bg,show", "elm");
               set_state(PART:"elm.swallow.prev_btn", "show", 0.0);
            }
         }
         program { name: "prev_btn_hide";
            signal: "elm,state,prev_btn,hide";
            source: "elm";
            action: STATE_SET "default" 0.0;
            script {
               emit("elm,state,controlbar_bg,show", "elm");
               set_state(PART:"elm.swallow.prev_btn", "default", 0.0);
            }
         }
         program { name: "left_btn_show";
            signal: "elm,state,elm.swallow.left_btn,show";
            source: "elm";
            action: STATE_SET "show" 0.0;
            target: "elm.swallow.left_btn";
         }
         program { name: "left_btn_hide";
            signal: "elm,state,elm.swallow.left_btn,hide";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "elm.swallow.left_btn";
         }
         program { name: "right_btn_show";
            signal: "elm,state,elm.swallow.right_btn,show";
            source: "elm";
            action: STATE_SET "show" 0.0;
            target: "elm.swallow.right_btn";
         }
         program { name: "right_btn_hide";
            signal: "elm,state,elm.swallow.right_btn,hide";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "elm.swallow.right_btn";
         }
         program { name: "controlbar_show";
            signal: "elm,state,elm.swallow.controlbar,show";
            source: "elm";
            action: STATE_SET "show" 0.0;
            script {
               emit("elm,state,controlbar_bg,show", "elm");
               set_state(PART:"elm.swallow.controlbar", "show", 0.0);
            }
         }
         program { name: "controlbar_hide";
            signal: "elm,state,elm.swallow.controlbar,hide";
            source: "elm";
            script {
               emit("elm,state,controlbar_bg,hide", "elm");
               set_state(PART:"elm.swallow.controlbar", "default", 0.0);
            }
         }
         program { name: "controlbar_bg_show";
            signal: "elm,state,controlbar_bg,show";
            source: "elm";
            script {
               set_state(PART:"controlbar_bg", "show", 0.0);
               ++cbar_bg;
            }
         }
         program { name: "controlbar_bg_hide";
            signal: "elm,state,controlbar_bg,hide";
            source: "elm";
            script {
               --cbar_bg;
               if (cbar_bg < 1)
                  set_state(PART:"controlbar_bg", "default", 0.0);
            }
         }
         program { name: "show_finished";
            action: SIGNAL_EMIT "elm,action,show,finished" "";
         }
         program { name: "pushed_finished";
            action: SIGNAL_EMIT "elm,action,pushed,finished" "";
         }
         program { name: "popped_finished";
            action: SIGNAL_EMIT "elm,action,popped,finished" "";
         }
         program {
            name: "title_clicked";
            signal: "mouse,clicked,1";
            source: "click_event_area";
            action: SIGNAL_EMIT "elm,action,title,clicked" "";
         }
      }
   }
   group { name: "elm/naviframe/item/tabbar/default";
      script {
         public cbar_bg = 0;     //Controlbar BG Show call count
      }
      parts {
         part { name: "elm.swallow.content";
            type: SWALLOW;
            scale: 1;
            repeat_events: 0;
            description { state: "default" 0.0;
               align: 0.0 0.0;
               rel2.relative: 1.0 0.0;
               rel2.to_y: "controlbar_bg";
            }
           description { state: "left" 0.0;
               inherit: "default" 0.0;
               rel1.relative: -1.0 0.0;
               rel2.relative: 0.0 0.0;
           }
            description { state: "right" 0.0;
               inherit: "default" 0.0;
               rel1.relative: 1.0 0.0;
               rel2.relative: 2.0 0.0;
            }
         }
         part { name: "controlbar_bg";
            type: RECT;
            scale: 1;
            description { state: "default" 0.0;
               min: 0 0;
               max: 999999 0;
               fixed: 0 1;
               align: 0.5 1;
               color: NAVIFRAME_CONTROLBAR_BG_COLOR_INC;
               visible: 0;
               rel1.to_x: "elm.swallow.content";
               rel2.to_x: "elm.swallow.content";
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               min: 0 CONTROLBAR_SMALL_HEIGHT_INC;
               max: 999999 CONTROLBAR_SMALL_HEIGHT_INC;
               visible: 1;
            }
         }
         part { name: "elm.swallow.prev_btn";
            type: SWALLOW;
            scale: 1;
            description { state: "default" 0.0;
               min: 0 CONTROLBAR_SMALL_HEIGHT_INC;
               max: 0 CONTROLBAR_SMALL_HEIGHT_INC;
               fixed: 1 1;
               align: 0 1;
               rel1.to: "controlbar_bg";
               rel2.to: "controlbar_bg";
               visible: 0;
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               min: NAVIFRAME_PREV_BTN_W_INC CONTROLBAR_SMALL_HEIGHT_INC;
               max: NAVIFRAME_PREV_BTN_W_INC CONTROLBAR_SMALL_HEIGHT_INC;
               visible: 1;
            }
         }
         part { name: "elm.swallow.controlbar";
            type: SWALLOW;
            scale: 1;
            description { state: "default" 0.0;
               rel1.to: "elm.swallow.prev_btn";
               rel1.relative: 1 0;
               rel2.to: "padding_after_controlbar";
               rel2.relative: 0 1;
               visible: 0;
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part { name: "padding_after_controlbar";
            type: RECT;
            scale: 1;
            description { state: "default" 0.0;
               min: NAVIFRAME_CONTROLBAR_PADDING_INC CONTROLBAR_SMALL_HEIGHT_INC;
               max: NAVIFRAME_CONTROLBAR_PADDING_INC CONTROLBAR_SMALL_HEIGHT_INC;
               align: 1 1;
               rel1.to: "controlbar_bg";
               rel2.to: "controlbar_bg";
               visible: 0;
            }
         }
      }
      programs {
         program { name: "content_new_pushed";
            signal: "elm,state,new,pushed,internal";
            source: "";
            action: STATE_SET "default" 0.0;
            target: "elm.swallow.content";
            transition: DECELERATE 0.5;
            after: "show_finished";
         }
         program { name: "content_cur_pushed";
            signal: "elm,state,cur,pushed,internal";
            source: "";
            action: STATE_SET "left" 0.0;
            target: "elm.swallow.content";
            transition: DECELERATE 0.5;
            after: "pushed_finished";
         }
         program { name: "content_prev_popped";
            signal: "elm,state,prev,popped,internal";
            source: "";
            action: STATE_SET "default" 0.0;
            target: "elm.swallow.content";
            transition: DECELERATE 0.5;
            after: "show_finished";
         }
         program { name: "content_cur_popped";
            signal: "elm,state,cur,popped,internal";
            source: "";
            action: STATE_SET "right" 0.0;
            target: "elm.swallow.content";
            transition: DECELERATE 0.5;
            after: "popped_finished";
         }
         program { name: "cur_pushed";
            signal: "elm,state,cur,pushed";
            source: "elm";
            script {
               set_state(PART:"elm.swallow.content", "default", 0.0);
               emit("elm,state,cur,pushed,internal", "");
            }
         }
         program { name: "new_pushed";
            signal: "elm,state,new,pushed";
            source: "elm";
            script {
               set_state(PART:"elm.swallow.content", "right", 0.0);
               emit("elm,state,new,pushed,internal", "");
            }
         }
         program { name: "prev_popped";
            signal: "elm,state,prev,popped";
            source: "elm";
            script {
               set_state(PART:"elm.swallow.content", "left", 0.0);
               emit("elm,state,prev,popped,internal", "");
            }
         }
         program { name: "cur_popped";
            signal: "elm,state,cur,popped";
            source: "elm";
            script {
               set_state(PART:"elm.swallow.content", "default", 0.0);
               emit("elm,state,cur,popped,internal", "");
            }
         }
         program { name: "visible";
            signal: "elm,state,visible";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "elm.swallow.content";
         }
         program { name: "prev_btn_show";
            signal: "elm,state,prev_btn,show";
            source: "elm";
            action: STATE_SET "show" 0.0;
            script {
               emit("elm,state,controlbar_bg,show", "elm");
               set_state(PART:"elm.swallow.prev_btn", "show", 0.0);
            }
         }
         program { name: "prev_btn_hide";
            signal: "elm,state,prev_btn,hide";
            source: "elm";
            action: STATE_SET "default" 0.0;
            script {
               emit("elm,state,controlbar_bg,show", "elm");
               set_state(PART:"elm.swallow.prev_btn", "default", 0.0);
            }
         }
         program { name: "controlbar_show";
            signal: "elm,state,elm.swallow.controlbar,show";
            source: "elm";
            action: STATE_SET "show" 0.0;
            script {
               emit("elm,state,controlbar_bg,show", "elm");
               set_state(PART:"elm.swallow.controlbar", "show", 0.0);
            }
         }
         program { name: "controlbar_hide";
            signal: "elm,state,elm.swallow.controlbar,hide";
            source: "elm";
            script {
               emit("elm,state,controlbar_bg,hide", "elm");
               set_state(PART:"elm.swallow.controlbar", "default", 0.0);
            }
         }
         program { name: "controlbar_bg_show";
            signal: "elm,state,controlbar_bg,show";
            source: "elm";
            script {
               set_state(PART:"controlbar_bg", "show", 0.0);
               ++cbar_bg;
            }
         }
         program { name: "controlbar_bg_hide";
            signal: "elm,state,controlbar_bg,hide";
            source: "elm";
            script {
               --cbar_bg;
               if (cbar_bg < 1)
                  set_state(PART:"controlbar_bg", "default", 0.0);
            }
         }
         program { name: "show_finished";
            action: SIGNAL_EMIT "elm,action,show,finished" "";
         }
         program { name: "pushed_finished";
            action: SIGNAL_EMIT "elm,action,pushed,finished" "";
         }
         program { name: "popped_finished";
            action: SIGNAL_EMIT "elm,action,popped,finished" "";
         }
         program {
            name: "title_clicked";
            signal: "mouse,clicked,1";
            source: "click_event_area";
            action: SIGNAL_EMIT "elm,action,title,clicked" "";
         }
      }
   }
   group { name:"elm/naviframe/item/basic/instant/default";
      alias:"elm/naviframe/item/1line/instant/default";
      alias:"elm/naviframe/item/instant/default";
      images {
         image: "naviframe_optionheader.png" COMP;
         image: "naviframe_optionheader_arrow.png" COMP;
      }
      script {
         public oh_show = 0;     //optionheader show/hide
         public oh_close = 0;    //optionheader close/open
         public cbar_bg = 0;     //Controlbar BG Show call count
      }
      parts {
         part { name: "title_clip";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               min: 1 NAVIFRAME_TITLE_H_INC;
               align: 0.0 0.0;
               fixed: 0 1;
               rel1 { relative: 0.0 0.0; }
               rel2 { relative: 1.0 0.0; }
            }
            description { state: "hide" 0.0;
               inherit: "default" 0.0;
               min: 0 0;
               max: 0 0;
               fixed: 1 1;
            }
         }
         part { name: "optionheader_clip";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               min: 1 0;
               align: 0.5 0;
               fixed: 0 1;
               rel1.to: "title_clip";
               rel1.relative: 0 1;
               rel2.to: "title_clip";
               visible: 0;
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               min: 1 NAVIFRAME_OH_OPENED_H_INC;
               visible: 1;
            }
            description { state: "hide" 0.0;
               inherit: "default" 0.0;
               min: 0 0;
               max: 0 0;
               fixed: 1 1;
            }
         }
         part { name: "optionheader_bg";
            type: IMAGE;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               rel1 { to: "optionheader_clip"; }
               rel2 { to: "optionheader_clip"; }
               image { normal: "naviframe_optionheader.png";
                  border: 0 0 4 0;
               }
            }
         }
         part { name: "optionheader_top_padding";
            type: RECT;
            scale: 1;
            clip_to: "optionheader_clip";
            description { state: "default" 0.0;
               min: 1 NAVIFRAME_OH_PADDING_INC;
               rel1 { relative: 0.0 0.0; to: "optionheader_bg"; }
               rel2 { relative: 1.0 0.0; to: "optionheader_bg"; }
               fixed: 0 1;
               align: 0.0 0.0;
               visible: 0;
            }
         }
         part { name: "elm.swallow.optionheader";
            type: SWALLOW;
            scale: 1;
            clip_to: "optionheader_clip";
            description { state: "default" 0.0;
               min: 1 NAVIFRAME_OH_CONTENT_H_INC;
               rel1 { relative: 0.0 1.0; to: "optionheader_top_padding"; }
               rel2 { relative: 1.0 1.0; to: "optionheader_top_padding"; }
               fixed: 0 1;
               align: 0.0 0.0;
               visible: 0;
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part { name: "optionheader_bottom_padding";
            type: RECT;
            scale: 1;
            clip_to: "optionheader_clip";
            description { state: "default" 0.0;
               min: 1 NAVIFRAME_OH_PADDING_INC;
               rel1 { relative: 0.0 1.0; to: "elm.swallow.optionheader"; }
               fixed: 0 1;
               align: 0.0 0.0;
               visible: 0;
            }
         }
         part { name: "content_clip";
            type: RECT;
            mouse_events: 0;
            description { state: "default" 0.0;
               rel1.to_y: "optionheader_bg";
               rel1.relative: 0 1;
            }
         }
         part { name: "elm.swallow.content";
            type: SWALLOW;
            scale: 1;
            repeat_events: 0;
            clip_to: "content_clip";
            description { state: "default" 0.0;
               align: 0.0 0.0;
               rel1.relative: 0.0 1.0;
               rel1.to_y: "optionheader_bg";
               rel2.relative: 1.0 0.0;
               rel2.to_y: "controlbar_bg";
            }
         }
         part { name: "title_base";
            type: RECT;
            description { state: "default" 0.0;
               rel1 { to: "title_clip"; }
               rel2 { to: "title_clip"; }
               color: NAVIFRAME_TITLE_BG_COLOR_INC;
            }
         }
         part { name: "padding_before_left_btn";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               min: NAVIFRAME_TITLE_FUNC_BTN_PADDING_W_INC 0;
               fixed: 1 0;
               align: 0.0 0.5;
               rel1 { relative: 0.0 0.0; to: "title_base"; }
               rel2 { relative: 0.0 1.0; to: "title_base"; }
               visible: 0;
            }
         }
         part { name: "padding_after_left_btn";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               min: NAVIFRAME_TITLE_FUNC_BTN_PADDING_W_INC 0;
               fixed: 1 0;
               align: 0.0 0.5;
               rel1 { relative: 1.0 0.0; to: "elm.swallow.left_btn"; }
               rel2 { relative: 1.0 1.0; to: "elm.swallow.left_btn"; }
               visible: 0;
            }
         }
         part { name: "padding_after_right_btn";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               min: NAVIFRAME_TITLE_FUNC_BTN_PADDING_W_INC 0;
               fixed: 1 0;
               align: 1.0 0.5;
               rel1 { relative: 1.0 0.0; to: "title_base"; }
               rel2 { relative: 1.0 1.0; to: "title_base"; }
               visible: 0;
            }
         }
         part { name: "padding_before_right_btn";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               min: 0 0;
               fixed: 1 0;
               align: 1.0 0.5;
               rel1 { relative: 0.0 0.0; to: "elm.swallow.right_btn"; }
               rel2 { relative: 0.0 1.0; to: "elm.swallow.right_btn"; }
               visible: 0;
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               min: NAVIFRAME_TITLE_FUNC_BTN_PADDING_W_INC 0;
            }
         }
         part { name: "padding_before_more_btn";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               min: NAVIFRAME_TITLE_FUNC_BTN_PADDING_W_INC 0;
               fixed: 1 0;
               align: 1.0 0.5;
               rel1 { relative: 0.0 0.0; to: "elm.swallow.more_btn"; }
               rel2 { relative: 0.0 1.0; to: "elm.swallow.more_btn"; }
               visible: 0;
            }
         }
         part { name: "padding_before_text";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               align: 1.0 0.5;
               rel1 { relative: 0.0 0.0; to_x: "elm.text.title"; to_y: "title_base"; }
               rel2 { relative: 0.0 1.0; to_x: "elm.text.title"; to_y: "title_base"; }
               fixed: 1 0;
               min: NAVIFRAME_ICON_PADDING_INC;
               visible: 0;
            }
         }
         part { name: "elm.text.title";
            type: TEXT;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               text { font: "SLP:style=Medium";
                  size: NAVIFRAME_TITLE_FONT_SIZE_INC;
                  min: 0 0;
                  max: 1 0;
                  align: 0.5 0.5;
               }
               color: NAVIFRAME_TITLE_TEXT_COLOR_INC;
               align: 0.5 0.5;
               rel1.to: "padding_after_left_btn";
               rel1.relative: 1 0;
               rel2.to: "padding_before_more_btn";
               rel2.relative: 0 1;
            }
         }
         part { name: "elm.swallow.icon";
            type: SWALLOW;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               max: NAVIFRAME_ICON_SIZE_INC;
               rel1 { relative: 0.0 0.0; to: "padding_before_text"; }
               rel2 { relative: 0.0 1.0; to: "padding_before_text"; }
               aspect: 1.0 1.0;
               aspect_preference: VERTICAL;
               align: 1.0 0.5;
            }
         }
         part { name: "click_event_area";
             ignore_flags: ON_HOLD;
             description { state: "default" 0.0;
                rel1 { to: "title_base"; }
                rel2 { to: "title_base"; }
             }
         }
         part { name: "elm.swallow.left_btn";
            type: SWALLOW;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               min: 0 0;
               fixed: 1 0;
               align: 0 0.5;
               rel1 { relative: 1.0 0.0; to: "padding_before_left_btn"; }
               rel2 { relative: 1.0 1.0; to: "padding_before_left_btn"; }
               visible: 0;
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               min: NAVIFRAME_TITLE_FUNC_BTN_SIZE_INC;
               max: NAVIFRAME_TITLE_FUNC_BTN_SIZE_INC;
               fixed: 1 1;
               visible: 1;
            }
         }
         part { name: "elm.swallow.right_btn";
            type: SWALLOW;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               min: 0 0;
               align: 1 0.5;
               fixed: 1 0;
               rel1 { relative: 0.0 0.0; to: "padding_after_right_btn"; }
               rel2 { relative: 0.0 1.0; to: "padding_after_right_btn"; }
               visible: 0;
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               min: NAVIFRAME_TITLE_FUNC_BTN_SIZE_INC;
               max: NAVIFRAME_TITLE_FUNC_BTN_SIZE_INC;
               fixed: 1 1;
               visible: 1;
            }
         }
         part { name: "elm.swallow.more_btn";
            type: SWALLOW;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               min: 0 0;
               fixed: 1 0;
               align: 1 0.5;
               rel1.to: "padding_before_right_btn";
               rel1.relative: 0 0;
               rel2.to: "padding_before_right_btn";
               rel2.relative: 0 1;
               visible: 0;
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               min: NAVIFRAME_TITLE_FUNC_BTN_SIZE_INC;
               max: NAVIFRAME_TITLE_FUNC_BTN_SIZE_INC;
               visible: 1;
            }
         }
         part { name: "optionheader_arrow";
            type: IMAGE;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               min: NAVIFRAME_OH_ARROW_SIZE_INC;
               max: NAVIFRAME_OH_ARROW_SIZE_INC;
               fixed: 1 1;
               align: 0.5 0;
               rel1.to: "elm.swallow.more_btn";
               rel1.relative: 0 1;
               rel2.to: "elm.swallow.more_btn";
               rel2.relative: 1 1;
               image {
                  normal: "naviframe_optionheader_arrow.png";
               }
               color: 255 255 255 0 ;
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
                color: 255 255 255 255;
            }
         }
         part { name: "controlbar_bg";
            type: RECT;
            scale: 1;
            description { state: "default" 0.0;
               min: 0 0;
               max: 999999 0;
               fixed: 0 1;
               align: 0.5 1;
               color: NAVIFRAME_CONTROLBAR_BG_COLOR_INC;
               visible: 0;
               rel1.to_x: "elm.swallow.content";
               rel2.to_x: "elm.swallow.content";
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               min: 0 CONTROLBAR_SMALL_HEIGHT_INC;
               max: 999999 CONTROLBAR_SMALL_HEIGHT_INC;
               visible: 1;
            }
         }
         part { name: "elm.swallow.prev_btn";
            type: SWALLOW;
            scale: 1;
            description { state: "default" 0.0;
               min: 0 CONTROLBAR_SMALL_HEIGHT_INC;
               max: 0 CONTROLBAR_SMALL_HEIGHT_INC;
               fixed: 1 1;
               align: 0 1;
               rel1.to: "controlbar_bg";
               rel2.to: "controlbar_bg";
               visible: 0;
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               min: NAVIFRAME_PREV_BTN_W_INC CONTROLBAR_SMALL_HEIGHT_INC;
               max: NAVIFRAME_PREV_BTN_W_INC CONTROLBAR_SMALL_HEIGHT_INC;
               visible: 1;
            }
         }
         part { name: "elm.swallow.controlbar";
            type: SWALLOW;
            scale: 1;
            description { state: "default" 0.0;
               rel1.to: "elm.swallow.prev_btn";
               rel1.relative: 1 0;
               rel2.to: "padding_after_controlbar";
               rel2.relative: 0 1;
               visible: 0;
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part { name: "padding_after_controlbar";
            type: RECT;
            scale: 1;
            description { state: "default" 0.0;
               min: NAVIFRAME_CONTROLBAR_PADDING_INC CONTROLBAR_SMALL_HEIGHT_INC;
               max: NAVIFRAME_CONTROLBAR_PADDING_INC CONTROLBAR_SMALL_HEIGHT_INC;
               align: 1 1;
               rel1.to: "controlbar_bg";
               rel2.to: "controlbar_bg";
               visible: 0;
            }
         }
      }
      programs {
         program { name: "cur_pushed";
            signal: "elm,state,cur,pushed";
            source: "elm";
            after: "pushed_finished";
         }
         program { name: "new_pushed";
            signal: "elm,state,new,pushed";
            source: "elm";
            after: "show_finished";
         }
         program { name: "prev_popped";
            signal: "elm,state,prev,popped";
            source: "elm";
            after: "show_finished";
         }
         program { name: "cur_popped";
            signal: "elm,state,cur,popped";
            source: "elm";
            after: "popped_finished";
         }
         program { name: "title_show";
            signal: "elm,state,title,show";
            source: "elm";
            script {
               set_state(PART:"title_clip", "default", 0.0);
               if (get_int(oh_show) == 1) {
                  if (get_int(oh_close) == 1) {
                     emit("elm,state,optionheader,instant_close", "");
                  }else {
                     emit("elm,state,optionheader,instant_open", "");
                  }
               }
               else
                 set_state(PART:"optionheader_clip", "default", 0.0);
            }
         }
         program { name: "title_hide";
            signal: "elm,state,title,hide";
            source: "elm";
            action: STATE_SET "hide" 0.0;
            target: "title_clip";
            target: "optionheader_clip";
         }
         program { name: "prev_btn_show";
            signal: "elm,state,prev_btn,show";
            source: "elm";
            action: STATE_SET "show" 0.0;
            script {
               emit("elm,state,controlbar_bg,show", "elm");
               set_state(PART:"elm.swallow.prev_btn", "show", 0.0);
            }
         }
         program { name: "prev_btn_hide";
            signal: "elm,state,prev_btn,hide";
            source: "elm";
            action: STATE_SET "default" 0.0;
            script {
               emit("elm,state,controlbar_bg,show", "elm");
               set_state(PART:"elm.swallow.prev_btn", "default", 0.0);
            }
         }
         program { name: "left_btn_show";
            signal: "elm,state,elm.swallow.left_btn,show";
            source: "elm";
            action: STATE_SET "show" 0.0;
            target: "elm.swallow.left_btn";
         }
         program { name: "left_btn_hide";
            signal: "elm,state,elm.swallow.left_btn,hide";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "elm.swallow.left_btn";
         }
         program { name: "right_btn_show";
            signal: "elm,state,elm.swallow.right_btn,show";
            source: "elm";
            action: STATE_SET "show" 0.0;
            target: "elm.swallow.right_btn";
         }
         program { name: "right_btn_hide";
            signal: "elm,state,elm.swallow.right_btn,hide";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "elm.swallow.right_btn";
         }
         program { name: "more_btn_show";
            signal: "elm,state,elm.swallow.more_btn,show";
            source: "elm";
            action: STATE_SET "show" 0.0;
            target: "elm.swallow.more_btn";
            target: "padding_before_right_btn";
         }
         program { name: "more_btn_hide";
            signal: "elm,state,elm.swallow.more_btn,hide";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "elm.swallow.more_btn";
            target: "padding_before_right_btn";
         }
         program { name: "controlbar_show";
            signal: "elm,state,elm.swallow.controlbar,show";
            source: "elm";
            action: STATE_SET "show" 0.0;
            script {
               emit("elm,state,controlbar_bg,show", "elm");
               set_state(PART:"elm.swallow.controlbar", "show", 0.0);
            }
         }
         program { name: "controlbar_hide";
            signal: "elm,state,elm.swallow.controlbar,hide";
            source: "elm";
            script {
               emit("elm,state,controlbar_bg,hide", "elm");
               set_state(PART:"elm.swallow.controlbar", "default", 0.0);
            }
         }
         program { name: "controlbar_bg_show";
            signal: "elm,state,controlbar_bg,show";
            source: "elm";
            script {
               set_state(PART:"controlbar_bg", "show", 0.0);
               ++cbar_bg;
            }
         }
         program { name: "controlbar_bg_hide";
            signal: "elm,state,controlbar_bg,hide";
            source: "elm";
            script {
               --cbar_bg;
               if (cbar_bg < 1)
                  set_state(PART:"controlbar_bg", "default", 0.0);
            }
         }
         program { name: "optionheader_show";
            signal: "elm,state,elm.swallow.optionheader,show";
            source: "elm";
            script {
               set_state(PART:"optionheader_clip", "show", 0.0);
               set_state(PART:"optionheader_arrow", "show", 0.0);
               set_state(PART:"elm.swallow.optionheader", "show", 0.0);
               set_int(oh_show, 1);
            }
         }
         program { name: "optionheader_hide";
            signal: "elm,state,elm.swallow.optionheader,hide";
            source: "elm";
            script {
               set_state(PART:"optionheader_clip", "default", 0.0);
               set_state(PART:"optionheader_arrow", "default", 0.0);
               set_state(PART:"elm.swallow.optionheader", "default", 0.0);
               set_int(oh_show, 0);
            }
         }
         program { name: "optionheader_open";
            signal: "elm,state,optionheader,open";
            source: "";
            action: STATE_SET "show" 0.0;
            target: "optionheader_clip";
            target: "optionheader_arrow";
            target: "elm.swallow.optionheader";
            transition: LINEAR 0.2;
            after: "optionheader_open_set";
         }
         program { name: "optionheader_close";
            signal: "elm,state,optionheader,close";
            source: "";
            action: STATE_SET "default" 0.0;
            target: "optionheader_clip";
            target: "optionheader_arrow";
            target: "elm.swallow.optionheader";
            transition: LINEAR 0.2;
            after: "optionheader_close_set";
         }
         program { name: "optionheader_instant_open";
            signal: "elm,state,optionheader,instant_open";
            source: "";
            action: STATE_SET "show" 0.0;
            target: "optionheader_clip";
            target: "optionheader_arrow";
            target: "elm.swallow.optionheader";
            after: "optionheader_open_set";
         }
         program { name: "optionheader_instant_close";
            signal: "elm,state,optionheader,instant_close";
            source: "";
            action: STATE_SET "default" 0.0;
            target: "optionheader_clip";
            target: "optionheader_arrow";
            target: "elm.swallow.optionheader";
            after: "optionheader_close_set";
         }
         program { name: "optionheader_close_set";
            signal: "elm,state,optionheader,close_set";
            source: "";
            script {
               set_int(oh_close, 1);
            }
         }
         program { name: "optionheader_open_set";
            signal: "elm,state,optionheader,open_set";
            source: "";
            script {
               set_int(oh_close, 0);
            }
         }
         program { name: "show_finished";
            action: SIGNAL_EMIT "elm,action,show,finished" "";
         }
         program { name: "pushed_finished";
            action: SIGNAL_EMIT "elm,action,pushed,finished" "";
         }
         program { name: "popped_finished";
            action: SIGNAL_EMIT "elm,action,popped,finished" "";
         }
         program {
            name: "title_clicked";
            signal: "mouse,clicked,1";
            source: "click_event_area";
            action: SIGNAL_EMIT "elm,action,title,clicked" "";
         }
      }
   }
   group { name:"elm/naviframe/item/basic2/instant/default";
      alias:"elm/naviframe/item/2line/instant/default";
      alias:"elm/naviframe/item/instant2/default";
      images {
         image: "naviframe_optionheader.png" COMP;
         image: "naviframe_optionheader_arrow.png" COMP;
      }
      script {
         public oh_show = 0;     //optionheader show/hide
         public oh_close = 0;    //optionheader close/open
         public cbar_bg = 0;     //Controlbar BG Show call count
      }
      parts {
         part { name: "title_clip";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               min: 1 NAVIFRAME_TITLE_H_INC;
               align: 0.0 0.0;
               fixed: 0 1;
               rel1 { relative: 0.0 0.0; }
               rel2 { relative: 1.0 0.0; }
            }
            description { state: "hide" 0.0;
               inherit: "default" 0.0;
               min: 0 0;
               max: 0 0;
               fixed: 1 1;
            }
         }
         part { name: "optionheader_clip";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               min: 1 0;
               align: 0.5 0;
               fixed: 0 1;
               rel1.to: "title_clip";
               rel1.relative: 0 1;
               rel2.to: "title_clip";
               visible: 0;
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               min: 1 NAVIFRAME_OH_OPENED_DOUBLE_H_INC;
               visible: 1;
            }
            description { state: "hide" 0.0;
               inherit: "default" 0.0;
               min: 0 0;
               max: 0 0;
               fixed: 1 1;
            }
         }
         part { name: "optionheader_bg";
            type: IMAGE;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               rel1 { to: "optionheader_clip"; }
               rel2 { to: "optionheader_clip"; }
               image { normal: "naviframe_optionheader.png";
                  border: 0 0 4 0;
               }
            }
         }
         part { name: "optionheader_top_padding";
            type: RECT;
            scale: 1;
            clip_to: "optionheader_clip";
            description { state: "default" 0.0;
               min: 1 NAVIFRAME_OH_PADDING_INC;
               rel1 { relative: 0.0 0.0; to: "optionheader_bg"; }
               rel2 { relative: 1.0 0.0; to: "optionheader_bg"; }
               fixed: 0 1;
               align: 0.0 0.0;
               visible: 0;
            }
         }
         part { name: "elm.swallow.optionheader";
            type: SWALLOW;
            scale: 1;
            clip_to: "optionheader_clip";
            description { state: "default" 0.0;
               min: 1 NAVIFRAME_OH_CONTENT_H_INC;
               rel1 { relative: 0.0 1.0; to: "optionheader_top_padding"; }
               rel2 { relative: 1.0 1.0; to: "optionheader_top_padding"; }
               fixed: 0 1;
               align: 0.0 0.0;
               visible: 0;
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part { name: "elm.swallow.optionheader.mid.padding";
            type: RECT;
            scale: 1;
            clip_to: "optionheader_clip";
            description { state: "default" 0.0;
               min: 1 NAVIFRAME_OH_PADDING_INC;
               rel1 { relative: 0.0 1.0; to: "elm.swallow.optionheader"; }
               rel2 { relative: 1.0 1.0; to: "elm.swallow.optionheader"; }
               fixed: 0 1;
               align: 0.0 0.0;
               visible: 0;
            }
         }
         part { name: "elm.swallow.optionheader2";
            type: SWALLOW;
            scale: 1;
            clip_to: "optionheader_clip";
            description { state: "default" 0.0;
               min: 1 NAVIFRAME_OH_CONTENT_H_INC;
               rel1 { relative: 0.0 1.0; to: "elm.swallow.optionheader.mid.padding";}
               rel2 { relative: 1.0 1.0; to: "elm.swallow.optionheader.mid.padding";}
               fixed: 0 1;
               align: 0.0 0.0;
               visible: 0;
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part { name: "elm.swallow.optionheader.bottom.padding";
            type: RECT;
            scale: 1;
            clip_to: "optionheader_clip";
            description { state: "default" 0.0;
               min: 1 NAVIFRAME_OH_PADDING_INC;
               rel1 { relative: 0.0 1.0; to: "elm.swallow.optionheader2"; }
               fixed: 0 1;
               align: 0.0 0.0;
               visible: 0;
            }
         }
         part { name: "content_clip";
            type: RECT;
            mouse_events: 0;
            description { state: "default" 0.0;
               rel1.to_y: "optionheader_bg";
               rel1.relative: 0 1;
            }
         }
         part { name: "elm.swallow.content";
            type: SWALLOW;
            scale: 1;
            repeat_events: 0;
            clip_to: "content_clip";
            description { state: "default" 0.0;
               align: 0.0 0.0;
               rel1.relative: 0.0 1.0;
               rel1.to_y: "optionheader_bg";
               rel2.relative: 1.0 0.0;
               rel2.to_y: "controlbar_bg";
            }
         }
         part { name: "title_base";
            type: RECT;
            description { state: "default" 0.0;
               rel1 { to: "title_clip"; }
               rel2 { to: "title_clip"; }
               color: NAVIFRAME_TITLE_BG_COLOR_INC;
            }
         }
         part { name: "padding_before_left_btn";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               min: NAVIFRAME_TITLE_FUNC_BTN_PADDING_W_INC 0;
               fixed: 1 0;
               align: 0.0 0.5;
               rel1 { relative: 0.0 0.0; to: "title_base"; }
               rel2 { relative: 0.0 1.0; to: "title_base"; }
               visible: 0;
            }
         }
         part { name: "padding_after_left_btn";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               min: NAVIFRAME_TITLE_FUNC_BTN_PADDING_W_INC 0;
               fixed: 1 0;
               align: 0.0 0.5;
               rel1 { relative: 1.0 0.0; to: "elm.swallow.left_btn"; }
               rel2 { relative: 1.0 1.0; to: "elm.swallow.left_btn"; }
               visible: 0;
            }
         }
         part { name: "padding_after_right_btn";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               min: NAVIFRAME_TITLE_FUNC_BTN_PADDING_W_INC 0;
               fixed: 1 0;
               align: 1.0 0.5;
               rel1 { relative: 1.0 0.0; to: "title_base"; }
               rel2 { relative: 1.0 1.0; to: "title_base"; }
               visible: 0;
            }
         }
         part { name: "padding_before_right_btn";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               min: 0 0;
               fixed: 1 0;
               align: 1.0 0.5;
               rel1 { relative: 0.0 0.0; to: "elm.swallow.right_btn"; }
               rel2 { relative: 0.0 1.0; to: "elm.swallow.right_btn"; }
               visible: 0;
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               min: NAVIFRAME_TITLE_FUNC_BTN_PADDING_W_INC 0;
            }
         }
         part { name: "padding_before_more_btn";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               min: NAVIFRAME_TITLE_FUNC_BTN_PADDING_W_INC 0;
               fixed: 1 0;
               align: 1.0 0.5;
               rel1 { relative: 0.0 0.0; to: "elm.swallow.more_btn"; }
               rel2 { relative: 0.0 1.0; to: "elm.swallow.more_btn"; }
               visible: 0;
            }
         }
         part { name: "padding_before_text";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               align: 1.0 0.5;
               rel1 { relative: 0.0 0.0; to_x: "elm.text.title"; to_y: "title_base"; }
               rel2 { relative: 0.0 1.0; to_x: "elm.text.title"; to_y: "title_base"; }
               fixed: 1 0;
               min: NAVIFRAME_ICON_PADDING_INC;
               visible: 0;
            }
         }
         part { name: "elm.text.title";
            type: TEXT;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               text { font: "SLP:style=Medium";
                  size: NAVIFRAME_TITLE_FONT_SIZE_INC;
                  min: 0 0;
                  max: 1 0;
                  align: 0.5 0.5;
               }
               color: NAVIFRAME_TITLE_TEXT_COLOR_INC;
               align: 0.5 0.5;
               rel1.to: "padding_after_left_btn";
               rel1.relative: 1 0;
               rel2.to: "padding_before_more_btn";
               rel2.relative: 0 1;
            }
         }
         part { name: "elm.swallow.icon";
            type: SWALLOW;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               max: NAVIFRAME_ICON_SIZE_INC;
               rel1 { relative: 0.0 0.0; to: "padding_before_text"; }
               rel2 { relative: 0.0 1.0; to: "padding_before_text"; }
               aspect: 1.0 1.0;
               aspect_preference: VERTICAL;
               align: 1.0 0.5;
            }
         }
         part { name: "click_event_area";
             ignore_flags: ON_HOLD;
             description { state: "default" 0.0;
                rel1 { to: "title_base"; }
                rel2 { to: "title_base"; }
             }
         }
         part { name: "elm.swallow.left_btn";
            type: SWALLOW;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               min: 0 0;
               fixed: 1 0;
               align: 0 0.5;
               rel1 { relative: 1.0 0.0; to: "padding_before_left_btn"; }
               rel2 { relative: 1.0 1.0; to: "padding_before_left_btn"; }
               visible: 0;
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               min: NAVIFRAME_TITLE_FUNC_BTN_SIZE_INC;
               max: NAVIFRAME_TITLE_FUNC_BTN_SIZE_INC;
               fixed: 1 1;
               visible: 1;
            }
         }
         part { name: "elm.swallow.right_btn";
            type: SWALLOW;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               min: 0 0;
               align: 1 0.5;
               fixed: 1 0;
               rel1 { relative: 0.0 0.0; to: "padding_after_right_btn"; }
               rel2 { relative: 0.0 1.0; to: "padding_after_right_btn"; }
               visible: 0;
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               min: NAVIFRAME_TITLE_FUNC_BTN_SIZE_INC;
               max: NAVIFRAME_TITLE_FUNC_BTN_SIZE_INC;
               fixed: 1 1;
               visible: 1;
            }
         }
         part { name: "elm.swallow.more_btn";
            type: SWALLOW;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               min: 0 0;
               fixed: 1 0;
               align: 1 0.5;
               rel1.to: "padding_before_right_btn";
               rel1.relative: 0 0;
               rel2.to: "padding_before_right_btn";
               rel2.relative: 0 1;
               visible: 0;
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               min: NAVIFRAME_TITLE_FUNC_BTN_SIZE_INC;
               max: NAVIFRAME_TITLE_FUNC_BTN_SIZE_INC;
               visible: 1;
            }
         }
         part { name: "optionheader_arrow";
            type: IMAGE;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               min: NAVIFRAME_OH_ARROW_SIZE_INC;
               max: NAVIFRAME_OH_ARROW_SIZE_INC;
               fixed: 1 1;
               align: 0.5 0;
               rel1.to: "elm.swallow.more_btn";
               rel1.relative: 0 1;
               rel2.to: "elm.swallow.more_btn";
               rel2.relative: 1 1;
               image {
                  normal: "naviframe_optionheader_arrow.png";
               }
               color: 255 255 255 0 ;
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
                color: 255 255 255 255;
            }
         }
         part { name: "controlbar_bg";
            type: RECT;
            scale: 1;
            description { state: "default" 0.0;
               min: 0 0;
               max: 999999 0;
               fixed: 0 1;
               align: 0.5 1;
               color: NAVIFRAME_CONTROLBAR_BG_COLOR_INC;
               visible: 0;
               rel1.to_x: "elm.swallow.content";
               rel2.to_x: "elm.swallow.content";
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               min: 0 CONTROLBAR_SMALL_HEIGHT_INC;
               max: 999999 CONTROLBAR_SMALL_HEIGHT_INC;
               visible: 1;
            }
         }
         part { name: "elm.swallow.prev_btn";
            type: SWALLOW;
            scale: 1;
            description { state: "default" 0.0;
               min: 0 CONTROLBAR_SMALL_HEIGHT_INC;
               max: 0 CONTROLBAR_SMALL_HEIGHT_INC;
               fixed: 1 1;
               align: 0 1;
               rel1.to: "controlbar_bg";
               rel2.to: "controlbar_bg";
               visible: 0;
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               min: NAVIFRAME_PREV_BTN_W_INC CONTROLBAR_SMALL_HEIGHT_INC;
               max: NAVIFRAME_PREV_BTN_W_INC CONTROLBAR_SMALL_HEIGHT_INC;
               visible: 1;
            }
         }
         part { name: "elm.swallow.controlbar";
            type: SWALLOW;
            scale: 1;
            description { state: "default" 0.0;
               rel1.to: "elm.swallow.prev_btn";
               rel1.relative: 1 0;
               rel2.to: "padding_after_controlbar";
               rel2.relative: 0 1;
               visible: 0;
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part { name: "padding_after_controlbar";
            type: RECT;
            scale: 1;
            description { state: "default" 0.0;
               min: NAVIFRAME_CONTROLBAR_PADDING_INC CONTROLBAR_SMALL_HEIGHT_INC;
               max: NAVIFRAME_CONTROLBAR_PADDING_INC CONTROLBAR_SMALL_HEIGHT_INC;
               align: 1 1;
               rel1.to: "controlbar_bg";
               rel2.to: "controlbar_bg";
               visible: 0;
            }
         }
      }
      programs {
         program { name: "cur_pushed";
            signal: "elm,state,cur,pushed";
            source: "elm";
            after: "pushed_finished";
         }
         program { name: "new_pushed";
            signal: "elm,state,new,pushed";
            source: "elm";
            after: "show_finished";
         }
         program { name: "prev_popped";
            signal: "elm,state,prev,popped";
            source: "elm";
            after: "show_finished";
         }
         program { name: "cur_popped";
            signal: "elm,state,cur,popped";
            source: "elm";
            after: "popped_finished";
         }
         program { name: "title_show";
            signal: "elm,state,title,show";
            source: "elm";
            script {
               set_state(PART:"title_clip", "default", 0.0);
               if (get_int(oh_show) == 1) {
                  if (get_int(oh_close) == 1) {
                     emit("elm,state,optionheader,instant_close", "");
                  }else {
                     emit("elm,state,optionheader,instant_open", "");
                  }
               }
               else
                 set_state(PART:"optionheader_clip", "default", 0.0);
            }
         }
         program { name: "title_hide";
            signal: "elm,state,title,hide";
            source: "elm";
            action: STATE_SET "hide" 0.0;
            target: "title_clip";
            target: "optionheader_clip";
         }
         program { name: "prev_btn_show";
            signal: "elm,state,prev_btn,show";
            source: "elm";
            action: STATE_SET "show" 0.0;
            script {
               emit("elm,state,controlbar_bg,show", "elm");
               set_state(PART:"elm.swallow.prev_btn", "show", 0.0);
            }
         }
         program { name: "prev_btn_hide";
            signal: "elm,state,prev_btn,hide";
            source: "elm";
            action: STATE_SET "default" 0.0;
            script {
               emit("elm,state,controlbar_bg,show", "elm");
               set_state(PART:"elm.swallow.prev_btn", "default", 0.0);
            }
         }
         program { name: "left_btn_show";
            signal: "elm,state,elm.swallow.left_btn,show";
            source: "elm";
            action: STATE_SET "show" 0.0;
            target: "elm.swallow.left_btn";
         }
         program { name: "left_btn_hide";
            signal: "elm,state,elm.swallow.left_btn,hide";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "elm.swallow.left_btn";
         }
         program { name: "right_btn_show";
            signal: "elm,state,elm.swallow.right_btn,show";
            source: "elm";
            action: STATE_SET "show" 0.0;
            target: "elm.swallow.right_btn";
         }
         program { name: "right_btn_hide";
            signal: "elm,state,elm.swallow.right_btn,hide";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "elm.swallow.right_btn";
         }
         program { name: "more_btn_show";
            signal: "elm,state,elm.swallow.more_btn,show";
            source: "elm";
            action: STATE_SET "show" 0.0;
            target: "elm.swallow.more_btn";
            target: "padding_before_right_btn";
         }
         program { name: "more_btn_hide";
            signal: "elm,state,elm.swallow.more_btn,hide";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "elm.swallow.more_btn";
            target: "padding_before_right_btn";
         }
         program { name: "controlbar_show";
            signal: "elm,state,elm.swallow.controlbar,show";
            source: "elm";
            action: STATE_SET "show" 0.0;
            script {
               emit("elm,state,controlbar_bg,show", "elm");
               set_state(PART:"elm.swallow.controlbar", "show", 0.0);
            }
         }
         program { name: "controlbar_hide";
            signal: "elm,state,elm.swallow.controlbar,hide";
            source: "elm";
            script {
               emit("elm,state,controlbar_bg,hide", "elm");
               set_state(PART:"elm.swallow.controlbar", "default", 0.0);
            }
         }
         program { name: "controlbar_bg_show";
            signal: "elm,state,controlbar_bg,show";
            source: "elm";
            script {
               set_state(PART:"controlbar_bg", "show", 0.0);
               ++cbar_bg;
            }
         }
         program { name: "controlbar_bg_hide";
            signal: "elm,state,controlbar_bg,hide";
            source: "elm";
            script {
               --cbar_bg;
               if (cbar_bg < 1)
                  set_state(PART:"controlbar_bg", "default", 0.0);
            }
         }
         program { name: "optionheader_show";
            signal: "elm,state,elm.swallow.optionheader,show";
            source: "elm";
            script {
               set_state(PART:"optionheader_clip", "show", 0.0);
               set_state(PART:"optionheader_arrow", "show", 0.0);
               set_state(PART:"elm.swallow.optionheader", "show", 0.0);
               set_state(PART:"elm.swallow.optionheader2", "show", 0.0);
               set_int(oh_show, 1);
            }
         }
         program { name: "optionheader_hide";
            signal: "elm,state,elm.swallow.optionheader,hide";
            source: "elm";
            script {
               set_state(PART:"optionheader_clip", "default", 0.0);
               set_state(PART:"optionheader_arrow", "default", 0.0);
               set_state(PART:"elm.swallow.optionheader", "default", 0.0);
               set_state(PART:"elm.swallow.optionheader2", "hide", 0.0);
               set_int(oh_show, 0);
            }
         }
         program { name: "optionheader_open";
            signal: "elm,state,optionheader,open";
            source: "";
            action: STATE_SET "show" 0.0;
            target: "optionheader_clip";
            target: "optionheader_arrow";
            target: "elm.swallow.optionheader";
            target: "elm.swallow.optionheader2";
            transition: LINEAR 0.2;
            after: "optionheader_open_set";
         }
         program { name: "optionheader_close";
            signal: "elm,state,optionheader,close";
            source: "";
            action: STATE_SET "default" 0.0;
            target: "optionheader_clip";
            target: "optionheader_arrow";
            target: "elm.swallow.optionheader";
            target: "elm.swallow.optionheader2";
            transition: LINEAR 0.2;
            after: "optionheader_close_set";
         }
         program { name: "optionheader_instant_open";
            signal: "elm,state,optionheader,instant_open";
            source: "";
            action: STATE_SET "show" 0.0;
            target: "optionheader_clip";
            target: "optionheader_arrow";
            target: "elm.swallow.optionheader";
            target: "elm.swallow.optionheader2";
            after: "optionheader_open_set";
         }
         program { name: "optionheader_instant_close";
            signal: "elm,state,optionheader,instant_close";
            source: "";
            action: STATE_SET "default" 0.0;
            target: "optionheader_clip";
            target: "optionheader_arrow";
            target: "elm.swallow.optionheader";
            target: "elm.swallow.optionheader2";
            after: "optionheader_close_set";
         }
         program { name: "optionheader_close_set";
            signal: "elm,state,optionheader,close_set";
            source: "";
            script {
               set_int(oh_close, 1);
            }
         }
         program { name: "optionheader_open_set";
            signal: "elm,state,optionheader,open_set";
            source: "";
            script {
               set_int(oh_close, 0);
            }
         }
         program { name: "show_finished";
            action: SIGNAL_EMIT "elm,action,show,finished" "";
         }
         program { name: "pushed_finished";
            action: SIGNAL_EMIT "elm,action,pushed,finished" "";
         }
         program { name: "popped_finished";
            action: SIGNAL_EMIT "elm,action,popped,finished" "";
         }
         program {
            name: "title_clicked";
            signal: "mouse,clicked,1";
            source: "click_event_area";
            action: SIGNAL_EMIT "elm,action,title,clicked" "";
         }
      }
   }
   group { name: "elm/naviframe/item/segment/instant/default";
      script {
         public cbar_bg = 0;     //Controlbar BG Show call count
      }
      parts {
         part { name: "title_clip";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               min: 1 NAVIFRAME_SEGMENT_TITLE_H_INC;
               align: 0.0 0.0;
               fixed: 0 1;
               rel1 { relative: 0.0 0.0; }
               rel2 { relative: 1.0 0.0; }
            }
            description { state: "hide" 0.0;
               inherit: "default" 0.0;
               min: 0 0;
               max: 0 0;
               fixed: 1 1;
            }
         }
         part { name: "content_clip";
            type: RECT;
            mouse_events: 0;
            description { state: "default" 0.0;
               rel1.to_y: "title_clip";
               rel1.relative: 0 1;
            }
         }
         part { name: "elm.swallow.content";
            type: SWALLOW;
            scale: 1;
            repeat_events: 0;
            clip_to: "content_clip";
            description { state: "default" 0.0;
               align: 0.0 0.0;
               rel1.relative: 0.0 1.0;
               rel1.to_y: "title_clip";
               rel2.relative: 1.0 0.0;
               rel2.to_y: "controlbar_bg";
            }
        }
         part { name: "title_base";
            type: RECT;
            description { state: "default" 0.0;
               rel1 { to: "title_clip"; }
               rel2 { to: "title_clip"; }
               color: NAVIFRAME_TITLE_BG_COLOR_INC;
            }
         }
         part { name: "padding_before_left_btn";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               min: NAVIFRAME_TITLE_FUNC_BTN_PADDING_W_INC 0;
               fixed: 1 0;
               align: 0.0 0.5;
               rel1 { relative: 0.0 0.0; to: "title_base"; }
               rel2 { relative: 0.0 1.0; to: "title_base"; }
               visible: 0;
            }
         }
         part { name: "padding_after_left_btn";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               min: NAVIFRAME_TITLE_FUNC_BTN_PADDING_W_INC 0;
               fixed: 1 0;
               align: 0.0 0.5;
               rel1 { relative: 1.0 0.0; to: "elm.swallow.left_btn"; }
               rel2 { relative: 1.0 1.0; to: "elm.swallow.left_btn"; }
               visible: 0;
            }
         }
         part { name: "padding_after_right_btn";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               min: NAVIFRAME_TITLE_FUNC_BTN_PADDING_W_INC 0;
               fixed: 1 0;
               align: 1.0 0.5;
               rel1 { relative: 1.0 0.0; to: "title_base"; }
               rel2 { relative: 1.0 1.0; to: "title_base"; }
               visible: 0;
            }
         }
         part { name: "padding_before_right_btn";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               min: 0 0;
               fixed: 1 0;
               align: 1.0 0.5;
               rel1 { relative: 0.0 0.0; to: "elm.swallow.right_btn"; }
               rel2 { relative: 0.0 1.0; to: "elm.swallow.right_btn"; }
               visible: 0;
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               min: NAVIFRAME_TITLE_FUNC_BTN_PADDING_W_INC 0;
            }
         }
         part { name: "padding_before_text";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               align: 1.0 0.5;
               rel1 { relative: 0.0 0.0; to_x: "elm.text.title"; to_y: "title_base"; }
               rel2 { relative: 0.0 1.0; to_x: "elm.text.title"; to_y: "title_base"; }
               fixed: 1 0;
               min: NAVIFRAME_ICON_PADDING_INC;
               visible: 0;
            }
         }
         part { name: "elm.text.title";
            type: TEXT;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               text { font: "SLP:style=Medium";
                  size: NAVIFRAME_TITLE_SEGMENT_FONT_SIZE_INC;
                  min: 0 0;
                  max: 1 0;
                  align: 0.5 0.5;
               }
               min: 0 NAVIFRAME_TITLE_SEGMENT_TEXT_H_INC;
               max: 999999 NAVIFRAME_TITLE_SEGMENT_TEXT_H_INC;
               fixed: 0 1;
               color: NAVIFRAME_TITLE_TEXT_COLOR_INC;
               align: 0.5 0;
               rel1.to: "padding_before_left_btn";
               rel1.relative: 1 0;
               rel2.to: "padding_after_right_btn";
               rel2.relative: 0 1;
            }
         }
         part { name: "click_event_area";
             ignore_flags: ON_HOLD;
             description { state: "default" 0.0;
                rel1 { to: "title_base"; }
                rel2 { to: "title_base"; }
             }
         }
         part { name: "elm.swallow.left_btn";
            type: SWALLOW;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               min: 0 0;
               fixed: 1 0;
               align: 0 0;
               rel1.relative: 1.0 1.0;
               rel1.to_x: "padding_before_left_btn";
               rel1.to_y: "elm.text.title";
               rel2.relative: 1.0 1.0;
               rel2.to_x: "padding_before_left_btn";
               rel2.to_y: "elm.text.title";
               visible: 0;
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               min: NAVIFRAME_TITLE_FUNC_BTN_SIZE_INC;
               max: NAVIFRAME_TITLE_FUNC_BTN_SIZE_INC;
               fixed: 1 1;
               visible: 1;
            }
         }
         part { name: "elm.swallow.right_btn";
            type: SWALLOW;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               min: 0 0;
               align: 1 0;
               fixed: 1 0;
               rel1.relative: 0.0 1.0;
               rel1.to_x: "padding_after_right_btn";
               rel1.to_y: "elm.text.title";
               rel2.relative: 0.0 1.0;
               rel2.to_x: "padding_after_right_btn";
               rel2.to_y: "elm.text.title";
               visible: 0;
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               min: NAVIFRAME_TITLE_FUNC_BTN_SIZE_INC;
               max: NAVIFRAME_TITLE_FUNC_BTN_SIZE_INC;
               fixed: 1 1;
               visible: 1;
            }
         }
         part { name: "elm.swallow.segment2";
            type: "SWALLOW";
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               min: 0 NAVIFRAME_TITLE_SEGMENT_H_INC;
               max: 999999 NAVIFRAME_TITLE_SEGMENT_H_INC;
               fixed: 0 1;
               align: 0.5 0;
               rel1.to_y: "elm.text.title";
               rel1.relative: 0.28 1;
               rel2.to_y: "elm.text.title";
               rel2.relative: 0.72 1;
            }
         }
         part { name: "elm.swallow.segment3";
            type: "SWALLOW";
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               min: 0 NAVIFRAME_TITLE_SEGMENT_H_INC;
               max: 999999 NAVIFRAME_TITLE_SEGMENT_H_INC;
               fixed: 0 1;
               align: 0.5 0;
               rel1.to_y: "elm.text.title";
               rel1.relative: 0.2 1;
               rel2.to_y: "elm.text.title";
               rel2.relative: 0.8 1;
            }
         }
         part { name: "controlbar_bg";
            type: RECT;
            scale: 1;
            description { state: "default" 0.0;
               min: 0 0;
               max: 999999 0;
               fixed: 0 1;
               align: 0.5 1;
               color: NAVIFRAME_CONTROLBAR_BG_COLOR_INC;
               visible: 0;
               rel1.to_x: "elm.swallow.content";
               rel2.to_x: "elm.swallow.content";
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               min: 0 CONTROLBAR_SMALL_HEIGHT_INC;
               max: 999999 CONTROLBAR_SMALL_HEIGHT_INC;
               visible: 1;
            }
         }
         part { name: "elm.swallow.prev_btn";
            type: SWALLOW;
            scale: 1;
            description { state: "default" 0.0;
               min: 0 CONTROLBAR_SMALL_HEIGHT_INC;
               max: 0 CONTROLBAR_SMALL_HEIGHT_INC;
               fixed: 1 1;
               align: 0 1;
               rel1.to: "controlbar_bg";
               rel2.to: "controlbar_bg";
               visible: 0;
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               min: NAVIFRAME_PREV_BTN_W_INC CONTROLBAR_SMALL_HEIGHT_INC;
               max: NAVIFRAME_PREV_BTN_W_INC CONTROLBAR_SMALL_HEIGHT_INC;
               visible: 1;
            }
         }
         part { name: "elm.swallow.controlbar";
            type: SWALLOW;
            scale: 1;
            description { state: "default" 0.0;
               rel1.to: "elm.swallow.prev_btn";
               rel1.relative: 1 0;
               rel2.to: "padding_after_controlbar";
               rel2.relative: 0 1;
               visible: 0;
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part { name: "padding_after_controlbar";
            type: RECT;
            scale: 1;
            description { state: "default" 0.0;
               min: NAVIFRAME_CONTROLBAR_PADDING_INC CONTROLBAR_SMALL_HEIGHT_INC;
               max: NAVIFRAME_CONTROLBAR_PADDING_INC CONTROLBAR_SMALL_HEIGHT_INC;
               align: 1 1;
               rel1.to: "controlbar_bg";
               rel2.to: "controlbar_bg";
               visible: 0;
            }
         }
      }
      programs {
         program { name: "cur_pushed";
            signal: "elm,state,cur,pushed";
            source: "elm";
            after: "pushed_finished";
         }
         program { name: "new_pushed";
            signal: "elm,state,new,pushed";
            source: "elm";
            after: "show_finished";
         }
         program { name: "prev_popped";
            signal: "elm,state,prev,popped";
            source: "elm";
            after: "show_finished";
         }
         program { name: "cur_popped";
            signal: "elm,state,cur,popped";
            source: "elm";
            after: "popped_finished";
         }
         program { name: "title_show";
            signal: "elm,state,title,show";
            source: "elm";
            action: STATE_SET "show" 0.0;
            target: "title_clip";
         }
         program { name: "title_hide";
            signal: "elm,state,title,hide";
            source: "elm";
            action: STATE_SET "hide" 0.0;
            target: "title_clip";
         }
         program { name: "prev_btn_show";
            signal: "elm,state,prev_btn,show";
            source: "elm";
            action: STATE_SET "show" 0.0;
            script {
               emit("elm,state,controlbar_bg,show", "elm");
               set_state(PART:"elm.swallow.prev_btn", "show", 0.0);
            }
         }
         program { name: "prev_btn_hide";
            signal: "elm,state,prev_btn,hide";
            source: "elm";
            action: STATE_SET "default" 0.0;
            script {
               emit("elm,state,controlbar_bg,show", "elm");
               set_state(PART:"elm.swallow.prev_btn", "default", 0.0);
            }
         }
         program { name: "left_btn_show";
            signal: "elm,state,elm.swallow.left_btn,show";
            source: "elm";
            action: STATE_SET "show" 0.0;
            target: "elm.swallow.left_btn";
         }
         program { name: "left_btn_hide";
            signal: "elm,state,elm.swallow.left_btn,hide";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "elm.swallow.left_btn";
         }
         program { name: "right_btn_show";
            signal: "elm,state,elm.swallow.right_btn,show";
            source: "elm";
            action: STATE_SET "show" 0.0;
            target: "elm.swallow.right_btn";
         }
         program { name: "right_btn_hide";
            signal: "elm,state,elm.swallow.right_btn,hide";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "elm.swallow.right_btn";
         }
         program { name: "controlbar_show";
            signal: "elm,state,elm.swallow.controlbar,show";
            source: "elm";
            action: STATE_SET "show" 0.0;
            script {
               emit("elm,state,controlbar_bg,show", "elm");
               set_state(PART:"elm.swallow.controlbar", "show", 0.0);
            }
         }
         program { name: "controlbar_hide";
            signal: "elm,state,elm.swallow.controlbar,hide";
            source: "elm";
            script {
               emit("elm,state,controlbar_bg,hide", "elm");
               set_state(PART:"elm.swallow.controlbar", "default", 0.0);
            }
         }
         program { name: "controlbar_bg_show";
            signal: "elm,state,controlbar_bg,show";
            source: "elm";
            script {
               set_state(PART:"controlbar_bg", "show", 0.0);
               ++cbar_bg;
            }
         }
         program { name: "controlbar_bg_hide";
            signal: "elm,state,controlbar_bg,hide";
            source: "elm";
            script {
               --cbar_bg;
               if (cbar_bg < 1)
                  set_state(PART:"controlbar_bg", "default", 0.0);
            }
         }
         program { name: "show_finished";
            action: SIGNAL_EMIT "elm,action,show,finished" "";
         }
         program { name: "pushed_finished";
            action: SIGNAL_EMIT "elm,action,pushed,finished" "";
         }
         program { name: "popped_finished";
            action: SIGNAL_EMIT "elm,action,popped,finished" "";
         }
         program {
            name: "title_clicked";
            signal: "mouse,clicked,1";
            source: "click_event_area";
            action: SIGNAL_EMIT "elm,action,title,clicked" "";
         }
      }
   }
   group { name: "elm/naviframe/item/tabbar/instant/default";
      script {
         public cbar_bg = 0;     //Controlbar BG Show call count
      }
      parts {
         part { name: "elm.swallow.content";
            type: SWALLOW;
            scale: 1;
            repeat_events: 0;
            description { state: "default" 0.0;
               align: 0.0 0.0;
               rel2.relative: 1.0 0.0;
               rel2.to_y: "controlbar_bg";
            }
         }
         part { name: "controlbar_bg";
            type: RECT;
            scale: 1;
            description { state: "default" 0.0;
               min: 0 0;
               max: 999999 0;
               fixed: 0 1;
               align: 0.5 1;
               color: NAVIFRAME_CONTROLBAR_BG_COLOR_INC;
               visible: 0;
               rel1.to_x: "elm.swallow.content";
               rel2.to_x: "elm.swallow.content";
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               min: 0 CONTROLBAR_SMALL_HEIGHT_INC;
               max: 999999 CONTROLBAR_SMALL_HEIGHT_INC;
               visible: 1;
            }
         }
         part { name: "elm.swallow.prev_btn";
            type: SWALLOW;
            scale: 1;
            description { state: "default" 0.0;
               min: 0 CONTROLBAR_SMALL_HEIGHT_INC;
               max: 0 CONTROLBAR_SMALL_HEIGHT_INC;
               fixed: 1 1;
               align: 0 1;
               rel1.to: "controlbar_bg";
               rel2.to: "controlbar_bg";
               visible: 0;
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               min: NAVIFRAME_PREV_BTN_W_INC CONTROLBAR_SMALL_HEIGHT_INC;
               max: NAVIFRAME_PREV_BTN_W_INC CONTROLBAR_SMALL_HEIGHT_INC;
               visible: 1;
            }
         }
         part { name: "elm.swallow.controlbar";
            type: SWALLOW;
            scale: 1;
            description { state: "default" 0.0;
               rel1.to: "elm.swallow.prev_btn";
               rel1.relative: 1 0;
               rel2.to: "padding_after_controlbar";
               rel2.relative: 0 1;
               visible: 0;
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part { name: "padding_after_controlbar";
            type: RECT;
            scale: 1;
            description { state: "default" 0.0;
               min: NAVIFRAME_CONTROLBAR_PADDING_INC CONTROLBAR_SMALL_HEIGHT_INC;
               max: NAVIFRAME_CONTROLBAR_PADDING_INC CONTROLBAR_SMALL_HEIGHT_INC;
               align: 1 1;
               rel1.to: "controlbar_bg";
               rel2.to: "controlbar_bg";
               visible: 0;
            }
         }
      }
      programs {
         program { name: "cur_pushed";
            signal: "elm,state,cur,pushed";
            source: "elm";
            after: "pushed_finished";
         }
         program { name: "new_pushed";
            signal: "elm,state,new,pushed";
            source: "elm";
            after: "show_finished";
         }
         program { name: "prev_popped";
            signal: "elm,state,prev,popped";
            source: "elm";
            after: "show_finished";
         }
         program { name: "cur_popped";
            signal: "elm,state,cur,popped";
            source: "elm";
            after: "popped_finished";
         }
         program { name: "prev_btn_show";
            signal: "elm,state,prev_btn,show";
            source: "elm";
            action: STATE_SET "show" 0.0;
            script {
               emit("elm,state,controlbar_bg,show", "elm");
               set_state(PART:"elm.swallow.prev_btn", "show", 0.0);
            }
         }
         program { name: "prev_btn_hide";
            signal: "elm,state,prev_btn,hide";
            source: "elm";
            action: STATE_SET "default" 0.0;
            script {
               emit("elm,state,controlbar_bg,show", "elm");
               set_state(PART:"elm.swallow.prev_btn", "default", 0.0);
            }
         }
         program { name: "controlbar_show";
            signal: "elm,state,elm.swallow.controlbar,show";
            source: "elm";
            action: STATE_SET "show" 0.0;
            script {
               emit("elm,state,controlbar_bg,show", "elm");
               set_state(PART:"elm.swallow.controlbar", "show", 0.0);
            }
         }
         program { name: "controlbar_hide";
            signal: "elm,state,elm.swallow.controlbar,hide";
            source: "elm";
            script {
               emit("elm,state,controlbar_bg,hide", "elm");
               set_state(PART:"elm.swallow.controlbar", "default", 0.0);
            }
         }
         program { name: "controlbar_bg_show";
            signal: "elm,state,controlbar_bg,show";
            source: "elm";
            script {
               set_state(PART:"controlbar_bg", "show", 0.0);
               ++cbar_bg;
            }
         }
         program { name: "controlbar_bg_hide";
            signal: "elm,state,controlbar_bg,hide";
            source: "elm";
            script {
               --cbar_bg;
               if (cbar_bg < 1)
                  set_state(PART:"controlbar_bg", "default", 0.0);
            }
         }
         program { name: "show_finished";
            action: SIGNAL_EMIT "elm,action,show,finished" "";
         }
         program { name: "pushed_finished";
            action: SIGNAL_EMIT "elm,action,pushed,finished" "";
         }
         program { name: "popped_finished";
            action: SIGNAL_EMIT "elm,action,popped,finished" "";
         }
         program {
            name: "title_clicked";
            signal: "mouse,clicked,1";
            source: "click_event_area";
            action: SIGNAL_EMIT "elm,action,title,clicked" "";
         }
      }
   }

