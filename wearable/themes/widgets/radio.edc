/*
 * Copyright (c) 2010 Samsung Electronics Co., Ltd All Rights Reserved
 *
 * BSD 2-Clause License (http://www.opensource.org/licenses/bsd-license.php)
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 *   1. Redistributions of source code must retain the above copyright notice, this
 *      list of conditions and the following disclaimer.
 *   2. Redistributions in binary form must reproduce the above copyright notice,
 *      this list of conditions and the following disclaimer in the documentation
 *      and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
 * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

group { name: "elm/radio/base/default";
      images {
         image: "tw_btn_radio_normal_holo_dark.png" COMP;
         image: "tw_btn_radio_pressed_holo_dark.png" COMP;
         image: "tw_btn_radio_disabled_holo_dark.png" COMP;
         image: "tw_btn_radio_on_normal_holo_dark.png" COMP;
         image: "tw_btn_radio_on_pressed_holo_dark.png" COMP;
         image: "tw_btn_radio_on_disable_holo_dark.png" COMP;
      }
      script {
         public radio_state;
         public radio_disabled;
      }
      parts {
         part { name: "bg";
            scale: 1;
            description { state: "default" 0.0;
               min: 50 50;
               max: 50 50;
               fixed: 1 1;
               image.normal: "tw_btn_radio_normal_holo_dark.png";
            }
            description { state: "pressed" 0.0;
               inherit: "default" 0.0;
               image.normal: "tw_btn_radio_pressed_holo_dark.png";
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               image.normal: "tw_btn_radio_disabled_holo_dark.png";
            }
         }
         part { name: "radio";
            scale: 1;
            description { state: "default" 0.0;
               min: 50 50;
               max: 50 50;
               fixed: 1 1;
               visible: 0;
               image.normal: "tw_btn_radio_on_normal_holo_dark.png";
            }
            description { state: "on" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
            description { state: "pressed" 0.0;
               inherit: "on" 0.0;
               image.normal: "tw_btn_radio_on_pressed_holo_dark.png";
            }
            description { state: "disabled" 0.0;
               inherit: "on" 0.0;
               image.normal: "tw_btn_radio_on_disable_holo_dark.png";
            }
         }
         part { name: "event";
            scale: 1;
            type: RECT;
            description { state: "default" 0.0;
               color: 0 0 0 0;
            }
         }
      }
      programs {
         program { name: "click";
            signal: "mouse,clicked,1";
            source: "event";
            script {
               if (get_int(radio_disabled) == 1) return;
               emit("elm,action,radio,toggle", "");
               play_sample("touch_sound", 1.0);
            }
         }
         program { name: "unpressed";
            signal: "mouse,up,1";
            source: "event";
            script {
               if (get_int(radio_disabled) == 1) return;
               set_state(PART:"bg", "default", 0.0);
               if (get_int(radio_state) == 1)
                  set_state(PART:"radio", "on", 0.0);
               else
                  set_state(PART:"radio", "default", 0.0);
            }
         }
         program { name: "pressed";
            signal: "mouse,down,1";
            source: "event";
            script {
               if (get_int(radio_disabled) == 1) return;
               if (get_int(radio_state) == 1)
                  set_state(PART:"radio", "pressed", 0.0);
               else
                  set_state(PART:"radio", "default", 0.0);
               set_state(PART:"bg", "pressed", 0.0);
            }
         }
         program { name: "radio_on";
            signal: "elm,state,radio,on";
            source: "elm";
            script {
               if (get_int(radio_disabled) == 1)
                 {
                     set_state(PART:"bg", "disabled", 0.0);
                     set_state(PART:"radio", "disabled", 0.0);
                 }
               else
                 {
                     set_state(PART:"bg", "default", 0.0);
                     set_state(PART:"radio", "on", 0.0);
                 }
               set_int(radio_state, 1);
            }
         }
         program { name: "radio_off";
            signal: "elm,state,radio,off";
            source: "elm";
            script {
               if (get_int(radio_disabled) == 1)
                 set_state(PART:"bg", "disabled", 0.0);
               else
                 set_state(PART:"bg", "default", 0.0);
               set_state(PART:"radio", "default", 0.0);
               set_int(radio_state, 0);
            }
         }
         program { name: "disable";
            signal: "elm,state,disabled";
            source: "elm";
            script {
               if (get_int(radio_state) == 1)
                  set_state(PART:"radio", "disabled", 0.0);
               else
                  set_state(PART:"radio", "default", 0.0);
               set_state(PART:"bg", "disabled", 0.0);
               set_int(radio_disabled, 1);
            }
         }
         program { name: "enable";
            signal: "elm,state,enabled";
            source: "elm";
            script {
               if (get_int(radio_state) == 1)
                  set_state(PART:"radio", "on", 0.0);
               else
                  set_state(PART:"radio", "default", 0.0);
               set_state(PART:"bg", "default", 0.0);
               set_int(radio_disabled, 0);
            }
         }
      }
   }

group { name: "elm/radio/base/datetime/style1";
      alias: "elm/radio/base/datetime";
      alias: "elm/radio/base/datetime/style3";
      images {
         image: "tw_timepicker_num_bg_normal.png" COMP;
         image: "tw_timepicker_num_bg_focused.png" COMP;
      }
      script {
         public radio_state;
         public radio_disabled;
      }
      parts {
         part { name: "bg";
            scale: 1;
            description { state: "default" 0.0;
               image {
                  normal: "tw_timepicker_num_bg_normal.png";
                  border: 4 4 4 4;
                  border_scale: 1;
               }
            }
            description { state: "on" 0.0;
               inherit: "default" 0.0;
               image.normal: "tw_timepicker_num_bg_focused.png";
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
            }
         }
         part { name: "elm.text";
            type: TEXT;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               rel1.to: "bg";
               rel2.to: "bg";
               text {
                  font: "Tizen:style=Bold";
                  size: RADIO_TIME_PICKER_DAY_TEXT_SIZE;
                  align: 0.5 0.5;
                  text_class: "tizen";
                  fit: 1 1;
                  min: 1 1;
               }
               color: RADIO_DATETIME_TEXT_NORMAL_COLOR;
            }
            description { state: "on" 0.0;
               inherit: "default" 0.0;
               color: RADIO_DATETIME_TEXT_FOCUSED_COLOR;
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               color: RADIO_DATETIME_TEXT_DISABLED_COLOR;
            }
         }
      }
      programs {
         program { name: "click";
            signal: "mouse,clicked,1";
            source: "bg";
            script {
               if (get_int(radio_disabled) == 1) return;
               emit("elm,action,radio,toggle", "");
               play_sample("touch_sound", 1.0);
            }
         }
         program { name: "unpressed";
            signal: "mouse,up,1";
            source: "bg";
            script {
               if (get_int(radio_state) == 1 && get_int(radio_disabled) == 1) {
                  set_state(PART:"bg", "on", 0.0);
                  set_state(PART:"elm.text", "disabled", 0.0);
               } else if (get_int(radio_state) == 1 && get_int(radio_disabled) == 0) {
                  set_state(PART:"bg", "on", 0.0);
                  set_state(PART:"elm.text", "on", 0.0);
               } else if (get_int(radio_state) == 0 && get_int(radio_disabled) == 1) {
                  set_state(PART:"bg", "disabled", 0.0);
                  set_state(PART:"elm.text", "disabled", 0.0);
               } else if (get_int(radio_state) == 0 && get_int(radio_disabled) == 0) {
                  set_state(PART:"bg", "default", 0.0);
                  set_state(PART:"elm.text", "default", 0.0);
               }
            }
         }
         program { name: "pressed";
            signal: "mouse,down,1";
            source: "bg";
            script {
               if (get_int(radio_disabled) == 1) return;
               if (get_int(radio_state) == 1) {
                  set_state(PART:"bg", "on", 0.0);
                  set_state(PART:"elm.text", "on", 0.0);
               } else {
                  set_state(PART:"bg", "on", 0.0);
                  set_state(PART:"elm.text", "default", 0.0);
               }
            }
         }
         program { name: "radio_on";
            signal: "elm,state,radio,on";
            source: "elm";
            script {
               if (get_int(radio_disabled) == 1) {
                  set_state(PART:"bg", "on", 0.0);
                  set_state(PART:"elm.text", "default", 0.0);
               } else {
                  set_state(PART:"bg", "on", 0.0);
                  set_state(PART:"elm.text", "on", 0.0);
               }
               set_int(radio_state, 1);
            }
         }
         program { name: "radio_off";
            signal: "elm,state,radio,off";
            source: "elm";
            script {
               if (get_int(radio_disabled) == 1) {
                  set_state(PART:"bg", "disabled", 0.0);
                  set_state(PART:"elm.text", "disabled", 0.0);
               } else {
                  set_state(PART:"bg", "default", 0.0);
                  set_state(PART:"elm.text", "default", 0.0);
               }
               set_int(radio_state, 0);
            }
         }
         program { name: "disable";
            signal: "elm,state,disabled";
            source: "elm";
            script {
               if (get_int(radio_state) == 1) {
                  set_state(PART:"bg", "on", 0.0);
                  set_state(PART:"elm.text", "disabled", 0.0);
               } else {
                  set_state(PART:"bg", "default", 0.0);
                  set_state(PART:"elm.text", "disabled", 0.0);
               }
               set_int(radio_disabled, 1);
            }
         }
         program { name: "enable";
            signal: "elm,state,enabled";
            source: "elm";
            script {
               if (get_int(radio_state) == 1) {
                  set_state(PART:"bg", "on", 0.0);
                  set_state(PART:"elm.text", "on", 0.0);
               } else {
                  set_state(PART:"bg", "default", 0.0);
                  set_state(PART:"elm.text", "default", 0.0);
               }
               set_int(radio_disabled, 0);
            }
         }
      }
   }

group { name: "elm/radio/base/datetime/style2";
   inherit: "elm/radio/base/datetime/style1";
   parts {
      part { name: "elm.text";
         type: TEXT;
         mouse_events: 0;
         scale: 1;
         description { state: "default" 0.0;
            rel1.to: "bg";
            rel2.to: "bg";
            text {
               font: "Tizen:style=Bold";
               size: RADIO_TIME_PICKER_DATE_TEXT_SIZE;
               align: 0.5 0.5;
               text_class: "tizen";
            }
            color: RADIO_DATETIME_TEXT_NORMAL_COLOR;
         }
         description { state: "on" 0.0;
            inherit: "default" 0.0;
            color: RADIO_DATETIME_TEXT_FOCUSED_COLOR;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            color: RADIO_DATETIME_TEXT_DISABLED_COLOR;
         }
      }
   }
}

group { name: "elm/radio/base/PM";
      images {
         image: "tw_timepicker_time_bg.png" COMP;
      }
      styles{
        style { name: "am_pm_normal_style";
           base: "font=Tizen:style=Bold font_size="RADIO_TIME_PICKER_AM_PM_TEXT_SIZE" align=center color="RADIO_DATETIME_AM_PM_TEXT_NORMAL_COLOR" ellipsis=1.0 text_class=button";
           tag: "br" "\n";
           tag: "ps" "ps";
           tag: "tab" "\t";
        }
        style { name: "am_pm_seleted_style";
           base: "font=Tizen:style=Bold font_size="RADIO_TIME_PICKER_AM_PM_TEXT_SIZE" align=center color="RADIO_DATETIME_AM_PM_TEXT_SELECTED_COLOR" ellipsis=1.0 text_class=button";
           tag: "br" "\n";
           tag: "ps" "ps";
           tag: "tab" "\t";
        }
      }
      script {
         public radio_state;
         public radio_disabled;
      }
      parts {
         part { name: "bg";
            scale: 1;
            description { state: "default" 0.0;
               fixed: 1 1;
               min: RADIO_TIME_PICKER_AM_PM_MIN_SIZE;
               max: RADIO_TIME_PICKER_AM_PM_MIN_SIZE;
               visible: 0;
            }
            description { state: "on" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               image.normal: "tw_timepicker_time_bg.png";
            }
         }
         part { name: "elm.text";
            type: TEXTBLOCK;
            scale: 1;
            description { state: "default" 0.0;
               text {
                  min: 0 1;
                  style: "am_pm_normal_style";
               }
            }
            description { state: "on" 0.0;
               text {
                  style: "am_pm_seleted_style";
               }
            }
         }
      }
      programs {
         program { name: "click";
            signal: "mouse,clicked,1";
            source: "elm.text";
            script {
               if (get_int(radio_disabled) == 1) return;
               emit("elm,action,radio,toggle", "");
               play_sample("touch_sound", 1.0);
            }
         }
         program { name: "unpressed";
            signal: "mouse,up,1";
            source: "elm.text";
            script {
               if (get_int(radio_state) == 1 && get_int(radio_disabled) == 1) {
                  set_state(PART:"bg", "default", 0.0);
                  set_state(PART:"elm.text", "disabled", 0.0);
               } else if (get_int(radio_state) == 1 && get_int(radio_disabled) == 0) {
                  set_state(PART:"bg", "default", 0.0);
                  set_state(PART:"elm.text", "on", 0.0);
               } else if (get_int(radio_state) == 0 && get_int(radio_disabled) == 1) {
                  set_state(PART:"bg", "disabled", 0.0);
                  set_state(PART:"elm.text", "disabled", 0.0);
               } else if (get_int(radio_state) == 0 && get_int(radio_disabled) == 0) {
                  set_state(PART:"bg", "default", 0.0);
                  set_state(PART:"elm.text", "default", 0.0);
               }
            }
         }
         program { name: "pressed";
            signal: "mouse,down,1";
            source: "elm.text";
            script {
               if (get_int(radio_disabled) == 1) return;
               if (get_int(radio_state) == 1) {
                  set_state(PART:"bg", "on", 0.0);
                  set_state(PART:"elm.text", "default", 0.0);
               } else {
                  set_state(PART:"bg", "on", 0.0);
                  set_state(PART:"elm.text", "on", 0.0);
               }
            }
         }
         program { name: "radio_on";
            signal: "elm,state,radio,on";
            source: "elm";
            script {
               if (get_int(radio_disabled) == 1) {
                  set_state(PART:"elm.text", "default", 0.0);
               } else {
                  set_state(PART:"elm.text", "on", 0.0);
               }
               set_int(radio_state, 1);
            }
         }
         program { name: "radio_off";
            signal: "elm,state,radio,off";
            source: "elm";
            script {
               if (get_int(radio_disabled) == 1) {
                  set_state(PART:"elm.text", "disabled", 0.0);
               } else {
                  set_state(PART:"elm.text", "default", 0.0);
               }
               set_int(radio_state, 0);
            }
         }
         program { name: "disable";
            signal: "elm,state,disabled";
            source: "elm";
            script {
               if (get_int(radio_state) == 1) {
                  set_state(PART:"bg", "on", 0.0);
                  set_state(PART:"elm.text", "disabled", 0.0);
               } else {
                  set_state(PART:"bg", "default", 0.0);
                  set_state(PART:"elm.text", "disabled", 0.0);
               }
               set_int(radio_disabled, 1);
            }
         }
         program { name: "enable";
            signal: "elm,state,enabled";
            source: "elm";
            script {
               if (get_int(radio_state) == 1) {
                  set_state(PART:"bg", "on", 0.0);
                  set_state(PART:"elm.text", "on", 0.0);
               } else {
                  set_state(PART:"bg", "default", 0.0);
                  set_state(PART:"elm.text", "default", 0.0);
               }
               set_int(radio_disabled, 0);
            }
         }
      }
   }

group { name: "elm/radio/base/AM";
   inherit: "elm/radio/base/PM";
}


// List Radio Style

group { name: "elm/radio/base/list";
      images {
         image: "tw_btn_radio_normal_holo_dark.png" COMP;
         image: "tw_btn_radio_pressed_holo_dark.png" COMP;
         image: "tw_btn_radio_disabled_holo_dark.png" COMP;
         image: "tw_btn_radio_on_normal_holo_dark.png" COMP;
         image: "tw_btn_radio_on_pressed_holo_dark.png" COMP;
         image: "tw_btn_radio_on_disable_holo_dark.png" COMP;
      }
      script {
         public radio_state;
         public radio_disabled;
      }
      parts {
         part { name: "bg";
            scale: 1;
            description { state: "default" 0.0;
               min: 50 50;
               max: 50 50;
               fixed: 1 1;
               image.normal: "tw_btn_radio_normal_holo_dark.png";
            }
            description { state: "pressed" 0.0;
               inherit: "default" 0.0;
               image.normal: "tw_btn_radio_pressed_holo_dark.png";
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               image.normal: "tw_btn_radio_disabled_holo_dark.png";
            }
         }
         part { name: "radio";
            scale: 1;
            description { state: "default" 0.0;
               min: 50 50;
               max: 50 50;
               fixed: 1 1;
               visible: 0;
               image.normal: "tw_btn_radio_on_normal_holo_dark.png";
            }
            description { state: "on" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
            description { state: "pressed" 0.0;
               inherit: "on" 0.0;
               image.normal: "tw_btn_radio_on_pressed_holo_dark.png";
            }
            description { state: "disabled" 0.0;
               inherit: "on" 0.0;
               image.normal: "tw_btn_radio_on_disable_holo_dark.png";
            }
         }
         part { name: "event";
            scale: 1;
            type: RECT;
            description { state: "default" 0.0;
               color: 0 0 0 0;
            }
         }
      }
      programs {
         program { name: "unpressed";
            signal: "mouse,up,1";
            source: "event";
            script {
               if (get_int(radio_disabled) == 1) return;
               set_state(PART:"bg", "default", 0.0);
               if (get_int(radio_state) == 1)
                  set_state(PART:"radio", "on", 0.0);
               else
                  set_state(PART:"radio", "default", 0.0);
            }
         }
         program { name: "pressed";
            signal: "mouse,down,1";
            source: "event";
            script {
               if (get_int(radio_disabled) == 1) return;
               if (get_int(radio_state) == 1)
                  set_state(PART:"radio", "pressed", 0.0);
               else
                  set_state(PART:"radio", "default", 0.0);
               set_state(PART:"bg", "pressed", 0.0);
            }
         }
         program { name: "radio_on";
            signal: "elm,state,radio,on";
            source: "elm";
            script {
               if (get_int(radio_disabled) == 1)
                 {
                     set_state(PART:"bg", "disabled", 0.0);
                     set_state(PART:"radio", "disabled", 0.0);
                 }
               else
                 {
                     set_state(PART:"bg", "default", 0.0);
                     set_state(PART:"radio", "on", 0.0);
                 }
               set_int(radio_state, 1);
            }
         }
         program { name: "radio_off";
            signal: "elm,state,radio,off";
            source: "elm";
            script {
               if (get_int(radio_disabled) == 1)
                 set_state(PART:"bg", "disabled", 0.0);
               else
                 set_state(PART:"bg", "default", 0.0);
               set_state(PART:"radio", "default", 0.0);
               set_int(radio_state, 0);
            }
         }
         program { name: "disable";
            signal: "elm,state,disabled";
            source: "elm";
            script {
               if (get_int(radio_state) == 1)
                  set_state(PART:"radio", "disabled", 0.0);
               else
                  set_state(PART:"radio", "default", 0.0);
               set_state(PART:"bg", "disabled", 0.0);
               set_int(radio_disabled, 1);
            }
         }
         program { name: "enable";
            signal: "elm,state,enabled";
            source: "elm";
            script {
               if (get_int(radio_state) == 1)
                  set_state(PART:"radio", "on", 0.0);
               else
                  set_state(PART:"radio", "default", 0.0);
               set_state(PART:"bg", "default", 0.0);
               set_int(radio_disabled, 0);
            }
         }
      }
   }
