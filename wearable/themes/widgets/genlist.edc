/*
 * Copyright (c) 2010 Samsung Electronics Co., Ltd All Rights Reserved
 *
 * BSD 2-Clause License (http://www.opensource.org/licenses/bsd-license.php)
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 *   1. Redistributions of source code must retain the above copyright notice, this
 *      list of conditions and the following disclaimer.
 *   2. Redistributions in binary form must reproduce the above copyright notice,
 *      this list of conditions and the following disclaimer in the documentation
 *      and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
 * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/*
 * vim:ts=3
*/
#include "genlist_macro.edc"

group { name: "elm/genlist/item/default/default";
   alias: "elm/list/item/default";
   alias: "elm/list/item_odd/default";
   alias: "elm/list/item_compress/default";
   alias: "elm/list/item_compress_odd/default";

   PROLOG_LIST
   data.item: "texts" "elm.text";
   data.item: "contents" "elm.swallow.icon elm.swallow.end";

   parts {
      PART_LIST_BG
      PART_LIST_PADDINGS(
         LIST_PADDING_LEFT_SIZE, LIST_PADDING_RIGHT_SIZE,
         LIST_1LINE_PADDING_TOP_SIZE, LIST_1LINE_PADDING_BOTTOM_SIZE
      )
      PART_LIST_BOTTOMLINE
      PART(SWALLOW, "elm.swallow.icon",
         DESC_L("elm.padding.left",)
      )
      PART(TEXT, "elm.text",
         DESC_LRTB("elm.swallow.icon", "elm.swallow.end", "elm.padding.top", "elm.padding.bottom",
            min: 0 0;
            text {
               min: 0 1;
               font: "Tizen:style=Regular";
               size: LIST_TEXT_MAIN_SIZE;
               text_class: "list_item";
               align: 0 0.5;
            }
            color: 255 255 255 255;
         )
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            color: 51 51 51 255;
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
         }
      )
      PART(SWALLOW, "elm.swallow.end",
         DESC_RTB("elm.padding.right", "elm.padding.top", "elm.padding.bottom",)
      )
   }
   PROGRAMS_LIST( target: "elm.text"; target: "elm.swallow.icon"; target: "elm.swallow.end"; )
}

group { name: "elm/genlist/item/groupindex/default";
   PROLOG_LIST
   data.item: "texts" "elm.text elm.text.1";
   data.item: "contents" "elm.icon";

   parts {
      PART(RECT, "bg",
         description { state: "default" 0.0;
            color: LIST_GROUPINDEX_BG_NORMAL_COLOR;
         }
      )
      PART_LIST_PADDINGS(
         LIST_PADDING_LEFT_SIZE, LIST_PADDING_R_ICON_RIGHT_SIZE,
         LIST_GROUPINDEX_PADDING_TOP_SIZE, LIST_GROUPINDEX_PADDING_BOTTOM_SIZE
      )
      PART(TEXTBLOCK, "elm.text",
         DESC_LRTB("elm.padding.left", "elm.text.padding", "elm.padding.top", "elm.padding.bottom",
            min: 0 LIST_GROUPINDEX_HEIGHT;
            PARAM_TEXT("list_text_groupindex_normal",)
         )
      )
      PART(SPACER, "elm.text.padding",
         DESC_R("elm.text.1", min: 5 0; max: 5 -1; )
      )
      PART(TEXTBLOCK, "elm.text.1",
         DESC_RTB("elm.icon.padding",  "elm.padding.top", "elm.padding.bottom",
            min: 0 LIST_GROUPINDEX_HEIGHT;
            align: 1.0 0.5;
            rel1 {
               to: "bg";
               relative: 0.5 0;
            }
            PARAM_TEXT("list_text_groupindex_sub_normal", max: 1 0;)
         )
      )
      PART(SPACER, "elm.icon.padding",
         DESC_R("elm.icon", min: 2 0; max: 2 -1;)
      )
      PART(SWALLOW, "elm.icon",
         DESC_RTB("elm.padding.right", "elm.padding.top", "elm.padding.bottom",
            min: 0 LIST_GROUPINDEX_HEIGHT;
         )
      )
   }
}

group { name: "elm/genlist/item/1text/default";
   PROLOG_LIST

   data.item: "texts" "elm.text";

   parts {
      PART_LIST_BG
      PART_LIST_PADDINGS(
         LIST_PADDING_LEFT_SIZE, LIST_PADDING_RIGHT_SIZE,
         LIST_1LINE_PADDING_TOP_SIZE, LIST_1LINE_PADDING_BOTTOM_SIZE
      )
      PART_LIST_BOTTOMLINE
      PART(TEXTBLOCK, "elm.text",
         DESC_LRTB("elm.padding.left", "elm.padding.right", "elm.padding.top", "elm.padding.bottom",
            min: 0 0;
            PARAM_TEXT("list_text_main_normal",)
         ) DESCRIPIONS_TEXT("list_text_main_dim", "list_text_main_normal")
      )
   }
   PROGRAMS_LIST( target: "elm.text"; )
}

group { name: "elm/genlist/item/1text/swipe/default";
   inherit: "elm/genlist/item/1text/default";
   SCRIPTS_LIST_SWIPE
   IMAGES_LIST_SWIPE

   data.item: "texts" "elm.text elm.text.swipe.left elm.text.swipe.right";
   data.item: "contents" "elm.icon.swipe.left elm.icon.swipe.right";

   parts {
      PARTS_LIST_SWIPE
   }
   PROGRAMS_LIST_SWIPE
}

group { name: "elm/genlist/item/1text/swipe_left/default";
   inherit: "elm/genlist/item/1text/swipe/default";

   data.item: "texts" "elm.text elm.text.swipe.left";
   data.item: "contents" "elm.icon.swipe.left";

   parts {
      PARTS_LIST_SWIPE_LEFT
   }
   PROGRAMS_LIST_SWIPE_LEFT
}

group { name: "elm/genlist/item/1text/swipe_right/default";
   inherit: "elm/genlist/item/1text/swipe/default";

   data.item: "texts" "elm.text elm.text.swipe.right";
   data.item: "contents" "elm.icon.swipe.right";

   parts {
      PARTS_LIST_SWIPE_RIGHT
   }
   PROGRAMS_LIST_SWIPE_RIGHT
}

group { name: "elm/genlist/item/2text/default";
   PROLOG_LIST
   data.item: "texts" "elm.text.1 elm.text.2 elm.text.noti";
   data.item: "contents" "elm.swallow.colorbar elm.icon.noti";

   parts {
      PART_LIST_BG
      PART_LIST_PADDINGS(
         LIST_PADDING_LEFT_SIZE, LIST_PADDING_RIGHT_SIZE,
         LIST_2LINE_PADDING_TOP_SIZE, LIST_2LINE_PADDING_BOTTOM_SIZE
      )
      PART_LIST_BOTTOMLINE
      PART(TEXTBLOCK, "elm.text.1",
         DESC_LRTB("elm.padding.left", "elm.icon.noti", "elm.padding.top", "elm.text.2",
            min: 0 0;
            PARAM_TEXT("list_text_main_normal",)
         ) DESCRIPIONS_TEXT("list_text_main_dim", "list_text_main_normal")
      )
      PART(SWALLOW, "elm.icon.noti",
         DESC_RTB("elm.padding.right", "elm.padding.top", "elm.text.2",
            min: 0 LIST_NOTI_NUMBER_ICON_HEIGHT;
         )
      )
      PART(TEXTBLOCK, "elm.text.noti",
         mouse_events: 0;
         DESC_TO("elm.icon.noti",
            min: 0 LIST_NOTI_NUMBER_ICON_HEIGHT;
            PARAM_TEXT("list_noti_style", min: 1 1;)
         )
      )
      PART(TEXTBLOCK, "elm.text.2",
         DESC_LRB("elm.padding.left", "elm.padding.right", "elm.padding.bottom",
            min: 0 0;
            PARAM_TEXT("list_text_sub_normal",)
         ) DESCRIPIONS_TEXT("list_text_sub_dim", "list_text_sub_normal")
      )
   }
   PROGRAMS_LIST( target: "elm.text.1"; target: "elm.text.2";
                 target: "elm.text.noti"; target: "elm.icon.noti";)
}

group { name: "elm/genlist/item/2text/swipe/default";
   inherit: "elm/genlist/item/2text/default";
   SCRIPTS_LIST_SWIPE
   IMAGES_LIST_SWIPE

   data.item: "texts" "elm.text.1 elm.text.2 elm.text.noti elm.text.swipe.left elm.text.swipe.right";
   data.item: "contents" "elm.swallow.colorbar elm.icon.noti elm.icon.swipe.left elm.icon.swipe.right";

   parts {
      PARTS_LIST_SWIPE
   }
   PROGRAMS_LIST_SWIPE
}

group { name: "elm/genlist/item/2text/swipe_left/default";
   inherit: "elm/genlist/item/2text/swipe/default";

   data.item: "texts" "elm.text.1 elm.text.2 elm.text.noti elm.text.swipe.left";
   data.item: "contents" "elm.swallow.colorbar elm.icon.noti elm.icon.swipe.left";

   parts {
      PARTS_LIST_SWIPE_LEFT
   }
   PROGRAMS_LIST_SWIPE_LEFT
}

group { name: "elm/genlist/item/2text/swipe_right/default";
   inherit: "elm/genlist/item/2text/swipe/default";

   data.item: "texts" "elm.text.1 elm.text.2 elm.text.noti elm.text.swipe.right";
   data.item: "contents" "elm.swallow.colorbar elm.icon.noti elm.icon.swipe.right";

   parts {
      PARTS_LIST_SWIPE_RIGHT
   }
   PROGRAMS_LIST_SWIPE_RIGHT
}

group { name: "elm/genlist/item/2text.1/default";
   PROLOG_LIST
   data.item: "texts" "elm.text.1 elm.text.2";
   data.item: "contents" "elm.swallow.colorbar";

   parts {
      PART_LIST_BG
      PART_LIST_PADDINGS(
         LIST_PADDING_LEFT_SIZE, LIST_PADDING_RIGHT_SIZE,
         LIST_2LINE_PADDING_TOP_SIZE, LIST_2LINE_PADDING_BOTTOM_SIZE
      )
      PART_LIST_BOTTOMLINE
      PART(TEXTBLOCK, "elm.text.2",
         DESC_LRT("elm.padding.left", "elm.padding.right", "elm.padding.top",
            min: 0 0;
            PARAM_TEXT("list_text_sub_normal",)
         ) DESCRIPIONS_TEXT("list_text_sub_dim", "list_text_sub_normal")
      )
      PART(TEXTBLOCK, "elm.text.1",
         DESC_LRTB("elm.padding.left", "elm.padding.right","elm.text.2", "elm.padding.bottom",
            min: 0 0;
            PARAM_TEXT("list_text_main_normal",)
         ) DESCRIPIONS_TEXT("list_text_main_dim", "list_text_main_normal")
      )
   }
   PROGRAMS_LIST( target: "elm.text.1"; target: "elm.text.2"; )
}

group { name: "elm/genlist/item/2text.1/swipe/default";
   inherit: "elm/genlist/item/2text.1/default";
   SCRIPTS_LIST_SWIPE
   IMAGES_LIST_SWIPE

   data.item: "texts" "elm.text.1 elm.text.2 elm.text.swipe.left elm.text.swipe.right";
   data.item: "contents" "elm.icon.swipe.left elm.icon.swipe.right elm.swallow.colorbar";

   parts {
      PARTS_LIST_SWIPE
   }
   PROGRAMS_LIST_SWIPE
}

group { name: "elm/genlist/item/2text.1/swipe_left/default";
   inherit: "elm/genlist/item/2text.1/swipe/default";

   data.item: "texts" "elm.text.1 elm.text.2 elm.text.swipe.left";
   data.item: "contents" "elm.icon.swipe.left elm.swallow.colorbar";

   parts {
      PARTS_LIST_SWIPE_LEFT
   }
   PROGRAMS_LIST_SWIPE_LEFT
}

group { name: "elm/genlist/item/2text.1/swipe_right/default";
   inherit: "elm/genlist/item/2text.1/swipe/default";

   data.item: "texts" "elm.text.1 elm.text.2 elm.text.swipe.right";
   data.item: "contents" "elm.icon.swipe.right elm.swallow.colorbar";

   parts {
      PARTS_LIST_SWIPE_RIGHT
   }
   PROGRAMS_LIST_SWIPE_RIGHT
}

group { name: "elm/genlist/item/1icon/default";
   PROLOG_LIST
   data.item: "contents" "elm.icon";

   parts {
      PART_LIST_BG
      PART_LIST_PADDINGS(
         LIST_PADDING_LEFT_SIZE, LIST_PADDING_RIGHT_SIZE,
         2, 2 // FIXME: arbitrary value to prevent overlap with bottom lines
      )
      PART_LIST_BOTTOMLINE
      PART(SWALLOW, "elm.icon",
         DESC_LRTB(
            "elm.padding.left", "elm.padding.right",
            "elm.padding.top", "elm.padding.bottom",
            min: 0 ( LIST_1LINE_HEIGHT - (2 + 2));
         )
      )
   }
   PROGRAMS_LIST( target: "elm.icon"; )
}

group { name: "elm/genlist/item/1icon/with_no_line/default";
   inherit: "elm/genlist/item/1icon/default";

   parts {
      PART_LIST_BOTTOMLINE_OFF
   }
}

group { name: "elm/genlist/item/1icon/no_padding/default";
   inherit: "elm/genlist/item/1icon/default";

   parts {
      PART_LIST_PADDINGS(0, 0, 0, 0)
      part { name: "elm.icon";
         description { state: "default" 0.0;
            min: 0 LIST_1LINE_HEIGHT;
         }
      }
   }
}

group { name: "elm/genlist/item/1icon/no_padding_line/default";
   inherit: "elm/genlist/item/1icon/default";

   parts {
      PART_LIST_PADDINGS(0, 0, 0, 0)
      PART_LIST_BOTTOMLINE_OFF
      part { name: "elm.icon";
         description { state: "default" 0.0;
            min: 0 LIST_1LINE_HEIGHT;
         }
      }
   }
}

group { name: "elm/genlist/item/1icon/no_line_transparent/default";
   inherit: "elm/genlist/item/1icon/default";

   parts {
      part { name: "bg";
         clip_to: "bg_clip";
         type: RECT;
         description { state: "default" 0.0;
            color: 0 0 0 0;
         }
      }
      PART_LIST_PADDINGS(0, 0, 8, 8)
      PART_LIST_BOTTOMLINE_OFF
      part { name: "elm.icon";
         description { state: "default" 0.0;
            min: 0 LIST_1LINE_HEIGHT;
         }
      }
   }
}

group { name: "elm/genlist/item/1text.1icon/default";
   PROLOG_LIST
   data.item: "texts" "elm.text";
   data.item: "contents" "elm.icon";

   parts {
      PART_LIST_BG
      PART_LIST_PADDINGS(
         LIST_PADDING_LEFT_SIZE, LIST_PADDING_RIGHT_SIZE,
         LIST_1LINE_PADDING_TOP_SIZE, LIST_1LINE_PADDING_BOTTOM_SIZE
      )
      PART_LIST_BOTTOMLINE
      PART(SWALLOW, "elm.icon",
         DESC_L("elm.padding.left",
           fixed: 1 1;
         )
      )
      PART(SPACER, "elm.padding.icon.right",
         DESC_L("elm.icon", min: LIST_PADDING_DEFAULT_SIZE 0; max: LIST_PADDING_DEFAULT_SIZE -1; )
      )
      PART(TEXTBLOCK, "elm.text",
         DESC_LRTB("elm.padding.icon.right", "elm.padding.right", "elm.padding.top", "elm.padding.bottom",
            PARAM_TEXT("list_text_main_normal",)
         ) DESCRIPIONS_TEXT("list_text_main_dim", "list_text_main_normal")
      )
   }
   PROGRAMS_LIST( target: "elm.text"; target: "elm.icon"; )
}

group { name: "elm/genlist/item/1text.1icon.1/default";
   PROLOG_LIST
   data.item: "texts" "elm.text";
   data.item: "contents" "elm.icon";

   parts {
      PART_LIST_BG
      PART_LIST_PADDINGS(
         LIST_PADDING_LEFT_SIZE, LIST_PADDING_R_ICON_RIGHT_SIZE,
         LIST_1LINE_PADDING_TOP_SIZE, LIST_1LINE_PADDING_BOTTOM_SIZE
      )
      PART_LIST_BOTTOMLINE
      PART(TEXTBLOCK, "elm.text",
         DESC_LRTB("elm.padding.left", "elm.padding.icon.left", "elm.padding.top", "elm.padding.bottom",
            PARAM_TEXT("list_text_main_normal",)
         ) DESCRIPIONS_TEXT("list_text_main_dim", "list_text_main_normal")
      )
      PART(SPACER, "elm.padding.icon.left",
         DESC_R("elm.icon", min: LIST_PADDING_R_ICON_DEFAULT_SIZE 0; max: LIST_PADDING_R_ICON_DEFAULT_SIZE -1; )
      )
      PART(SWALLOW, "elm.icon", DESC_R("elm.padding.right", ) )
   }
   PROGRAMS_LIST( target: "elm.text"; target: "elm.icon"; )
}

group { name: "elm/genlist/item/1text.1icon.divider/default";
   PROLOG_LIST
   data.item: "texts" "elm.text.1";
   data.item: "contents" "elm.swallow.colorbar elm.icon";

   parts {
      PART_LIST_BG
      PART_LIST_PADDINGS(
         LIST_PADDING_LEFT_SIZE, LIST_PADDING_R_ICON_RIGHT_SIZE,
         LIST_1LINE_PADDING_TOP_SIZE, LIST_1LINE_PADDING_BOTTOM_SIZE
      )
      PART_LIST_BOTTOMLINE
      PART(TEXTBLOCK, "elm.text.1",
         DESC_LRTB("elm.padding.left", "elm.padding.divider.left", "elm.padding.top", "elm.padding.bottom",
            PARAM_TEXT("list_text_main_normal",)
         ) DESCRIPIONS_TEXT("list_text_main_dim", "list_text_main_normal")
      )
      PART(SPACER, "elm.padding.divider.left",
         DESC_R("elm.divider",
            min: LIST_DIVIDER_PADDING_SIZE 0;  max: LIST_DIVIDER_PADDING_SIZE -1;
         )
      )
      PART(SWALLOW, "elm.icon",
         DESC_FROM_R(
            min: BUTTON_DIVIDER_BTN_SIZE 0;
            max: BUTTON_DIVIDER_BTN_SIZE -1;
            rel1.to: "bg";
            rel2.to: "bg";
         )
      )
      PART(RECT, "elm.divider",
         DESC_R("elm.icon",
            align: 0 0.5;
            min: 1 LIST_DIVIDER_HEIGHT;
            max: 1 LIST_DIVIDER_HEIGHT;
            color: LIST_DIVIDER_COLOR;
         )
      )

   }
   PROGRAMS_LIST( target: "elm.text.1";
      target: "elm.icon"; )
}

group { name: "elm/genlist/item/1text.1icon.divider/sweep/default";
   inherit: "elm/genlist/item/1text.1icon.divider/default";
   data.item: "texts" "elm.text.1 elm.text.sweep";
   data.item: "contents" "elm.icon elm.icon.sweep";
   SCRIPTS_LIST_SWEEP
   parts {
      PARTS_LIST_SWEEP
   }
   programs {
      PROGRAMS_LIST_SWEEP
   }
}

group { name: "elm/genlist/item/2text.1icon/default";
   PROLOG_LIST
   data.item: "texts" "elm.text.1 elm.text.2";
   data.item: "contents" "elm.icon";

   parts {
      PART_LIST_BG
      PART_LIST_PADDINGS(
         LIST_PADDING_LEFT_SIZE, LIST_PADDING_RIGHT_SIZE,
         LIST_2LINE_PADDING_TOP_SIZE, LIST_2LINE_PADDING_BOTTOM_SIZE
      )
      PART_LIST_BOTTOMLINE

      PART(SWALLOW, "elm.icon",
         DESC_L("elm.padding.left",)
      )
      PART(SPACER, "elm.padding.icon.right",
         DESC_L("elm.icon", min: LIST_PADDING_DEFAULT_SIZE 0; max: LIST_PADDING_DEFAULT_SIZE -1; )
      )
      PART(TEXTBLOCK, "elm.text.1",
         DESC_LRTB("elm.padding.icon.right", "elm.padding.right", "elm.padding.top", "elm.text.2",
            min: 0 0;
            PARAM_TEXT("list_text_main_normal",)
         ) DESCRIPIONS_TEXT("list_text_main_dim", "list_text_main_normal")
      )
      PART(TEXTBLOCK, "elm.text.2",
         DESC_LRB( "elm.padding.icon.right", "elm.padding.right", "elm.padding.bottom",
            min: 0 0;
            PARAM_TEXT("list_text_sub_normal",)
         ) DESCRIPIONS_TEXT("list_text_sub_dim", "list_text_sub_normal")
      )

   }
   PROGRAMS_LIST( target: "elm.text.1"; target: "elm.text.2";
      target: "elm.icon"; )
}

group { name: "elm/genlist/item/2text.1icon/swipe/default";
   inherit: "elm/genlist/item/2text.1icon/default";
   SCRIPTS_LIST_SWIPE
   IMAGES_LIST_SWIPE

   data.item: "texts" "elm.text.1 elm.text.2 elm.text.swipe.left elm.text.swipe.right";
   data.item: "contents" "elm.icon elm.icon.swipe.left elm.icon.swipe.right";

   parts {
      PARTS_LIST_SWIPE
   }
   PROGRAMS_LIST_SWIPE
}

group { name: "elm/genlist/item/2text.1icon/swipe_left/default";
   inherit: "elm/genlist/item/2text.1icon/swipe/default";

   data.item: "texts" "elm.text.1 elm.text.2 elm.text.swipe.left";
   data.item: "contents" "elm.icon elm.icon.swipe.left";

   parts {
      PARTS_LIST_SWIPE_LEFT
   }
   PROGRAMS_LIST_SWIPE_LEFT
}

group { name: "elm/genlist/item/2text.1icon/swipe_right/default";
   inherit: "elm/genlist/item/2text.1icon/swipe/default";

   data.item: "texts" "elm.text.1 elm.text.2 elm.text.swipe.right";
   data.item: "contents" "elm.icon elm.icon.swipe.right";

   parts {
      PARTS_LIST_SWIPE_RIGHT
   }
   PROGRAMS_LIST_SWIPE_RIGHT
}

group { name: "elm/genlist/item/2text.1icon.1/default";
   PROLOG_LIST
   data.item: "texts" "elm.text.1 elm.text.2";
   data.item: "contents" "elm.swallow.colorbar elm.icon";

   parts {
      PART_LIST_BG
      PART_LIST_PADDINGS(
         LIST_PADDING_LEFT_SIZE, LIST_PADDING_R_ICON_RIGHT_SIZE,
         LIST_2LINE_PADDING_TOP_SIZE, LIST_2LINE_PADDING_BOTTOM_SIZE
      )
      PART_LIST_BOTTOMLINE
      PART(TEXTBLOCK, "elm.text.1",
         DESC_LRTB("elm.padding.left", "elm.padding.icon.left", "elm.padding.top", "elm.text.2",
            min: 0 0;
            PARAM_TEXT("list_text_main_normal",)
         ) DESCRIPIONS_TEXT("list_text_main_dim", "list_text_main_normal")
      )
      PART(TEXTBLOCK, "elm.text.2",
         DESC_LRB("elm.padding.left", "elm.padding.icon.left", "elm.padding.bottom",
            min: 0 0;
            PARAM_TEXT("list_text_sub_normal",)
         ) DESCRIPIONS_TEXT("list_text_sub_dim", "list_text_sub_normal")
      )
      PART(SPACER, "elm.padding.icon.left",
         DESC_R("elm.icon",
            min: LIST_PADDING_R_ICON_DEFAULT_SIZE 0;  max: LIST_PADDING_R_ICON_DEFAULT_SIZE -1;
         )
       )
      PART(SWALLOW, "elm.icon", DESC_R("elm.padding.right", ) )
   }
   PROGRAMS_LIST( target: "elm.text.1"; target: "elm.text.2";
      target: "elm.icon"; )
}

group { name: "elm/genlist/item/2text.1icon.divider/default";
   PROLOG_LIST
   data.item: "texts" "elm.text.1 elm.text.2";
   data.item: "contents" "elm.swallow.colorbar elm.icon";

   parts {
      PART_LIST_BG
      PART_LIST_PADDINGS(
         LIST_PADDING_LEFT_SIZE, LIST_PADDING_R_ICON_RIGHT_SIZE,
         LIST_2LINE_PADDING_TOP_SIZE, LIST_2LINE_PADDING_BOTTOM_SIZE
      )
      PART_LIST_BOTTOMLINE
      PART(TEXTBLOCK, "elm.text.1",
         DESC_LRTB("elm.padding.left", "elm.padding.divider.left", "elm.padding.top", "elm.text.2",
            min: 0 0;
            PARAM_TEXT("list_text_main_normal",)
         ) DESCRIPIONS_TEXT("list_text_main_dim", "list_text_main_normal")
      )
      PART(TEXTBLOCK, "elm.text.2",
         DESC_LRB("elm.padding.left", "elm.padding.divider.left", "elm.padding.bottom",
            min: 0 0;
            PARAM_TEXT("list_text_sub_normal",)
         ) DESCRIPIONS_TEXT("list_text_sub_dim", "list_text_sub_normal")
      )
      PART(SPACER, "elm.padding.divider.left",
         DESC_R("elm.divider",
            min: LIST_DIVIDER_PADDING_SIZE 0;  max: LIST_DIVIDER_PADDING_SIZE -1;
         )
      )
      PART(SWALLOW, "elm.icon",
         DESC_FROM_R(
            min: BUTTON_DIVIDER_BTN_SIZE 0;
            max: BUTTON_DIVIDER_BTN_SIZE -1;
            rel1.to: "bg";
            rel2.to: "bg";
         )
      )
      PART(RECT, "elm.divider",
         DESC_R("elm.icon",
            align: 0 0.5;
            min: 1 LIST_DIVIDER_HEIGHT;
            max: 1 LIST_DIVIDER_HEIGHT;
            color: LIST_DIVIDER_COLOR;
         )
      )

   }
   PROGRAMS_LIST( target: "elm.text.1"; target: "elm.text.2";
      target: "elm.icon"; )
}

group { name: "elm/genlist/item/multiline/2text/default";
   PROLOG_LIST
   data.item: "texts" "elm.text.1 elm.text.2";

   parts {
      PART_LIST_BG
      PART_LIST_PADDINGS(
         LIST_PADDING_LEFT_SIZE, LIST_PADDING_RIGHT_SIZE,
         LIST_2LINE_PADDING_TOP_SIZE, LIST_2LINE_PADDING_BOTTOM_SIZE
      )
      PART_LIST_BOTTOMLINE

      PART(TEXTBLOCK, "elm.text.1",
         DESC_LRT("elm.padding.left", "elm.padding.right", "elm.padding.top",
            min: 0 0;
            PARAM_TEXT("list_text_main_normal",)
         ) DESCRIPIONS_TEXT("list_text_main_dim", "list_text_main_normal")
      )
      PART(SPACER, "elm.padding.text1.bottom",
         DESC_T("elm.text.1",
            min: 0 4;  max: -1 4;
         )
       )
      PART(TEXTBLOCK, "elm.text.2",
         DESC_LRTB("elm.padding.left", "elm.padding.right", "elm.padding.text1.bottom", "elm.padding.bottom",
            min: 0 0;
            PARAM_TEXT("list_text_sub_multiline_normal",)
         )
         DESCRIPIONS_TEXT("list_text_sub_multiline_dim", "list_text_sub_multiline_selected")
      )
   }
   PROGRAMS_LIST( target: "elm.text.1"; target: "elm.text.2"; )
}

group { name: "elm/genlist/item/multiline/1text/default";
   alias: "elm/layout/multiline/1text/default";
   PROLOG_LIST
   data.item: "texts" "elm.text";

   parts {
      PART_LIST_BG
      PART_LIST_PADDINGS(
         LIST_PADDING_LEFT_SIZE, LIST_PADDING_RIGHT_SIZE,
         LIST_PADDING_DEFAULT_SIZE, LIST_PADDING_DEFAULT_SIZE
      )
      PART(TEXTBLOCK, "elm.text",
         DESC_LRTB("elm.padding.left", "elm.padding.right", "elm.padding.top", "elm.padding.bottom",
            min: 0 LIST_MULTILINE_HEIGHT;
            PARAM_TEXT("list_text_multiline",)
         )
      )
   }
   PROGRAM_LIST_DEFAULT( target: "elm.text"; )
}

group { name: "elm/genlist/item/email/default";
   PROLOG_LIST
   data.item: "texts" "elm.text.1 elm.text.2 elm.text.noti";
   data.item: "contents" "elm.swallow.colorbar elm.icon";

   parts {
      PART_LIST_BG
      PART_LIST_PADDINGS(
         LIST_PADDING_LEFT_SIZE, LIST_PADDING_RIGHT_SIZE,
         LIST_2LINE_PADDING_TOP_SIZE, LIST_2LINE_PADDING_BOTTOM_SIZE
      )
      PART_LIST_BOTTOMLINE
      PART(TEXTBLOCK, "elm.text.1",
         DESC_LRTB("elm.padding.left", "elm.icon", "elm.padding.top", "elm.text.2",
            min: 0 0;
            PARAM_TEXT("list_text_main_normal",)
         ) DESCRIPIONS_TEXT("list_text_main_dim", "list_text_main_normal")
      )
      PART(SWALLOW, "elm.icon",
         DESC_RTB("elm.padding.right", "elm.padding.top", "elm.text.2",
            min: 0 LIST_NOTI_NUMBER_ICON_HEIGHT;
         )
      )
      PART(TEXTBLOCK, "elm.text.noti",
         mouse_events: 0;
         DESC_TO("elm.icon",
            min: 0 LIST_NOTI_NUMBER_ICON_HEIGHT;
            PARAM_TEXT("list_noti_style", min: 1 1;)
         )
      )
      PART(TEXTBLOCK, "elm.text.2",
         DESC_LRB("elm.padding.left", "elm.padding.right", "elm.padding.bottom",
            min: 0 0;
            PARAM_TEXT("list_text_sub_normal",)
         ) DESCRIPIONS_TEXT("list_text_sub_dim", "list_text_sub_normal")
      )
   }
   PROGRAMS_LIST( target: "elm.text.1"; target: "elm.text.2";
                 target: "elm.text.noti"; target: "elm.icon";)


}

group { name: "elm/genlist/item/email/sweep/default";
   inherit: "elm/genlist/item/email/default";
   data.item: "texts" "elm.text.1 elm.text.2 elm.text.noti elm.text.sweep";
   data.item: "contents" "elm.swallow.colorbar elm.icon elm.icon.sweep";
   SCRIPTS_LIST_SWEEP
   parts {
      PARTS_LIST_SWEEP
   }
   programs {
      PROGRAMS_LIST_SWEEP
   }
}

group { name: "elm/genlist/item/email/group/default";
   PROLOG_LIST

   data.item: "texts" "elm.text.1 elm.text.2";

   parts {
      PART(RECT, "bg_clip",
         mouse_events: 0;
         description { state: "default" 0.0; }
         description { state: "decorate" 0.0;
            inherit: "default" 0.0;
            color: 0 0 0 0;
         }
         description { state: "reorder" 0.0;
            inherit: "default" 0.0;
            color: 0 0 0 0;
         }
         description { state: "decorate_reorder" 0.0;
            inherit: "default" 0.0;
            color: 0 0 0 0;
         }
      )
      PART(RECT, "bg",
         clip_to: "bg_clip";
         description { state: "default" 0.0;
            color: LIST_GROUPINDEX_BG_NORMAL_COLOR;
         }
         description { state: "selected" 0.0;
            color: LIST_GROUPINDEX_BG_PRESSED_COLOR;
         }
      )
      PART_LIST_PADDINGS(
         LIST_PADDING_LEFT_SIZE, LIST_EMAIL_GROUP_PADDING_RIGHT_SIZE,
         LIST_EMAIL_GROUP_PADDING_TOP_SIZE, LIST_EMAIL_GROUP_PADDING_BOTTOM_SIZE
      )
      PART_LIST_BOTTOMLINE
      PART(TEXTBLOCK, "elm.text.1",
         DESC_LRTB("elm.padding.left", "elm.text.2.left", "elm.padding.top", "elm.padding.bottom",
            min: 0 LIST_EMAIL_GROUP_HEIGHT;
            PARAM_TEXT("list_email_address_style",)
         )
      )
      PART(SPACER, "elm.text.2.left",
         DESC_RTB("elm.text.2", "elm.padding.top", "elm.padding.bottom",
            min: LIST_EMAIL_GROUP_PADDING_SIZE 0;
            max: LIST_EMAIL_GROUP_PADDING_SIZE -1;
         )
      )
      PART(TEXTBLOCK, "elm.text.2",
         DESC_RTB("elm.padding.right", "elm.padding.top", "elm.padding.bottom",
            min: 0 LIST_EMAIL_GROUP_HEIGHT;
            PARAM_TEXT("list_email_number_style", min: 1 1; )
         )
      )
   }
   PROGRAMS_LIST( target: "elm.text.1"; target: "elm.text.2";)
}

// FIXME: weahter list GUI is not defined yet.
group { name: "elm/genlist/item/weather/default";
   PROLOG_LIST

   data.item: "texts" "elm.text.1 elm.text.2 elm.text.3";
   data.item: "contents" "elm.icon";

   parts {
      PART_LIST_BG
      PART_LIST_PADDINGS(
         LIST_WEATHER_PADDING_LEFT_SIZE, LIST_WEATHER_PADDING_RIGHT_SIZE,
         LIST_2LINE_PADDING_TOP_SIZE, LIST_2LINE_PADDING_BOTTOM_SIZE
      )
      PART_LIST_BOTTOMLINE
      PART(TEXTBLOCK, "elm.text.1",
         DESC_LRTB("elm.padding.left", "elm.padding.icon.left", "elm.padding.top", "elm.text.2",
            min: 74 0;
            PARAM_TEXT("list_text_main_normal",)
         ) DESCRIPIONS_TEXT("list_text_main_dim", "list_text_main_normal")
      )
      PART(TEXTBLOCK, "elm.text.2",
         DESC_LB("elm.padding.left", "elm.padding.bottom",
            min: 74 0;
            PARAM_TEXT("list_text_sub_normal",)
         ) DESCRIPIONS_TEXT("list_text_sub_dim", "list_text_sub_normal")
      )
      PART(SPACER, "elm.padding.icon.left",
         DESC_L("elm.text.2",
           min: 4 0;
           max: 4 -1;)
      )
      PART(SWALLOW, "elm.icon",
         DESC_L("elm.padding.icon.left",
           min: 78 82;
           max: 78 82;)
      )
      PART(TEXTBLOCK, "elm.text.3",
         DESC_LR( "elm.icon", "elm.padding.right",
            PARAM_TEXT("list_text_main_normal",)
         ) DESCRIPIONS_TEXT("list_text_main_dim", "list_text_main_normal")
      )
   }
   PROGRAMS_LIST( target: "elm.text.1"; target: "elm.text.2";
                  target: "elm.text.3"; target: "elm.icon";)
}

group { name: "elm/genlist/item/weather/time/default";
   PROLOG_LIST

   data.item: "texts" "elm.text";

   parts {
      PART_LIST_BG
      PART_LIST_PADDINGS(
         LIST_PADDING_LEFT_SIZE, LIST_PADDING_RIGHT_SIZE,
         0, 0
      )
      PART_LIST_BOTTOMLINE
      PART(TEXTBLOCK, "elm.text",
         DESC_LRTB("elm.padding.left", "elm.padding.right", "elm.padding.top", "elm.padding.bottom",
            min: 0 LIST_WEATHER_TIME_HEIGHT;
            PARAM_TEXT("list_weather_time_style",)
         )
      )
   }
   PROGRAMS_LIST( target: "elm.text"; )
}

group { name: "elm/genlist/item/noti/default";
   PROLOG_LIST
   data.item: "texts" "elm.text elm.text.noti";
   data.item: "contents" "elm.icon elm.icon.noti";

   parts {
      PART_LIST_BG
      PART_LIST_PADDINGS(
         LIST_PADDING_LEFT_SIZE, LIST_PADDING_RIGHT_SIZE,
         LIST_1LINE_PADDING_TOP_SIZE, LIST_1LINE_PADDING_BOTTOM_SIZE
      )
      PART_LIST_BOTTOMLINE
      PART(SWALLOW, "elm.icon",
         DESC_L("elm.padding.left",
           fixed: 1 1;
           align: 0.0 0.5;
           min: LIST_NOTI_ICON_SIZE;
           max: LIST_NOTI_ICON_SIZE;
         )
      )
      PART(SPACER, "elm.padding.icon.right",
         DESC_L("elm.icon",
         min: LIST_PADDING_DEFAULT_SIZE 0; max: LIST_PADDING_DEFAULT_SIZE -1; )
      )
      PART(TEXTBLOCK, "elm.text",
         DESC_LRTB("elm.padding.icon.right", "elm.padding.icon.noti.left", "elm.padding.top", "elm.padding.bottom",
            min: 0 0;
            PARAM_TEXT("list_text_main_normal",)
         ) DESCRIPIONS_TEXT("list_text_main_dim", "list_text_main_normal")
      )
      PART(SPACER, "elm.padding.icon.noti.left",
         DESC_R("elm.icon.noti",
         min: LIST_PADDING_DEFAULT_SIZE 0; max: LIST_PADDING_DEFAULT_SIZE -1; )
      )
      PART(SWALLOW, "elm.icon.noti",
         DESC_R("elm.padding.right",
            min: 0 LIST_NOTI_NUMBER_ICON_HEIGHT;
         )
      )
      PART(TEXTBLOCK, "elm.text.noti",
         mouse_events: 0;
         DESC_TO("elm.icon.noti",
            min: 0 LIST_NOTI_NUMBER_ICON_HEIGHT;
            PARAM_TEXT("list_noti_style", min: 1 1;)
         )
      )
   }
   PROGRAMS_LIST( target: "elm.text"; target: "elm.text.noti";
                 target: "elm.icon"; target: "elm.icon.noti"; )
}

group { name: "elm/genlist/item/noti/sweep/default";
   inherit: "elm/genlist/item/noti/default";
   data.item: "texts" "elm.text elm.text.noti elm.text.sweep";
   data.item: "contents" "elm.icon elm.icon.noti elm.icon.sweep";
   SCRIPTS_LIST_SWEEP
   parts {
      PARTS_LIST_SWEEP
   }
   programs {
      PROGRAMS_LIST_SWEEP
   }
}

group { name: "elm/genlist/item/hidden/default";
   inherit: "elm/genlist/item/1icon/no_padding/default";

   parts {
      PART_LIST_PADDINGS(0, 0, 0, 0)
      part { name: "elm.icon";
         description { state: "default" 0.0;
            min: 0 LIST_HIDDEN_HEIGHT;
         }
      }
   }
}

group { name: "elm/genlist/item/svoice/default";
   PROLOG_LIST
   data.item: "texts" "elm.text.1 elm.text.2 elm.text.3";
   data.item: "contents" "elm.icon";

   parts {
      PART_LIST_BG
      PART_LIST_PADDINGS(
         LIST_PADDING_LEFT_SIZE, LIST_PADDING_RIGHT_SIZE,
         LIST_2LINE_PADDING_TOP_SIZE, LIST_2LINE_PADDING_BOTTOM_SIZE
      )
      PART_LIST_BOTTOMLINE
      PART(TEXTBLOCK, "elm.text.1",
         DESC_LRTB("elm.padding.left", "elm.padding.icon.left", "elm.padding.top", "elm.text.2",
            min: 0 0;
            PARAM_TEXT("list_text_main_normal",)
         ) DESCRIPIONS_TEXT("list_text_main_dim", "list_text_main_normal")
      )
      PART(SPACER, "elm.padding.icon.left",
         DESC_R("elm.icon",
            min: LIST_PADDING_R_ICON_DEFAULT_SIZE 0;  max: LIST_PADDING_R_ICON_DEFAULT_SIZE -1;
         )
       )
      PART(SWALLOW, "elm.icon",
         DESC_RT("elm.padding.right", "elm.padding.top",
         )
      )
      PART(TEXTBLOCK, "elm.text.2",
         DESC_LRB("elm.padding.left", "elm.text.3", "elm.padding.bottom",
            min: 0 0;
            PARAM_TEXT("list_text_sub_normal",)
         ) DESCRIPIONS_TEXT("list_text_sub_dim", "list_text_sub_normal")
      )
      PART(TEXTBLOCK, "elm.text.3",
         DESC_RB("elm.padding.right", "elm.padding.bottom",
            min: LIST_SVOICE_TIME_TEXT_WIDTH 0;
            PARAM_TEXT("list_text_sub_svoice",)
         ) DESCRIPIONS_TEXT("list_text_sub_dim_svoice", "list_text_sub_svoice")
      )
   }
   PROGRAMS_LIST( target: "elm.text.1"; target: "elm.text.2"; target: "elm.text.3";
      target: "elm.icon"; )
}

group { name: "elm/genlist/item/shealth/default";
   PROLOG_LIST
   data.item: "texts" "elm.text.1 elm.text.2 elm.text.3";

   parts {
      PART_LIST_BG
      PART_LIST_PADDINGS(
         LIST_PADDING_LEFT_SIZE, LIST_PADDING_RIGHT_SIZE,
         LIST_2LINE_PADDING_TOP_SIZE - 1, LIST_2LINE_PADDING_BOTTOM_SIZE - 1
      )
      PART_LIST_BOTTOMLINE
      PART(TEXTBLOCK, "elm.text.1",
         DESC_LRTB("elm.text.3", "elm.padding.right", "elm.padding.top", "elm.text.2",
            PARAM_TEXT("list_text_shealth_normal",)
         ) DESCRIPIONS_TEXT("list_text_shealth_dim", "list_text_shealth_normal")
      )
      PART(TEXTBLOCK, "elm.text.2",
         DESC_LRB("elm.padding.left", "elm.padding.right", "elm.padding.bottom",
            PARAM_TEXT("list_text_sub_shealth_normal",)
         ) DESCRIPIONS_TEXT("list_text_sub_shealth_dim", "list_text_sub_shealth_normal")
      )
      PART(TEXTBLOCK, "elm.text.3",
      DESC_LRTB("elm.padding.left", "elm.padding.right", "elm.padding.top", "elm.text.2",
            align: 0.0 0.5;
            PARAM_TEXT("list_text_main_normal", max: 1 0;)
         ) DESCRIPIONS_TEXT("list_text_main_dim", "list_text_main_normal")
      )
   }
   PROGRAMS_LIST( target: "elm.text.1"; target: "elm.text.2"; target: "elm.text.3"; )
}

group { name: "elm/genlist/item/shealth.2text.1icon/default";
   PROLOG_LIST
   data.item: "texts" "elm.text.1 elm.text.2";
   data.item: "contents" "elm.swallow.colorbar elm.icon";

   parts {
      PART_LIST_BG
      PART_LIST_PADDINGS(
         LIST_PADDING_LEFT_SIZE, LIST_PADDING_R_ICON_RIGHT_SIZE,
         LIST_2LINE_PADDING_TOP_SIZE, LIST_2LINE_PADDING_BOTTOM_SIZE
      )
      PART_LIST_BOTTOMLINE
      PART(TEXTBLOCK, "elm.text.2",
         DESC_LRT("elm.padding.left", "elm.padding.icon.left", "elm.padding.top",
            min: 0 0;
            PARAM_TEXT("list_text_sub_normal",)
         ) DESCRIPIONS_TEXT("list_text_sub_dim", "list_text_sub_normal")
      )
      PART(TEXTBLOCK, "elm.text.1",
         DESC_LRTB("elm.padding.left", "elm.padding.icon.left","elm.text.2", "elm.padding.bottom",
            min: 0 0;
            PARAM_TEXT("list_text_main_normal",)
         ) DESCRIPIONS_TEXT("list_text_main_dim", "list_text_main_normal")
      )
      PART(SPACER, "elm.padding.icon.left",
         DESC_R("elm.icon",
            min: LIST_PADDING_R_ICON_DEFAULT_SIZE 0;  max: LIST_PADDING_R_ICON_DEFAULT_SIZE -1;
         )
       )
      PART(SWALLOW, "elm.icon", DESC_R("elm.padding.right", ) )
   }
   PROGRAMS_LIST( target: "elm.text.1"; target: "elm.text.2";
      target: "elm.icon"; )
}

group { name: "elm/genlist/item/schedules/past/default";
   inherit: "elm/genlist/item/2text/default";

   parts {
      PART(TEXTBLOCK, "elm.text.1",
         DESC_LRTB("elm.padding.left", "elm.icon.noti", "elm.padding.top", "elm.text.2",
            min: 0 0;
            PARAM_TEXT("list_text_main_dim",)
         ) DESCRIPIONS_TEXT("list_text_main_dim", "list_text_main_dim")
      )
      PART(TEXTBLOCK, "elm.text.2",
         DESC_LRB("elm.padding.left", "elm.padding.right", "elm.padding.bottom",
            min: 0 0;
            PARAM_TEXT("list_text_sub_dim",)
         ) DESCRIPIONS_TEXT("list_text_sub_dim", "list_text_sub_dim")
      )
   }
   PROGRAMS_LIST( target: "elm.text.1"; target: "elm.text.2";
                 target: "elm.text.noti"; target: "elm.icon.noti";)
}

group { name: "elm/genlist/item/schedules_widget/default";
   inherit: "elm/genlist/item/2text/default";
   PROLOG_LIST
   data.item: "texts" "elm.text.1 elm.text.2";
   data.item: "contents" "elm.swallow.colorbar";
   parts {
      PART(RECT, "bg",
            description { state: "selected" 0.0;
         inherit: "default" 0.0;
         color: LIST_SCHEDULES_BG_PRESSED_COLOR;
         }
      )
      PART(TEXTBLOCK, "elm.text.1",
         DESC_LRTB("elm.padding.left", "elm.icon.noti", "elm.padding.top", "elm.text.2",
            min: 0 0;
            PARAM_TEXT("list_text_main_normal_schedules",)
         ) DESCRIPIONS_TEXT("list_text_main_dim_schedules", "list_text_main_normal_schedules")
      )
      PART(TEXTBLOCK, "elm.text.2",
         DESC_LRB("elm.padding.left", "elm.padding.right", "elm.padding.bottom",
            min: 0 0;
            PARAM_TEXT("list_text_sub_normal_schedules",)
         ) DESCRIPIONS_TEXT("list_text_sub_dim_schedules", "list_text_sub_normal_schedules")
      )
      PART(RECT, "bottom_line",
         description { state: "default" 0.0;
            color: LIST_SCHEDULES_LINE_COLOR;
         }
      )
   }
   PROGRAMS_LIST( target: "elm.text.1"; target: "elm.text.2"; )
}

group { name: "elm/genlist/item/schedules_widget/past/default";
   inherit: "elm/genlist/item/schedules_widget/default";
   parts {
      PART(TEXTBLOCK, "elm.text.1",
         DESC_LRTB("elm.padding.left", "elm.icon.noti", "elm.padding.top", "elm.text.2",
            min: 0 0;
            PARAM_TEXT("list_text_main_dim_schedules",)
         ) DESCRIPIONS_TEXT("list_text_main_dim_schedules", "list_text_main_dim_schedules")
      )
      PART(TEXTBLOCK, "elm.text.2",
         DESC_LRB("elm.padding.left", "elm.padding.right", "elm.padding.bottom",
            min: 0 0;
            PARAM_TEXT("list_text_sub_dim_schedules",)
         ) DESCRIPIONS_TEXT("list_text_sub_dim_schedules", "list_text_sub_dim_schedules")
      )
   }
}

//logs
group { name: "elm/genlist/item/logs/default";
   PROLOG_LIST
   data.item: "texts" "elm.text";
   data.item: "contents" "elm.icon.1 elm.icon.2";

   parts {
      PART_LIST_BG
      PART_LIST_PADDINGS(
         LIST_PADDING_LEFT_SIZE, LIST_PADDING_RIGHT_SIZE,
         LIST_1LINE_PADDING_TOP_SIZE, LIST_1LINE_PADDING_BOTTOM_SIZE
      )
      PART_LIST_BOTTOMLINE
      PART(SPACER, "elm.padding.center",
         description { state: "default" 0.0;
            fixed: 1 1;
            align: 0.5 0.5;
            min: 0 0;
            max: -1 0;
         }
      )
      PART(SWALLOW, "elm.icon.1",
         DESC_LB("elm.padding.left", "elm.padding.center",
            fixed: 1 1;
            min: LIST_LOGS_ICON_SIZE;
            max: LIST_LOGS_ICON_SIZE;
         )
      )
      PART(SWALLOW, "elm.icon.2",
         DESC_LT("elm.padding.left", "elm.padding.center",
            fixed: 1 1;
            min: LIST_LOGS_ICON_SIZE;
            max: LIST_LOGS_ICON_SIZE;
         )
      )
      PART(SPACER, "elm.padding.icon.right",
         DESC_L("elm.icon.1", min: LIST_LOGS_PADDING_DEFAULT_SIZE 0; max: LIST_LOGS_PADDING_DEFAULT_SIZE -1; )
      )
      PART(TEXTBLOCK, "elm.text",
         DESC_LRTB("elm.padding.icon.right", "elm.padding.right", "elm.padding.top", "elm.padding.bottom",
            PARAM_TEXT("list_logs_style",)
         )
      )
   }
   PROGRAMS_LIST( target: "elm.text"; target: "elm.icon.1"; target: "elm.icon.2";)
}

group { name: "elm/genlist/item/logs/swipe/default";
   inherit: "elm/genlist/item/logs/default";
   SCRIPTS_LIST_SWIPE
   IMAGES_LIST_SWIPE

   data.item: "texts" "elm.text elm.text.swipe.left elm.text.swipe.right";
   data.item: "contents" "elm.icon.1 elm.icon.2 elm.icon.swipe.left elm.icon.swipe.right";

   parts {
      PARTS_LIST_SWIPE
   }
   PROGRAMS_LIST_SWIPE
}

group { name: "elm/genlist/item/logs/swipe_left/default";
   inherit: "elm/genlist/item/logs/swipe/default";

   data.item: "texts" "elm.text elm.text.swipe.left";
   data.item: "contents" "elm.icon.1 elm.icon.2 elm.icon.swipe.left";

   parts {
      PARTS_LIST_SWIPE_LEFT
   }
   PROGRAMS_LIST_SWIPE_LEFT
}

group { name: "elm/genlist/item/logs/swipe_right/default";
   inherit: "elm/genlist/item/logs/swipe/default";

   data.item: "texts" "elm.text elm.text.swipe.right";
   data.item: "contents" "elm.icon.1 elm.icon.2 elm.icon.swipe.right";

   parts {
      PARTS_LIST_SWIPE_RIGHT
   }
   PROGRAMS_LIST_SWIPE_RIGHT
}

group { name: "elm/genlist/item/logs.2text.2icon/default";
   PROLOG_LIST
   data.item: "texts" "elm.text.1 elm.text.3";
   data.item: "contents" "elm.icon.1 elm.icon.2";

   parts {
      PART_LIST_BG
      PART_LIST_PADDINGS(
         LIST_PADDING_LEFT_SIZE, LIST_PADDING_RIGHT_SIZE,
         LIST_2LINE_PADDING_TOP_SIZE, LIST_2LINE_PADDING_BOTTOM_SIZE
      )
      PART_LIST_BOTTOMLINE
      PART(TEXTBLOCK, "elm.text.1",
         DESC_LRTB("elm.padding.left", "elm.padding.right", "elm.padding.top", "elm.text.3",
            min: 0 0;
            PARAM_TEXT("list_logs_style",)
         )
      )
      PART(SWALLOW, "elm.icon.1",
         DESC_LT("elm.padding.left", "elm.text.1",
           fixed: 1 1;
           min: LIST_LOGS1_ICON_SIZE;
           max: LIST_LOGS1_ICON_SIZE;
         )
      )
      PART(SWALLOW, "elm.icon.2",
         DESC_LT("elm.icon.1", "elm.text.1",
           fixed: 1 1;
           min: LIST_LOGS1_ICON_SIZE;
           max: LIST_LOGS1_ICON_SIZE;
         )
      )
      PART(TEXTBLOCK, "elm.text.3",
         DESC_RB("elm.padding.right", "elm.padding.bottom",
            min: 0 0;
            PARAM_TEXT("list_logs_sub_style", min: 1 1;)
         )
      )
   }
   PROGRAMS_LIST( target: "elm.text.1"; target: "elm.text.3"; target: "elm.icon.1"; target: "elm.icon.2";)
}

group { name: "elm/genlist/item/logs.2text.2icon/swipe/default";
   inherit: "elm/genlist/item/logs.2text.2icon/default";
   SCRIPTS_LIST_SWIPE
   IMAGES_LIST_SWIPE

   data.item: "texts" "elm.text.1 elm.text.3 elm.text.swipe.left elm.text.swipe.right";
   data.item: "contents" "elm.icon.1 elm.icon.2 elm.icon.swipe.left elm.icon.swipe.right";

   parts {
      PARTS_LIST_SWIPE
   }
   PROGRAMS_LIST_SWIPE
}

group { name: "elm/genlist/item/logs.2text.2icon/swipe_left/default";
   inherit: "elm/genlist/item/logs.2text.2icon/swipe/default";

   data.item: "texts" "elm.text.1 elm.text.3 elm.text.swipe.left";
   data.item: "contents" "elm.icon.1 elm.icon.2 elm.icon.swipe.left";

   parts {
      PARTS_LIST_SWIPE_LEFT
   }
   PROGRAMS_LIST_SWIPE_LEFT
}

group { name: "elm/genlist/item/logs.2text.2icon/swipe_right/default";
   inherit: "elm/genlist/item/logs.2text.2icon/swipe/default";

   data.item: "texts" "elm.text.1 elm.text.3 elm.text.swipe.right";
   data.item: "contents" "elm.icon.1 elm.icon.2 elm.icon.swipe.right";

   parts {
      PARTS_LIST_SWIPE_RIGHT
   }
   PROGRAMS_LIST_SWIPE_RIGHT
}

group { name: "elm/genlist/item/logs.3text.2icon/default";
   inherit: "elm/genlist/item/logs.2text.2icon/default";
   data.item: "texts" "elm.text.1 elm.text.2 elm.text.3";

   parts {
      PART(TEXTBLOCK, "elm.text.1",
         DESC_LRTB("elm.padding.left", "elm.padding.text2.right", "elm.padding.top", "elm.text.3",
            min: 0 0;
            PARAM_TEXT("list_logs_style",)
         )
      )
      PART(TEXTBLOCK, "elm.text.2",
         DESC_RTB("elm.padding.right", "elm.padding.top", "elm.text.3",
            min: 0 0;
            PARAM_TEXT("list_logs2_style", min: 1 1;)
         )
      )
      PART(SPACER, "elm.padding.text2.right",
         DESC_R("elm.text.2", min: LIST_LOGS1_TEXT_RIGHT_PADDING_SIZE 0; max: LIST_LOGS1_TEXT_RIGHT_PADDING_SIZE -1;)
      )
   }
   PROGRAMS_LIST( target: "elm.text.1"; target: "elm.text.2"; target: "elm.text.3"; target: "elm.icon.1"; target: "elm.icon.2";)
}

group { name: "elm/genlist/item/logs.3text.2icon/swipe/default";
   inherit: "elm/genlist/item/logs.3text.2icon/default";
   SCRIPTS_LIST_SWIPE
   IMAGES_LIST_SWIPE

   data.item: "texts" "elm.text.1 elm.text.2 elm.text.3 elm.text.swipe.left elm.text.swipe.right";
   data.item: "contents" "elm.icon.1 elm.icon.2 elm.icon.swipe.left elm.icon.swipe.right";

   parts {
      PARTS_LIST_SWIPE
   }
   PROGRAMS_LIST_SWIPE
}

group { name: "elm/genlist/item/logs.3text.2icon/swipe_left/default";
   inherit: "elm/genlist/item/logs.3text.2icon/swipe/default";

   data.item: "texts" "elm.text.1 elm.text.2 elm.text.3 elm.text.swipe.left";
   data.item: "contents" "elm.icon.1 elm.icon.2 elm.icon.swipe.left";

   parts {
      PARTS_LIST_SWIPE_RIGHT
   }
   PROGRAMS_LIST_SWIPE_RIGHT
}

group { name: "elm/genlist/item/logs.3text.2icon/swipe_right/default";
   inherit: "elm/genlist/item/logs.3text.2icon/swipe/default";

   data.item: "texts" "elm.text.1 elm.text.2 elm.text.3 elm.text.swipe.right";
   data.item: "contents" "elm.icon.1 elm.icon.2 elm.icon.swipe.right";

   parts {
      PARTS_LIST_SWIPE_RIGHT
   }
   PROGRAMS_LIST_SWIPE_RIGHT
}

group { name: "elm/genlist/item/logs.1text.1icon.divider/default";
   inherit: "elm/genlist/item/1text.1icon.divider/default";

   parts {
      PART(RECT, "bg",
         clip_to: "bg_clip";
         description { state: "default" 0.0;
            color: ACTIONBAR_BG_COLOR;
            }
      )
      PART(RECT, "elm.divider",
         DESC_R("elm.icon",
            align: 0 0.5;
            min: 1 LIST_DIVIDER_HEIGHT;
            max: 1 LIST_DIVIDER_HEIGHT;
            color: LIST_SWEEP_DIVIDER_COLOR;
         )
      )
      PART(TEXTBLOCK, "elm.text.1",
         DESC_LRTB("elm.padding.left", "elm.padding.divider.left", "elm.padding.top", "elm.padding.bottom",
            PARAM_TEXT("list_logs_action_bar_style",)
         ) DESCRIPIONS_TEXT("list_logs_action_bar_style", "list_logs_action_bar_style")
      )
   }
}

group { name: "elm/genlist/item/logs.2text.1icon.divider/default";
   inherit: "elm/genlist/item/2text.1icon.divider/default";

   parts {
      PART(RECT, "bg",
         clip_to: "bg_clip";
         description { state: "default" 0.0;
            color: ACTIONBAR_BG_COLOR;
            }
      )
      PART(RECT, "elm.divider",
         DESC_R("elm.icon",
            align: 0 0.5;
            min: 1 LIST_DIVIDER_HEIGHT;
            max: 1 LIST_DIVIDER_HEIGHT;
            color: LIST_SWEEP_DIVIDER_COLOR;
         )
      )
      PART(TEXTBLOCK, "elm.text.1",
         DESC_LRTB("elm.padding.left", "elm.padding.divider.left", "elm.padding.top", "elm.text.2",
            min: 0 0;
            PARAM_TEXT("list_logs_action_bar_style",)
         ) DESCRIPIONS_TEXT("list_logs_action_bar_style", "list_logs_action_bar_style")
      )
      PART(TEXTBLOCK, "elm.text.2",
         DESC_LRB("elm.padding.left", "elm.padding.divider.left", "elm.padding.bottom",
            min: 0 0;
            PARAM_TEXT("list_logs_action_bar_sub_style",)
         ) DESCRIPIONS_TEXT("list_logs_action_bar_sub_style", "list_logs_action_bar_sub_style")
      )
   }
}

group { name: "elm/genlist/item/logs.1text/default";
   inherit: "elm/genlist/item/1text/default";

   parts {
      PART(RECT, "bg",
         clip_to: "bg_clip";
         description { state: "default" 0.0;
            color: ACTIONBAR_BG_COLOR;
            }
      )
      PART(TEXTBLOCK, "elm.text",
         DESC_LRTB("elm.padding.left", "elm.padding.right", "elm.padding.top", "elm.padding.bottom",
            PARAM_TEXT("list_logs_action_bar_style",)
         ) DESCRIPIONS_TEXT("list_logs_action_bar_style", "list_logs_action_bar_style")
      )
   }
}

// device_option
group { name: "elm/genlist/item/device_option.1text.1icon/default";
   inherit: "elm/genlist/item/1text.1icon/default";

   parts {
      PART(SWALLOW, "elm.icon",
         DESC_L("elm.padding.left",
           min: LIST_DEVICE_OPTION_ICON_MIN_MAX_SIZE;
           max: LIST_DEVICE_OPTION_ICON_MIN_MAX_SIZE;
           fixed: 1 1;
         )
      )
      PART(SPACER, "elm.padding.icon.right",
         DESC_L("elm.icon", min: LIST_PADDING_R_ICON_DEFAULT_SIZE 0; max: LIST_PADDING_R_ICON_DEFAULT_SIZE -1; )
      )
      PART(TEXTBLOCK, "elm.text",
         DESC_LR("elm.padding.icon.right", "elm.padding.right",
            min: 0 LIST_DEVICE_OPTION_HEIGHT;
            PARAM_TEXT("list_device_option_main_normal",)
         ) DESCRIPIONS_TEXT("list_device_option_main_normal", "list_device_obtion_main_normal")
      )
   }
}

group { name: "elm/genlist/item/device_option.2icon.divider/default";
   inherit: "elm/genlist/item/1icon/default";
   data.item: "contents" "elm.icon elm.icon.1";

   parts {
      PART(RECT, "bg",
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
         }
      )
      PART_LIST_PADDINGS( 0, 0, 0, 0)
      PART(SWALLOW, "elm.icon",
         DESC_RTB("elm.padding.divider.line", "elm.padding.top","elm.padding.bottom",
           fixed: 1 0;
           min: LIST_DEVICE_OPTION_ICON1_MIN_MAX_SIZE;
           max: LIST_DEVICE_OPTION_ICON1_MIN_MAX_SIZE;
         )
      )
      PART(SWALLOW, "elm.icon.1",
         DESC_LTB("elm.padding.divider.line", "elm.padding.top","elm.padding.bottom",
           fixed: 1 0;
           min: LIST_DEVICE_OPTION_ICON1_MIN_MAX_SIZE;
           max: LIST_DEVICE_OPTION_ICON1_MIN_MAX_SIZE;
         )
      )
      PART(RECT, "elm.padding.divider.line",
         description { state: "default" 0.0;
            min: LIST_DEVICE_OPTION_ICON_DIVIDER_MIN_MAX_INC;
            max: LIST_DEVICE_OPTION_ICON_DIVIDER_MIN_MAX_INC;
            fixed: 1 1;
            color: LIST_LINE_COLOR;
         }
      )
   }
   PROGRAMS_LIST(target: "elm.icon"; target: "elm.icon.1";)
}

// Settings
group { name: "elm/genlist/item/settings.1text.1icon.1/default";
   inherit: "elm/genlist/item/1text.1icon.1/default";
   programs{
      program { name: "play_sound";
         signal: "elm,state,clicked";
         source: "elm";
         script {
         }
      }
   }
}
